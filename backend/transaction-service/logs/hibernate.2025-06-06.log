2025-06-06 09:10:33 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-06-06 09:10:33 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-06 09:10:33 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-06 09:10:33 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-06 09:10:33 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-06 09:10:33 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-06 09:10:33 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-06 09:10:33 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-06 09:10:33 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-06 09:10:33 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-06 09:10:33 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-06 09:10:33 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-06 09:10:33 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-06 09:10:33 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-06 09:10:44 [restartedMain] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@75e44db0
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/java-banking-phase2/backend/transaction-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.transaction_service.entity.Transaction]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-06-06 09:10:44 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-06-06 09:10:44 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3b685418 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3b685418 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3b685418 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@376208ba MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@376208ba MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1f0ace3 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1f0ace3 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3e9c35fc MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3e9c35fc MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@47ad6ea3 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@47ad6ea3 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@47ad6ea3 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@602d8934 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@602d8934 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@602d8934 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@643ea666 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@643ea666 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@3bd25cc8 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@17a6f567 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@17a6f567 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1bceaa8e MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@ad22207 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@234f1b89 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@234f1b89 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@234f1b89 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3e2df4a MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@3e2df4a MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3e2df4a MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6d968f62 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6d968f62 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6d968f62 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@764f5acd MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@764f5acd MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@764f5acd MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2d8794de MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2d8794de MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2d8794de MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@380a06ab MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@380a06ab MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@613e6357 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@613e6357 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@6dabc48f MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@6dabc48f MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6dabc48f MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7c9b8c80 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@144ce2e6 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@144ce2e6 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6fa0fe3 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@35463c0f MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@35463c0f MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@35463c0f MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@151949ab MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@66b1d23c MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@30e24c1e MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@3440b849 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3440b849 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6b4beb7b MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6b4beb7b MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@383e41c MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@21a3dace MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@1090bc43 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@24349d19 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@388b2e87 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@741e6f2 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@12a630fd MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@12a630fd MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@127aabe5 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@127aabe5 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7364503b MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7364503b MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7b1a5ed3 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7b1a5ed3 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5898a895 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5898a895 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1ffa15e0 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4e4e6bac MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@670b5870 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@670b5870 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7aca8804 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@35d0c7a8 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@87ed9b5 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@358bd812 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@358bd812 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1b2fec0f MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@28719545 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@56bc528f MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@56bc528f MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@3d1c5b02 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3d1c5b02 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@59b7973a MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@59b7973a MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@59b7973a MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7dc8faf4 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7dc8faf4 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7dc8faf4 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4954e7e8 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@16cf618b MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@73242a2f MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@73242a2f MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@498171e5 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@498171e5 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@498171e5 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2704b49a MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4aaa5ac8 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@180d64e0 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@180d64e0 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5a41305d MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5a41305d MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5a41305d MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5863ffeb MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5863ffeb MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@40878235 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@40878235 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@33dec4a1 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@33dec4a1 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@604ed95f MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@604ed95f MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@2715ee1a MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2715ee1a MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@5bff46e7 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1ec16af5 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@411befcc MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@411befcc MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5ae05c81 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6d3911c2 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@41b645dc MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@67abf1a1 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3f77bd81 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1a650cac MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@690e2299 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5190f0e0 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5389c4e6 MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@37bf4b0d] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@37bf4b0d) [was null] MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@52b99b73] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@70b94f8d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2977434d] MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@37bf4b0d] MDC:[traceId=, spanId=]
2025-06-06 09:10:45 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@37bf4b0d] MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@31ee371d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2b67ab25) MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@e2a4bb8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@39bf80d5) MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@79291e20) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6f81aca3) MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@332a4d60) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@76d6daf8) MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@473f121c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@25394aec) MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@44195266) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4d85107) MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3bc80c72) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@54c95fcd) MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5a4dad50) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1cdb8f77) MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@678bbb02) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7922a709) MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@469bb528 MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@5ae05c81` MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5f0086ec] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@221f2636] MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Transaction MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.example.transaction_service.entity.Transaction on table tbl_transaction MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:id] MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.id MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...) MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property amount with lazy=false MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:amount] MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for amount MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.amount MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property amount MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property bankType with lazy=false MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:bankType] MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for bankType MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.bank_type MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property bankType MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:createdAt] MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for createdAt MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.created_at MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property createdAt MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property createdBy with lazy=false MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:createdBy] MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for createdBy MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.created_by MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property createdBy MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property currency with lazy=false MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:currency] MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for currency MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.currency MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property currency MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property description with lazy=false MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:description] MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for description MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.description MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property description MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankCode with lazy=false MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankCode] MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankCode MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_code MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankCode MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankName with lazy=false MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankName] MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankName MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_name MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankName MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property failedReason with lazy=false MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:failedReason] MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for failedReason MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.failed_reason MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property failedReason MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:fromAccountNumber] MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.from_account_number MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property fromAccountNumber MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property referenceCode with lazy=false MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:referenceCode] MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for referenceCode MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.reference_code MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property referenceCode MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property status with lazy=false MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:status] MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for status MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.status MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property status MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property timestamp with lazy=false MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:timestamp] MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for timestamp MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.timestamp MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property timestamp MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property toAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:toAccountNumber] MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for toAccountNumber MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.to_account_number MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property toAccountNumber MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property type with lazy=false MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:type] MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for type MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.type MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property type MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:updatedAt] MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for updatedAt MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.updated_at MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property updatedAt MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property updatedBy with lazy=false MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:updatedBy] MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for updatedBy MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.updated_by MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property updatedBy MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.example.transaction_service.entity MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding touchForUpdate as PreUpdate callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding touchForCreate as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bankType MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for createdAt MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for createdBy MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for currency MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for description MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankCode MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankName MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for failedReason MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for referenceCode MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for timestamp MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for toAccountNumber MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for type MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for updatedAt MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for updatedBy MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_transaction] MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {jdk.tls.rejectClientInitiatedRenegotiation=true, java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@27ac3bc1, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\java-banking-phase2\backend\transaction-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.11\spring-boot-starter-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.11\spring-boot-starter-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.11\spring-boot-starter-logging-3.3.11.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.11\spring-boot-actuator-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.11\spring-boot-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.13\micrometer-observation-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.13\micrometer-commons-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.13\micrometer-jakarta9-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-core\1.13.13\micrometer-core-1.13.13.jar;C:\Users\A715-42G\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\A715-42G\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.11\spring-boot-starter-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.11\spring-boot-starter-aop-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.11\spring-boot-starter-jdbc-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.19\spring-jdbc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.11\spring-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.11\spring-data-commons-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.19\spring-orm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.19\spring-context-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.19\spring-tx-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.19\spring-beans-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.19\spring-aspects-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.11\spring-boot-starter-web-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.11\spring-boot-starter-json-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.11\spring-boot-starter-tomcat-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.40\tomcat-embed-core-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.40\tomcat-embed-websocket-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.19\spring-web-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.19\spring-webmvc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.19\spring-expression-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-devtools\3.3.11\spring-boot-devtools-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.11\spring-boot-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.11\spring-boot-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.19\spring-core-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.19\spring-jcl-6.1.19.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.11\spring-boot-starter-validation-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.0.2\springdoc-openapi-starter-webmvc-ui-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.0.2\springdoc-openapi-starter-webmvc-api-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.0.2\springdoc-openapi-starter-common-2.0.2.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.7\swagger-core-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.7\swagger-annotations-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.7\swagger-models-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\4.15.5\swagger-ui-4.15.5.jar;C:\Users\A715-42G\.m2\repository\org\webjars\webjars-locator-core\0.58\webjars-locator-core-0.58.jar;C:\Users\A715-42G\.m2\repository\io\github\classgraph\classgraph\4.8.149\classgraph-4.8.149.jar;D:\LT_Web\SpringBoot\java-banking-phase2\backend\common-service\target\classes;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-starter\3.3.2\dubbo-spring-boot-starter-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure\3.3.2\dubbo-spring-boot-autoconfigure-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure-compatible\3.3.2\dubbo-spring-boot-autoconfigure-compatible-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo\3.3.2\dubbo-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\javassist\javassist\3.30.2-GA\javassist-3.30.2-GA.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-all\4.1.119.Final\netty-all-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-dns\4.1.119.Final\netty-codec-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-haproxy\4.1.119.Final\netty-codec-haproxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http\4.1.119.Final\netty-codec-http-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http2\4.1.119.Final\netty-codec-http2-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-memcache\4.1.119.Final\netty-codec-memcache-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-mqtt\4.1.119.Final\netty-codec-mqtt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-redis\4.1.119.Final\netty-codec-redis-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-smtp\4.1.119.Final\netty-codec-smtp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-socks\4.1.119.Final\netty-codec-socks-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-stomp\4.1.119.Final\netty-codec-stomp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-xml\4.1.119.Final\netty-codec-xml-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-proxy\4.1.119.Final\netty-handler-proxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-ssl-ocsp\4.1.119.Final\netty-handler-ssl-ocsp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns\4.1.119.Final\netty-resolver-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-rxtx\4.1.119.Final\netty-transport-rxtx-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-sctp\4.1.119.Final\netty-transport-sctp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-udt\4.1.119.Final\netty-transport-udt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-kqueue\4.1.119.Final\netty-transport-classes-kqueue-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.119.Final\netty-resolver-dns-classes-macos-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-riscv64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\hessian-lite\4.0.3\hessian-lite-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\alibaba\fastjson2\fastjson2\2.0.53\fastjson2-2.0.53.jar;C:\Users\A715-42G\.m2\repository\com\google\protobuf\protobuf-java\3.25.5\protobuf-java-3.25.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-framework\5.1.0\curator-framework-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-client\5.1.0\curator-client-5.1.0.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\guava\27.0.1-jre\guava-27.0.1-jre.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\A715-42G\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\checkerframework\checker-qual\2.5.2\checker-qual-2.5.2.jar;C:\Users\A715-42G\.m2\repository\com\google\errorprone\error_prone_annotations\2.2.0\error_prone_annotations-2.2.0.jar;C:\Users\A715-42G\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\A715-42G\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.17\animal-sniffer-annotations-1.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper\3.7.1\zookeeper-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper-jute\3.7.1\zookeeper-jute-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\yetus\audience-annotations\0.12.0\audience-annotations-0.12.0.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler\4.1.119.Final\netty-handler-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-common\4.1.119.Final\netty-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver\4.1.119.Final\netty-resolver-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-buffer\4.1.119.Final\netty-buffer-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport\4.1.119.Final\netty-transport-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.119.Final\netty-transport-native-unix-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec\4.1.119.Final\netty-codec-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.119.Final\netty-transport-classes-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-recipes\5.5.0\curator-recipes-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-x-discovery\5.5.0\curator-x-discovery-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-vault-config\4.1.1\spring-cloud-starter-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.3.1\httpclient5-5.3.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.5\httpcore5-h2-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.5\httpcore5-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter\4.1.2\spring-cloud-starter-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-context\4.1.2\spring-cloud-context-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-commons\4.1.2\spring-cloud-commons-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-rsa\1.1.2\spring-security-rsa-1.1.2.jar;C:\Users\A715-42G\.m2\repository\org\bouncycastle\bcprov-jdk18on\1.77\bcprov-jdk18on-1.77.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-vault-config\4.1.1\spring-cloud-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\vault\spring-vault-core\3.1.1\spring-vault-core-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-redis\3.3.11\spring-boot-starter-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\lettuce\lettuce-core\6.3.2.RELEASE\lettuce-core-6.3.2.RELEASE.jar;C:\Users\A715-42G\.m2\repository\io\projectreactor\reactor-core\3.6.16\reactor-core-3.6.16.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-redis\3.3.11\spring-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-keyvalue\3.3.11\spring-data-keyvalue-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-oxm\6.1.19\spring-oxm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context-support\6.1.19\spring-context-support-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream\4.2.1\spring-cloud-stream-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-messaging\6.1.19\spring-messaging-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-core\6.3.9\spring-integration-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-jmx\6.3.9\spring-integration-jmx-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\retry\spring-retry\2.0.11\spring-retry-2.0.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-function-context\4.2.2\spring-cloud-function-context-4.2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-function-core\4.2.2\spring-cloud-function-core-4.2.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-joda\2.17.3\jackson-datatype-joda-2.17.3.jar;C:\Users\A715-42G\.m2\repository\joda-time\joda-time\2.10.14\joda-time-2.10.14.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-stream-kafka\4.2.1\spring-cloud-starter-stream-kafka-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka\4.2.1\spring-cloud-stream-binder-kafka-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka-core\4.2.1\spring-cloud-stream-binder-kafka-core-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-kafka\6.3.9\spring-integration-kafka-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\kafka\spring-kafka\3.2.8\spring-kafka-3.2.8.jar;C:\Users\A715-42G\.m2\repository\org\apache\kafka\kafka-clients\3.7.2\kafka-clients-3.7.2.jar;C:\Users\A715-42G\.m2\repository\com\github\luben\zstd-jni\1.5.6-4\zstd-jni-1.5.6-4.jar;C:\Users\A715-42G\.m2\repository\org\lz4\lz4-java\1.8.0\lz4-java-1.8.0.jar;C:\Users\A715-42G\.m2\repository\org\xerial\snappy\snappy-java\1.1.10.5\snappy-java-1.1.10.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.11\spring-boot-starter-security-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.19\spring-aop-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.9\spring-security-config-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.9\spring-security-web-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-oauth2-resource-server\3.3.11\spring-boot-starter-oauth2-resource-server-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.9\spring-security-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.9\spring-security-crypto-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-resource-server\6.3.9\spring-security-oauth2-resource-server-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-core\6.3.9\spring-security-oauth2-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-jose\6.3.9\spring-security-oauth2-jose-6.3.9.jar;C:\Users\A715-42G\.m2\repository\com\nimbusds\nimbus-jose-jwt\9.37.3\nimbus-jose-jwt-9.37.3.jar;C:\Users\A715-42G\.m2\repository\com\github\stephenc\jcip\jcip-annotations\1.0-1\jcip-annotations-1.0-1.jar;C:\Users\A715-42G\.m2\repository\org\keycloak\keycloak-admin-client\26.0.0\keycloak-admin-client-26.0.0.jar;C:\Users\A715-42G\.m2\repository\org\keycloak\keycloak-client-common-synced\26.0.0\keycloak-client-common-synced-26.0.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\commons-logging-jboss-logging\1.0.0.Final\commons-logging-jboss-logging-1.0.0.Final.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\microprofile\openapi\microprofile-openapi-api\3.1.1\microprofile-openapi-api-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-client\6.2.9.Final\resteasy-client-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-client-api\6.2.9.Final\resteasy-client-api-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-core-spi\6.2.9.Final\resteasy-core-spi-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-core\6.2.9.Final\resteasy-core-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\jandex\2.4.5.Final\jandex-2.4.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\com\ibm\async\asyncutil\0.1.0\asyncutil-0.1.0.jar;C:\Users\A715-42G\.m2\repository\commons-codec\commons-codec\1.16.1\commons-codec-1.16.1.jar;C:\Users\A715-42G\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\3.1.0\jakarta.ws.rs-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-multipart-provider\6.2.9.Final\resteasy-multipart-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\mail\jakarta.mail-api\2.1.3\jakarta.mail-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-mail\2.0.3\angus-mail-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-dom\0.8.11\apache-mime4j-dom-0.8.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-core\0.8.11\apache-mime4j-core-0.8.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-storage\0.8.11\apache-mime4j-storage-0.8.11.jar;C:\Users\A715-42G\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-jackson2-provider\6.2.9.Final\resteasy-jackson2-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-base\2.17.3\jackson-jakarta-rs-base-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-json-provider\2.17.3\jackson-jakarta-rs-json-provider-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-jakarta-xmlbind-annotations\2.17.3\jackson-module-jakarta-xmlbind-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\json-patch\1.13\json-patch-1.13.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\msg-simple\1.2\msg-simple-1.2.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\btf\1.3\btf-1.3.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\jackson-coreutils\2.0\jackson-coreutils-2.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-jaxb-provider\6.2.9.Final\resteasy-jaxb-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\codemodel\4.0.5\codemodel-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-jxc\4.0.5\jaxb-jxc-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-xjc\4.0.5\jaxb-xjc-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\xsom\4.0.5\xsom-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-tools\4.1.2\istack-commons-tools-4.1.2.jar;C:\Users\A715-42G\.m2\repository\com\sun\xml\bind\external\relaxng-datatype\4.0.3\relaxng-datatype-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\sun\xml\bind\external\rngom\4.0.3\rngom-4.0.3.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.example.transaction_service.TransactionServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@7bff172d, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.10847166190058619457, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\java-banking-phase2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=12372, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.10847166190058619457, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@b12e6d9, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\ProgramData\chocolatey\bin;D:\KienLongBank\Vault;D:\GrafanaLabs\grafana\bin;D:\KienLongBank\InfluxData\influxdb-1.8.10-1;D:\Document\Work\Redis;C:\Program Files\Docker\Docker\resources\bin;D:\nodejs\nvm;C:\nvm4w\nodejs;C:\Program Files\nodejs\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\XamPP\php;C:\Program Files\Azure Data Studio\bin;D:\nodejs\nvm;C:\nvm4w\nodejs;C:\Users\A715-42G\AppData\Roaming\npm;D:\Document\cursor\resources\app\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[transaction-service] } MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 09:10:46 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@2072fe31] under count; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@158acb9f] under every; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@174743af] under any; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@223b53d6] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e2ec165] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@462f8761] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@612e19e3] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@19f353f3] under log; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@19a53709] under position; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2ebdf99f] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@27325e77] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@7841feed] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4b81eb0a] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@226146d3] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@2d30ead] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@307ca779] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@38ab3dbc] under str; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1140fbd2] under format; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7a706e92] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@58fe78ea] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6884baca] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@49b75f5f] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@39f5130d] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4f8eea3a] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2914beb] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@712fb141] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@60d3a912] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@58b45008] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@5bf3199f] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@19f353f3 MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@14edb7bf] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1c9a33ea] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e2b0267] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@19a53709 MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@310e003a] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75388cce] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3cd361a9] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6b30c040] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2afe02cc] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1b11a5a1] under format; prior registration was org.hibernate.dialect.function.FormatFunction@1140fbd2 MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@2914beb MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@712fb141 MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ce84143] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@612e19e3 MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@51b7a45e] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b8534c6] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@2d4bf742] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.example.transaction_service.entity.Transaction]: private accessor [amount] MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.example.transaction_service.entity.Transaction) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction)] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction.updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:10:47 [restartedMain] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:10:48 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 09:10:48 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-06 09:10:48 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_transaction (amount,bank_type,created_at,created_by,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-06 09:10:48 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_transaction set amount=?,bank_type=?,created_at=?,created_by=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=?,updated_at=?,updated_by=? where id=? MDC:[traceId=, spanId=]
2025-06-06 09:10:48 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-06 09:10:48 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-06-06 09:10:48 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5f0086ec] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4a3f99f6] MDC:[traceId=, spanId=]
2025-06-06 09:10:48 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-06-06 09:10:48 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-06-06 09:10:48 [restartedMain] DEBUG org.hibernate.mapping.Table - No alter strings for table : tbl_transaction MDC:[traceId=, spanId=]
2025-06-06 09:10:48 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7cef804c MDC:[traceId=, spanId=]
2025-06-06 09:10:48 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: ef8af861-9b8e-4cdb-aee4-d6da9b25f756 (<unnamed>) MDC:[traceId=, spanId=]
2025-06-06 09:10:48 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-06-06 09:10:48 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-06-06 09:10:49 [restartedMain] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-06-06 09:10:49 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-06 09:10:49 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-06 09:10:49 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-06 09:10:52 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-06 09:10:52 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-06-06 09:10:52 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-06-06 09:10:52 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-06 09:10:52 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-06-06 09:10:52 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-06 09:10:52 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-06 09:10:52 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-06 09:10:52 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-06 09:10:52 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-06 09:10:52 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-06 09:10:52 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-06 09:10:52 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-06 09:10:52 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-06 09:10:52 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-06 09:10:52 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-06 09:10:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:10:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:10:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:10:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:10:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@ceec126 MDC:[traceId=, spanId=]
2025-06-06 09:10:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:10:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@de387f6 MDC:[traceId=, spanId=]
2025-06-06 09:10:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:10:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:10:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:10:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:10:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@659788349 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:10:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:10:57 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:11:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:11:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:11:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:11:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:11:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7b130b MDC:[traceId=, spanId=]
2025-06-06 09:11:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:11:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4cfc4573 MDC:[traceId=, spanId=]
2025-06-06 09:11:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:11:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:11:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:11:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:11:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1616700109 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:11:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:11:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:12:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:12:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:12:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:12:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:12:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2be128f6 MDC:[traceId=, spanId=]
2025-06-06 09:12:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:12:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@33dbbb3f MDC:[traceId=, spanId=]
2025-06-06 09:12:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:12:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:12:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:12:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:12:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1435941874 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:12:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:12:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:13:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:13:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:13:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:13:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:13:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@66660bab MDC:[traceId=, spanId=]
2025-06-06 09:13:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:13:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@72a98b0d MDC:[traceId=, spanId=]
2025-06-06 09:13:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:13:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:13:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:13:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:13:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1027316272 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:13:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:13:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:14:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:14:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:14:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:14:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:14:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7b6d8993 MDC:[traceId=, spanId=]
2025-06-06 09:14:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:14:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7da9187c MDC:[traceId=, spanId=]
2025-06-06 09:14:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:14:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:14:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:14:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:14:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1236293625 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:14:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:14:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:15:56 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:15:56 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:15:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:15:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:15:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:15:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:15:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6e6778d3 MDC:[traceId=, spanId=]
2025-06-06 09:15:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:15:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@bfaf1e6 MDC:[traceId=, spanId=]
2025-06-06 09:15:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:15:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:15:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:15:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:15:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1400813023 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:15:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:15:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:16:01 [http-nio-8088-exec-1] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-06 09:16:01 [http-nio-8088-exec-1] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-06-06 09:16:01 [http-nio-8088-exec-1] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-06-06 09:16:01 [http-nio-8088-exec-1] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-06 09:16:01 [http-nio-8088-exec-1] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-06-06 09:16:01 [http-nio-8088-exec-1] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-06 09:16:01 [http-nio-8088-exec-1] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-06 09:16:01 [http-nio-8088-exec-1] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-06 09:16:01 [http-nio-8088-exec-1] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-06 09:16:01 [http-nio-8088-exec-1] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-06 09:16:01 [http-nio-8088-exec-1] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-06 09:16:01 [http-nio-8088-exec-1] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-06 09:16:01 [http-nio-8088-exec-1] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-06 09:16:01 [http-nio-8088-exec-1] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-06 09:16:01 [http-nio-8088-exec-1] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-06 09:16:01 [http-nio-8088-exec-1] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-06 09:16:01 [http-nio-8088-exec-1] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-06 09:16:01 [http-nio-8088-exec-1] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-06-06 09:16:01 [http-nio-8088-exec-1] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-06-06 09:16:01 [http-nio-8088-exec-1] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-06 09:16:01 [http-nio-8088-exec-1] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-06-06 09:16:01 [http-nio-8088-exec-1] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-06 09:16:01 [http-nio-8088-exec-1] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-06 09:16:01 [http-nio-8088-exec-1] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-06 09:16:01 [http-nio-8088-exec-1] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-06 09:16:01 [http-nio-8088-exec-1] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-06 09:16:01 [http-nio-8088-exec-1] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-06 09:16:01 [http-nio-8088-exec-1] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-06 09:16:01 [http-nio-8088-exec-1] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-06 09:16:01 [http-nio-8088-exec-1] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-06 09:16:01 [http-nio-8088-exec-1] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-06 09:16:01 [http-nio-8088-exec-1] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-06 09:16:04 [http-nio-8088-exec-1] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 09:16:04 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:16:04 [http-nio-8088-exec-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-06 09:16:04 [http-nio-8088-exec-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-06 09:16:04 [http-nio-8088-exec-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-06 09:16:04 [http-nio-8088-exec-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-06 09:16:04 [http-nio-8088-exec-1] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-06 09:16:04 [http-nio-8088-exec-1] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=10000, fromAccountNumber=12345678, updatedBy=test123, bankType=INTERNAL, description=Chuyển khoản, type=TRANSFER, createdAt=2025-06-06T09:16:04.631411900, destinationBankCode=970452, toAccountNumber=27072000, createdBy=test123, currency=VND, id=a20610e8-6c25-47a1-94ba-998bc32ead2b, referenceCode=TXN-12345678-202506060916002d1ba583, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=null, status=PENDING, timestamp=2025-06-06T09:16:00.387312600, updatedAt=2025-06-06T09:16:04.631411900} MDC:[traceId=, spanId=]
2025-06-06 09:16:04 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - insert into tbl_transaction (amount,bank_type,created_at,created_by,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-06 09:16:26 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:16:26 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:16:26 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:16:26 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:16:26 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@18fe3b37 MDC:[traceId=, spanId=]
2025-06-06 09:16:26 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).referenceCode)  MDC:[traceId=, spanId=]
2025-06-06 09:16:26 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:16:26 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:16:26 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:16:26 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1068725951 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:16:26 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.reference_code=? MDC:[traceId=, spanId=]
2025-06-06 09:16:26 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [a20610e8-6c25-47a1-94ba-998bc32ead2b] MDC:[traceId=, spanId=]
2025-06-06 09:16:26 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(2)): a20610e8-6c25-47a1-94ba-998bc32ead2b MDC:[traceId=, spanId=]
2025-06-06 09:16:26 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(2)#a20610e8-6c25-47a1-94ba-998bc32ead2b] : 789344042 MDC:[traceId=, spanId=]
2025-06-06 09:16:26 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [10000.00] MDC:[traceId=, spanId=]
2025-06-06 09:16:26 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-06 09:16:26 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T09:16:04.631412] MDC:[traceId=, spanId=]
2025-06-06 09:16:26 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-06 09:16:26 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-06 09:16:26 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Chuyển khoản] MDC:[traceId=, spanId=]
2025-06-06 09:16:26 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-06 09:16:26 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-06 09:16:26 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-06 09:16:26 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-06 09:16:26 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506060916002d1ba583] MDC:[traceId=, spanId=]
2025-06-06 09:16:26 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [PENDING] MDC:[traceId=, spanId=]
2025-06-06 09:16:26 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T09:16:00.387313] MDC:[traceId=, spanId=]
2025-06-06 09:16:26 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 09:16:26 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-06 09:16:26 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T09:16:04.631412] MDC:[traceId=, spanId=]
2025-06-06 09:16:26 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-06 09:16:26 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(2)#a20610e8-6c25-47a1-94ba-998bc32ead2b MDC:[traceId=, spanId=]
2025-06-06 09:16:26 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ce2447b MDC:[traceId=, spanId=]
2025-06-06 09:16:27 [http-nio-8088-exec-2] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 09:16:27 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:16:27 [http-nio-8088-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-06 09:16:27 [http-nio-8088-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-06 09:16:27 [http-nio-8088-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-06 09:16:27 [http-nio-8088-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-06 09:16:27 [http-nio-8088-exec-2] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-06 09:16:27 [http-nio-8088-exec-2] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=10000.00, fromAccountNumber=12345678, updatedBy=test123, bankType=INTERNAL, description=Chuyển khoản, type=TRANSFER, createdAt=2025-06-06T09:16:04.631412, destinationBankCode=970452, toAccountNumber=27072000, createdBy=test123, currency=VND, id=a20610e8-6c25-47a1-94ba-998bc32ead2b, referenceCode=TXN-12345678-202506060916002d1ba583, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=null, status=COMPLETED, timestamp=2025-06-06T09:16:00.387313, updatedAt=2025-06-06T09:16:27.218411200} MDC:[traceId=, spanId=]
2025-06-06 09:16:27 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - update tbl_transaction set amount=?,bank_type=?,created_at=?,created_by=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=?,updated_at=?,updated_by=? where id=? MDC:[traceId=, spanId=]
2025-06-06 09:16:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:16:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:16:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:16:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:16:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@353d866a MDC:[traceId=, spanId=]
2025-06-06 09:16:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:16:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@f3cef9b MDC:[traceId=, spanId=]
2025-06-06 09:16:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:16:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:16:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:16:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:16:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@193877917 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:16:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:16:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:17:03 [http-nio-8088-exec-3] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:17:03 [http-nio-8088-exec-3] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:17:04 [http-nio-8088-exec-3] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 09:17:04 [http-nio-8088-exec-3] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:17:04 [http-nio-8088-exec-3] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-06 09:17:04 [http-nio-8088-exec-3] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-06 09:17:04 [http-nio-8088-exec-3] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-06 09:17:04 [http-nio-8088-exec-3] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-06 09:17:04 [http-nio-8088-exec-3] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-06 09:17:04 [http-nio-8088-exec-3] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=20000, fromAccountNumber=12345678, updatedBy=test123, bankType=INTERNAL, description=Chuyển khoản, type=TRANSFER, createdAt=2025-06-06T09:17:04.126711700, destinationBankCode=970452, toAccountNumber=27072000, createdBy=test123, currency=VND, id=05c239ea-e2ea-4101-b242-aaf34fa7eb66, referenceCode=TXN-12345678-20250606091703cc3a49e2, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=null, status=PENDING, timestamp=2025-06-06T09:17:03.918312100, updatedAt=2025-06-06T09:17:04.126711700} MDC:[traceId=, spanId=]
2025-06-06 09:17:04 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - insert into tbl_transaction (amount,bank_type,created_at,created_by,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@20349294 MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).referenceCode)  MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1419357381 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.reference_code=? MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [05c239ea-e2ea-4101-b242-aaf34fa7eb66] MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(2)): 05c239ea-e2ea-4101-b242-aaf34fa7eb66 MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(2)#05c239ea-e2ea-4101-b242-aaf34fa7eb66] : 1803311825 MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [20000.00] MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T09:17:04.126712] MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Chuyển khoản] MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250606091703cc3a49e2] MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [PENDING] MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T09:17:03.918312] MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T09:17:04.126712] MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(2)#05c239ea-e2ea-4101-b242-aaf34fa7eb66 MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@721a2cff MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=20000.00, fromAccountNumber=12345678, updatedBy=test123, bankType=INTERNAL, description=Chuyển khoản, type=TRANSFER, createdAt=2025-06-06T09:17:04.126712, destinationBankCode=970452, toAccountNumber=27072000, createdBy=test123, currency=VND, id=05c239ea-e2ea-4101-b242-aaf34fa7eb66, referenceCode=TXN-12345678-20250606091703cc3a49e2, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=null, status=COMPLETED, timestamp=2025-06-06T09:17:03.918312, updatedAt=2025-06-06T09:17:26.153235500} MDC:[traceId=, spanId=]
2025-06-06 09:17:26 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - update tbl_transaction set amount=?,bank_type=?,created_at=?,created_by=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=?,updated_at=?,updated_by=? where id=? MDC:[traceId=, spanId=]
2025-06-06 09:17:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:17:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:17:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:17:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:17:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@77fe6f76 MDC:[traceId=, spanId=]
2025-06-06 09:17:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:17:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@700b22b9 MDC:[traceId=, spanId=]
2025-06-06 09:17:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:17:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:17:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:17:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:17:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@813575810 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:17:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:17:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:18:32 [http-nio-8088-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:18:32 [http-nio-8088-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:18:32 [http-nio-8088-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - rolling back MDC:[traceId=, spanId=]
2025-06-06 09:18:41 [http-nio-8088-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:18:41 [http-nio-8088-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:18:42 [http-nio-8088-exec-7] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 09:18:42 [http-nio-8088-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:18:42 [http-nio-8088-exec-7] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-06 09:18:42 [http-nio-8088-exec-7] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-06 09:18:42 [http-nio-8088-exec-7] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-06 09:18:42 [http-nio-8088-exec-7] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-06 09:18:42 [http-nio-8088-exec-7] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-06 09:18:42 [http-nio-8088-exec-7] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=23000, fromAccountNumber=27072000, updatedBy=test123, bankType=INTERNAL, description=Ngày 6/6/2025, type=TRANSFER, createdAt=2025-06-06T09:18:42.084676600, destinationBankCode=970452, toAccountNumber=12345678, createdBy=test123, currency=VND, id=12c62501-fc6a-454b-8c43-7ef83dff809a, referenceCode=TXN-27072000-202506060918428332d39b, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=null, status=PENDING, timestamp=2025-06-06T09:18:42.018679300, updatedAt=2025-06-06T09:18:42.084676600} MDC:[traceId=, spanId=]
2025-06-06 09:18:42 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - insert into tbl_transaction (amount,bank_type,created_at,created_by,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-06 09:18:46 [http-nio-8088-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:18:46 [http-nio-8088-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:18:46 [http-nio-8088-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - rolling back MDC:[traceId=, spanId=]
2025-06-06 09:18:53 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:18:53 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:18:53 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - rolling back MDC:[traceId=, spanId=]
2025-06-06 09:18:54 [http-nio-8088-exec-9] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:18:54 [http-nio-8088-exec-9] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:18:54 [http-nio-8088-exec-9] DEBUG o.h.e.t.internal.TransactionImpl - rolling back MDC:[traceId=, spanId=]
2025-06-06 09:18:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:18:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:18:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:18:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:18:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@555538bf MDC:[traceId=, spanId=]
2025-06-06 09:18:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:18:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7718933 MDC:[traceId=, spanId=]
2025-06-06 09:18:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:18:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:18:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:18:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:18:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@723306059 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:18:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:18:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3438ec75 MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).referenceCode)  MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@809559087 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.reference_code=? MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [12c62501-fc6a-454b-8c43-7ef83dff809a] MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(2)): 12c62501-fc6a-454b-8c43-7ef83dff809a MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(2)#12c62501-fc6a-454b-8c43-7ef83dff809a] : 1897120942 MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [23000.00] MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T09:18:42.084677] MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngày 6/6/2025] MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-27072000-202506060918428332d39b] MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [PENDING] MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T09:18:42.018679] MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [12345678] MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T09:18:42.084677] MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(2)#12c62501-fc6a-454b-8c43-7ef83dff809a MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46c5273f MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=23000.00, fromAccountNumber=27072000, updatedBy=test123, bankType=INTERNAL, description=Ngày 6/6/2025, type=TRANSFER, createdAt=2025-06-06T09:18:42.084677, destinationBankCode=970452, toAccountNumber=12345678, createdBy=test123, currency=VND, id=12c62501-fc6a-454b-8c43-7ef83dff809a, referenceCode=TXN-27072000-202506060918428332d39b, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=Nhập sai OTP quá 3 lần, status=FAILED, timestamp=2025-06-06T09:18:42.018679, updatedAt=2025-06-06T09:18:57.969378600} MDC:[traceId=, spanId=]
2025-06-06 09:18:57 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - update tbl_transaction set amount=?,bank_type=?,created_at=?,created_by=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=?,updated_at=?,updated_by=? where id=? MDC:[traceId=, spanId=]
2025-06-06 09:19:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:19:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:19:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:19:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:19:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5ea561e2 MDC:[traceId=, spanId=]
2025-06-06 09:19:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:19:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@a2ed0f0 MDC:[traceId=, spanId=]
2025-06-06 09:19:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:19:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:19:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:19:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:19:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@449883788 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:19:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:19:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:20:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:20:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:20:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:20:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:20:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3ad8a321 MDC:[traceId=, spanId=]
2025-06-06 09:20:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:20:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@562a9e91 MDC:[traceId=, spanId=]
2025-06-06 09:20:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:20:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:20:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:20:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:20:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1422294705 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:20:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:20:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:21:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:21:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:21:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:21:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:21:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3e05cf01 MDC:[traceId=, spanId=]
2025-06-06 09:21:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:21:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1959a77e MDC:[traceId=, spanId=]
2025-06-06 09:21:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:21:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:21:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:21:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:21:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@689537880 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:21:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:21:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:22:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:22:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:22:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:22:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:22:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4079523f MDC:[traceId=, spanId=]
2025-06-06 09:22:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:22:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3c719e97 MDC:[traceId=, spanId=]
2025-06-06 09:22:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:22:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:22:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:22:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:22:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@154078766 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:22:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:22:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:23:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:23:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:23:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:23:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:23:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@797b5808 MDC:[traceId=, spanId=]
2025-06-06 09:23:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:23:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@241a55ba MDC:[traceId=, spanId=]
2025-06-06 09:23:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:23:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:23:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:23:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:23:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@31452850 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:23:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:23:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:24:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:24:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:24:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:24:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:24:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7e74faa7 MDC:[traceId=, spanId=]
2025-06-06 09:24:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:24:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@eebcd9f MDC:[traceId=, spanId=]
2025-06-06 09:24:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:24:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:24:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:24:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:24:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1674813401 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:24:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:24:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:25:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:25:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:25:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:25:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:25:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7dca7add MDC:[traceId=, spanId=]
2025-06-06 09:25:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:25:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7ddb85a9 MDC:[traceId=, spanId=]
2025-06-06 09:25:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:25:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:25:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:25:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:25:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1568144400 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:25:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:25:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:26:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:26:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:26:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:26:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:26:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5e549ecb MDC:[traceId=, spanId=]
2025-06-06 09:26:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:26:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@68d52f6f MDC:[traceId=, spanId=]
2025-06-06 09:26:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:26:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:26:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:26:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:26:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@658187780 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:26:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:26:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:27:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:27:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:27:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:27:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:27:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7c27ea26 MDC:[traceId=, spanId=]
2025-06-06 09:27:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:27:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3bb1570e MDC:[traceId=, spanId=]
2025-06-06 09:27:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:27:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:27:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:27:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:27:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1353224494 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:27:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:27:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:28:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:28:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:28:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:28:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:28:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@52ba103f MDC:[traceId=, spanId=]
2025-06-06 09:28:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:28:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@74803ffe MDC:[traceId=, spanId=]
2025-06-06 09:28:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:28:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:28:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:28:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:28:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@266404527 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:28:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:28:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:29:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:29:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:29:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:29:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:29:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@27f9cbcc MDC:[traceId=, spanId=]
2025-06-06 09:29:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:29:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6fd75bb MDC:[traceId=, spanId=]
2025-06-06 09:29:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:29:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:29:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:29:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:29:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@815696836 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:29:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:29:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:30:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:30:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:30:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:30:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:30:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@40c81dfa MDC:[traceId=, spanId=]
2025-06-06 09:30:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:30:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3c0ee9e8 MDC:[traceId=, spanId=]
2025-06-06 09:30:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:30:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:30:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:30:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:30:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1106248005 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:30:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:30:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:31:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:31:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:31:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:31:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:31:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@61b41b6c MDC:[traceId=, spanId=]
2025-06-06 09:31:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:31:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1f3fd5df MDC:[traceId=, spanId=]
2025-06-06 09:31:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:31:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:31:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:31:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:31:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1255087117 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:31:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:31:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:32:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:32:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:32:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:32:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:32:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7d1fd3a6 MDC:[traceId=, spanId=]
2025-06-06 09:32:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:32:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3949ceac MDC:[traceId=, spanId=]
2025-06-06 09:32:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:32:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:32:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:32:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:32:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@806723531 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:32:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:32:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:33:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:33:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:33:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:33:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:33:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4327df16 MDC:[traceId=, spanId=]
2025-06-06 09:33:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:33:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2d901fb4 MDC:[traceId=, spanId=]
2025-06-06 09:33:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:33:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:33:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:33:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:33:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1233060232 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:33:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:33:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:34:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:34:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:34:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:34:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:34:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4535870f MDC:[traceId=, spanId=]
2025-06-06 09:34:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:34:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6244a767 MDC:[traceId=, spanId=]
2025-06-06 09:34:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:34:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:34:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:34:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:34:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1000017524 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:34:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:34:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:35:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:35:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:35:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:35:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:35:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@503e2eec MDC:[traceId=, spanId=]
2025-06-06 09:35:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:35:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@405b5ce2 MDC:[traceId=, spanId=]
2025-06-06 09:35:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:35:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:35:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:35:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:35:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1484477859 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:35:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:35:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:36:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:36:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:36:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:36:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:36:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@103b2370 MDC:[traceId=, spanId=]
2025-06-06 09:36:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:36:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@22426c14 MDC:[traceId=, spanId=]
2025-06-06 09:36:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:36:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:36:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:36:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:36:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@816184059 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:36:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:36:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:37:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:37:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:37:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:37:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:37:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@419e3a5d MDC:[traceId=, spanId=]
2025-06-06 09:37:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:37:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@565223ef MDC:[traceId=, spanId=]
2025-06-06 09:37:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:37:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:37:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:37:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:37:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@699471378 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:37:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:37:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:38:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:38:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:38:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:38:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:38:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1d30d5f5 MDC:[traceId=, spanId=]
2025-06-06 09:38:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:38:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@644d481c MDC:[traceId=, spanId=]
2025-06-06 09:38:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:38:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:38:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:38:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:38:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1896700070 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:38:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:38:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:39:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:39:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:39:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:39:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:39:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2ee9d381 MDC:[traceId=, spanId=]
2025-06-06 09:39:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:39:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@791e5617 MDC:[traceId=, spanId=]
2025-06-06 09:39:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:39:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:39:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:39:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:39:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@536612377 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:39:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:39:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:40:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:40:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:40:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:40:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:40:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@367004c8 MDC:[traceId=, spanId=]
2025-06-06 09:40:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:40:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5933888b MDC:[traceId=, spanId=]
2025-06-06 09:40:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:40:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:40:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:40:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:40:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1369349813 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:40:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:40:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:41:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:41:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:41:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:41:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:41:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1c794f00 MDC:[traceId=, spanId=]
2025-06-06 09:41:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:41:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2c33d358 MDC:[traceId=, spanId=]
2025-06-06 09:41:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:41:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:41:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:41:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:41:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@762361447 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:41:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:41:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:42:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:42:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:42:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:42:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:42:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1eface0c MDC:[traceId=, spanId=]
2025-06-06 09:42:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:42:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4f63ee9a MDC:[traceId=, spanId=]
2025-06-06 09:42:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:42:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:42:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:42:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:42:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@75807418 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:42:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:42:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:43:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:43:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:43:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:43:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:43:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@439570ae MDC:[traceId=, spanId=]
2025-06-06 09:43:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:43:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@441db606 MDC:[traceId=, spanId=]
2025-06-06 09:43:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:43:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:43:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:43:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:43:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1892459648 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:43:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:43:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:44:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:44:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:44:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:44:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:44:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@149b7b9b MDC:[traceId=, spanId=]
2025-06-06 09:44:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:44:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2c7af3b4 MDC:[traceId=, spanId=]
2025-06-06 09:44:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:44:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:44:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:44:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@538273377 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:44:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:44:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:45:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:45:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:45:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:45:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:45:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5d6b9e46 MDC:[traceId=, spanId=]
2025-06-06 09:45:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:45:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@19f98f94 MDC:[traceId=, spanId=]
2025-06-06 09:45:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:45:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:45:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:45:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:45:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1158756499 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:45:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:45:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:46:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:46:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:46:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:46:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:46:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@622656ce MDC:[traceId=, spanId=]
2025-06-06 09:46:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:46:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@41fa0b75 MDC:[traceId=, spanId=]
2025-06-06 09:46:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:46:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:46:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:46:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:46:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2115988768 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:46:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:46:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:47:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:47:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:47:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:47:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:47:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@772cfcd5 MDC:[traceId=, spanId=]
2025-06-06 09:47:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:47:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@415bdb21 MDC:[traceId=, spanId=]
2025-06-06 09:47:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:47:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:47:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:47:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:47:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@70289769 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:47:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:47:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:48:25 [http-nio-8088-exec-3] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:48:25 [http-nio-8088-exec-3] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:48:26 [http-nio-8088-exec-3] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 09:48:26 [http-nio-8088-exec-3] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:48:26 [http-nio-8088-exec-3] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-06 09:48:26 [http-nio-8088-exec-3] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-06 09:48:26 [http-nio-8088-exec-3] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-06 09:48:26 [http-nio-8088-exec-3] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-06 09:48:26 [http-nio-8088-exec-3] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-06 09:48:26 [http-nio-8088-exec-3] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=23000, fromAccountNumber=27072000, updatedBy=test123, bankType=INTERNAL, description=Chuyển khoản, type=TRANSFER, createdAt=2025-06-06T09:48:26.554012900, destinationBankCode=970452, toAccountNumber=87654321, createdBy=test123, currency=VND, id=cc9ad6ab-a0ff-46e2-8ef4-78a5d9108f49, referenceCode=TXN-27072000-20250606094826e9ea18de, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=null, status=PENDING, timestamp=2025-06-06T09:48:26.227850900, updatedAt=2025-06-06T09:48:26.554012900} MDC:[traceId=, spanId=]
2025-06-06 09:48:26 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - insert into tbl_transaction (amount,bank_type,created_at,created_by,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-06 09:48:41 [http-nio-8088-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:48:41 [http-nio-8088-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:48:41 [http-nio-8088-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - rolling back MDC:[traceId=, spanId=]
2025-06-06 09:48:46 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:48:46 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:48:46 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - rolling back MDC:[traceId=, spanId=]
2025-06-06 09:48:47 [http-nio-8088-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:48:47 [http-nio-8088-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:48:47 [http-nio-8088-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - rolling back MDC:[traceId=, spanId=]
2025-06-06 09:48:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:48:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:48:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:48:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:48:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1fb9ec31 MDC:[traceId=, spanId=]
2025-06-06 09:48:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:48:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5cd77bba MDC:[traceId=, spanId=]
2025-06-06 09:48:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:48:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:48:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:48:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:48:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@551452575 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:48:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:48:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2d0ba2d4 MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).referenceCode)  MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1460982693 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.reference_code=? MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [cc9ad6ab-a0ff-46e2-8ef4-78a5d9108f49] MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(2)): cc9ad6ab-a0ff-46e2-8ef4-78a5d9108f49 MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(2)#cc9ad6ab-a0ff-46e2-8ef4-78a5d9108f49] : 346415782 MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [23000.00] MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T09:48:26.554013] MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Chuyển khoản] MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-27072000-20250606094826e9ea18de] MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [PENDING] MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T09:48:26.227851] MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T09:48:26.554013] MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(2)#cc9ad6ab-a0ff-46e2-8ef4-78a5d9108f49 MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@65dd826c MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=23000.00, fromAccountNumber=27072000, updatedBy=test123, bankType=INTERNAL, description=Chuyển khoản, type=TRANSFER, createdAt=2025-06-06T09:48:26.554013, destinationBankCode=970452, toAccountNumber=87654321, createdBy=test123, currency=VND, id=cc9ad6ab-a0ff-46e2-8ef4-78a5d9108f49, referenceCode=TXN-27072000-20250606094826e9ea18de, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=null, status=COMPLETED, timestamp=2025-06-06T09:48:26.227851, updatedAt=2025-06-06T09:49:14.551044700} MDC:[traceId=, spanId=]
2025-06-06 09:49:14 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - update tbl_transaction set amount=?,bank_type=?,created_at=?,created_by=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=?,updated_at=?,updated_by=? where id=? MDC:[traceId=, spanId=]
2025-06-06 09:49:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:49:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:49:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:49:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:49:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6811fb2 MDC:[traceId=, spanId=]
2025-06-06 09:49:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:49:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5cadde6 MDC:[traceId=, spanId=]
2025-06-06 09:49:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:49:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:49:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:49:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:49:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1295894032 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:49:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:49:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:50:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:50:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:50:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:50:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:50:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7f470c84 MDC:[traceId=, spanId=]
2025-06-06 09:50:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:50:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@62bc58f5 MDC:[traceId=, spanId=]
2025-06-06 09:50:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:50:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:50:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:50:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:50:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2059614558 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:50:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:50:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:51:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:51:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:51:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:51:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:51:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@59741837 MDC:[traceId=, spanId=]
2025-06-06 09:51:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:51:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6f1c95a4 MDC:[traceId=, spanId=]
2025-06-06 09:51:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:51:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:51:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:51:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:51:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1580067692 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:51:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:51:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:52:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:52:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:52:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:52:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:52:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@24e4a398 MDC:[traceId=, spanId=]
2025-06-06 09:52:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:52:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1f5be595 MDC:[traceId=, spanId=]
2025-06-06 09:52:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:52:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:52:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:52:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:52:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@761794296 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:52:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:52:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:53:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:53:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:53:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:53:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:53:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@d63d554 MDC:[traceId=, spanId=]
2025-06-06 09:53:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:53:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@11d3d796 MDC:[traceId=, spanId=]
2025-06-06 09:53:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:53:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:53:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:53:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:53:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@648454551 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:53:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:53:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:54:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:54:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:54:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:54:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:54:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1326ee0f MDC:[traceId=, spanId=]
2025-06-06 09:54:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:54:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@121f9833 MDC:[traceId=, spanId=]
2025-06-06 09:54:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:54:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:54:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:54:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:54:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@65153404 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:54:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:54:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:55:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:55:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:55:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:55:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:55:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5c59ae92 MDC:[traceId=, spanId=]
2025-06-06 09:55:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:55:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5eb355e8 MDC:[traceId=, spanId=]
2025-06-06 09:55:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:55:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:55:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:55:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:55:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@254099797 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:55:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:55:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:56:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:56:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:56:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:56:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:56:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@799f3fb4 MDC:[traceId=, spanId=]
2025-06-06 09:56:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:56:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2d8ea609 MDC:[traceId=, spanId=]
2025-06-06 09:56:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:56:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:56:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:56:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:56:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1153555517 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:56:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:56:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:57:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:57:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:57:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:57:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:57:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4c34aa29 MDC:[traceId=, spanId=]
2025-06-06 09:57:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:57:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2b43e23f MDC:[traceId=, spanId=]
2025-06-06 09:57:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:57:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:57:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:57:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:57:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1001321280 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:57:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:57:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:58:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:58:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:58:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:58:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:58:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1c92692f MDC:[traceId=, spanId=]
2025-06-06 09:58:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:58:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5e3c6da6 MDC:[traceId=, spanId=]
2025-06-06 09:58:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:58:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:58:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:58:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:58:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@277223036 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:58:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:58:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 09:59:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 09:59:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 09:59:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 09:59:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 09:59:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@17da045b MDC:[traceId=, spanId=]
2025-06-06 09:59:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 09:59:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@65c23d9 MDC:[traceId=, spanId=]
2025-06-06 09:59:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 09:59:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 09:59:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 09:59:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 09:59:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@688566463 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 09:59:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 09:59:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:00:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:00:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:00:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:00:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:00:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@542362c8 MDC:[traceId=, spanId=]
2025-06-06 10:00:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:00:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@275c02b1 MDC:[traceId=, spanId=]
2025-06-06 10:00:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:00:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:00:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:00:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:00:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1177082039 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:00:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:00:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:01:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:01:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:01:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:01:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:01:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3816b446 MDC:[traceId=, spanId=]
2025-06-06 10:01:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:01:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6210d990 MDC:[traceId=, spanId=]
2025-06-06 10:01:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:01:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:01:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:01:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:01:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1865753689 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:01:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:01:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:02:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:02:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:02:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:02:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:02:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@581ce166 MDC:[traceId=, spanId=]
2025-06-06 10:02:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:02:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@755a86d MDC:[traceId=, spanId=]
2025-06-06 10:02:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:02:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:02:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:02:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:02:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@356545188 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:02:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:02:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:03:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:03:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:03:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:03:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:03:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@35b18a67 MDC:[traceId=, spanId=]
2025-06-06 10:03:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:03:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5abc68d0 MDC:[traceId=, spanId=]
2025-06-06 10:03:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:03:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:03:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:03:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:03:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1333190926 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:03:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:03:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:04:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:04:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:04:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:04:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:04:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2f24e809 MDC:[traceId=, spanId=]
2025-06-06 10:04:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:04:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3d74b99 MDC:[traceId=, spanId=]
2025-06-06 10:04:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:04:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:04:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:04:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:04:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1928878575 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:04:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:04:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:05:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:05:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:05:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:05:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:05:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6a705f04 MDC:[traceId=, spanId=]
2025-06-06 10:05:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:05:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@45dcbbb3 MDC:[traceId=, spanId=]
2025-06-06 10:05:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:05:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:05:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:05:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:05:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@702051434 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:05:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:05:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:06:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:06:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:06:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:06:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:06:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7cb82196 MDC:[traceId=, spanId=]
2025-06-06 10:06:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:06:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6219492d MDC:[traceId=, spanId=]
2025-06-06 10:06:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:06:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:06:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:06:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:06:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@362697518 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:06:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:06:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:07:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:07:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:07:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:07:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:07:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@566aad9 MDC:[traceId=, spanId=]
2025-06-06 10:07:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:07:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@972239d MDC:[traceId=, spanId=]
2025-06-06 10:07:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:07:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:07:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:07:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:07:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@426645420 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:07:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:07:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:08:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:08:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:08:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:08:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:08:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@434fbdf5 MDC:[traceId=, spanId=]
2025-06-06 10:08:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:08:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@423ccdb1 MDC:[traceId=, spanId=]
2025-06-06 10:08:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:08:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:08:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:08:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:08:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1338357115 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:08:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:08:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:09:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:09:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:09:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:09:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:09:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@65c2c410 MDC:[traceId=, spanId=]
2025-06-06 10:09:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:09:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2462716f MDC:[traceId=, spanId=]
2025-06-06 10:09:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:09:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:09:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:09:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:09:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1128717671 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:09:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:09:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:10:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:10:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:10:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:10:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:10:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@74dc6fa8 MDC:[traceId=, spanId=]
2025-06-06 10:10:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:10:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7fabe98b MDC:[traceId=, spanId=]
2025-06-06 10:10:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:10:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:10:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:10:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:10:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1952089597 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:10:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:10:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:11:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:11:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:11:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:11:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:11:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2804906c MDC:[traceId=, spanId=]
2025-06-06 10:11:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:11:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1b2d5a82 MDC:[traceId=, spanId=]
2025-06-06 10:11:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:11:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:11:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:11:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:11:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@894653369 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:11:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:11:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:12:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:12:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:12:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:12:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:12:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@50085043 MDC:[traceId=, spanId=]
2025-06-06 10:12:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:12:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@717a2329 MDC:[traceId=, spanId=]
2025-06-06 10:12:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:12:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:12:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:12:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:12:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1707501697 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:12:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:12:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:13:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:13:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:13:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:13:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:13:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@388e00db MDC:[traceId=, spanId=]
2025-06-06 10:13:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:13:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@b16bb08 MDC:[traceId=, spanId=]
2025-06-06 10:13:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:13:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:13:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:13:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:13:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1376879462 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:13:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:13:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:14:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:14:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:14:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:14:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:14:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@32d32a0d MDC:[traceId=, spanId=]
2025-06-06 10:14:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:14:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5c0a60f1 MDC:[traceId=, spanId=]
2025-06-06 10:14:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:14:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:14:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:14:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:14:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1526795808 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:14:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:14:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:15:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:15:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:15:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:15:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:15:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3311d2ee MDC:[traceId=, spanId=]
2025-06-06 10:15:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:15:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@57b96fd MDC:[traceId=, spanId=]
2025-06-06 10:15:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:15:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:15:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:15:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:15:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1788783090 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:15:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:15:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:16:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:16:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:16:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:16:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:16:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7a0cab55 MDC:[traceId=, spanId=]
2025-06-06 10:16:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:16:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@76d0e82e MDC:[traceId=, spanId=]
2025-06-06 10:16:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:16:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:16:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:16:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:16:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@807600478 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:16:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:16:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:17:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:17:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:17:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:17:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:17:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@506c1e0e MDC:[traceId=, spanId=]
2025-06-06 10:17:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:17:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@51f684cb MDC:[traceId=, spanId=]
2025-06-06 10:17:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:17:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:17:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:17:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:17:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1002687317 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:17:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:17:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:18:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:18:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:18:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:18:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:18:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5025c1a9 MDC:[traceId=, spanId=]
2025-06-06 10:18:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:18:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@cc0de4e MDC:[traceId=, spanId=]
2025-06-06 10:18:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:18:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:18:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:18:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:18:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1157969713 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:18:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:18:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:19:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:19:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:19:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:19:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:19:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@50aa6e88 MDC:[traceId=, spanId=]
2025-06-06 10:19:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:19:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@594b2ad5 MDC:[traceId=, spanId=]
2025-06-06 10:19:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:19:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:19:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:19:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:19:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@230510278 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:19:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:19:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:20:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:20:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:20:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:20:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:20:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@21902bc MDC:[traceId=, spanId=]
2025-06-06 10:20:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:20:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@71219137 MDC:[traceId=, spanId=]
2025-06-06 10:20:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:20:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:20:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:20:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:20:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@459623355 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:20:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:20:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:21:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:21:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:21:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:21:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:21:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@193004 MDC:[traceId=, spanId=]
2025-06-06 10:21:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:21:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6767fcd7 MDC:[traceId=, spanId=]
2025-06-06 10:21:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:21:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:21:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:21:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:21:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@147530971 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:21:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:21:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:22:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:22:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:22:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:22:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:22:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@43eb9a74 MDC:[traceId=, spanId=]
2025-06-06 10:22:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:22:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4768ce55 MDC:[traceId=, spanId=]
2025-06-06 10:22:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:22:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:22:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:22:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:22:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1705626086 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:22:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:22:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:23:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:23:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:23:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:23:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:23:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1f5bad38 MDC:[traceId=, spanId=]
2025-06-06 10:23:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:23:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@74a261b6 MDC:[traceId=, spanId=]
2025-06-06 10:23:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:23:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:23:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:23:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:23:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1847759251 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:23:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:23:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:24:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:24:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:24:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:24:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:24:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5ea1514e MDC:[traceId=, spanId=]
2025-06-06 10:24:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:24:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1c214e1e MDC:[traceId=, spanId=]
2025-06-06 10:24:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:24:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:24:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:24:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:24:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@364755715 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:24:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:24:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:25:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:25:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:25:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:25:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:25:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@51db70ec MDC:[traceId=, spanId=]
2025-06-06 10:25:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:25:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@593b6d80 MDC:[traceId=, spanId=]
2025-06-06 10:25:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:25:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:25:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:25:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:25:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1865728908 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:25:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:25:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:26:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:26:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:26:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:26:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:26:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@56abd6a4 MDC:[traceId=, spanId=]
2025-06-06 10:26:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:26:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@55157adb MDC:[traceId=, spanId=]
2025-06-06 10:26:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:26:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:26:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:26:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:26:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1878278301 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:26:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:26:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:27:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:27:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:27:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:27:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:27:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@10b5a282 MDC:[traceId=, spanId=]
2025-06-06 10:27:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:27:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@26645cac MDC:[traceId=, spanId=]
2025-06-06 10:27:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:27:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:27:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:27:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:27:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1060611199 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:27:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:27:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:28:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:28:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:28:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:28:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:28:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5a8cb8ab MDC:[traceId=, spanId=]
2025-06-06 10:28:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:28:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7d07cabc MDC:[traceId=, spanId=]
2025-06-06 10:28:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:28:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:28:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:28:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:28:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1186929594 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:28:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:28:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:29:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:29:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:29:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:29:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:29:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4e364083 MDC:[traceId=, spanId=]
2025-06-06 10:29:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:29:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@61e299d MDC:[traceId=, spanId=]
2025-06-06 10:29:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:29:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:29:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:29:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:29:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1529379824 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:29:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:29:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:30:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:30:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:30:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:30:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:30:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@358323e5 MDC:[traceId=, spanId=]
2025-06-06 10:30:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:30:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4f4db202 MDC:[traceId=, spanId=]
2025-06-06 10:30:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:30:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:30:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:30:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:30:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@968812886 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:30:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:30:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:31:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:31:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:31:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:31:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:31:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@38c8b73c MDC:[traceId=, spanId=]
2025-06-06 10:31:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:31:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@73b5a486 MDC:[traceId=, spanId=]
2025-06-06 10:31:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:31:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:31:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:31:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:31:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@334336101 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:31:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:31:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:32:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:32:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:32:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:32:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:32:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4eb714f6 MDC:[traceId=, spanId=]
2025-06-06 10:32:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:32:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4f1b3333 MDC:[traceId=, spanId=]
2025-06-06 10:32:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:32:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:32:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:32:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:32:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@472451232 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:32:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:32:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:33:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:33:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:33:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:33:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:33:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@25edc929 MDC:[traceId=, spanId=]
2025-06-06 10:33:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:33:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6462d7c5 MDC:[traceId=, spanId=]
2025-06-06 10:33:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:33:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:33:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:33:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:33:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1364326548 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:33:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:33:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:34:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:34:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:34:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:34:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:34:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2b817140 MDC:[traceId=, spanId=]
2025-06-06 10:34:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:34:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7f6b5fba MDC:[traceId=, spanId=]
2025-06-06 10:34:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:34:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:34:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:34:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:34:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1099701420 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:34:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:34:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:35:11 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:35:11 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:35:11 [http-nio-8088-exec-8] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 10:35:12 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:35:12 [http-nio-8088-exec-8] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-06 10:35:12 [http-nio-8088-exec-8] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-06 10:35:12 [http-nio-8088-exec-8] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-06 10:35:12 [http-nio-8088-exec-8] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-06 10:35:12 [http-nio-8088-exec-8] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-06 10:35:12 [http-nio-8088-exec-8] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=10000, fromAccountNumber=12345678, updatedBy=test123, bankType=INTERNAL, description=Giao dịch
, type=TRANSFER, createdAt=2025-06-06T10:35:12.017503900, destinationBankCode=970452, toAccountNumber=87654321, createdBy=test123, currency=VND, id=24ec22d3-4b41-47d7-b5ac-93b32167952a, referenceCode=TXN-12345678-202506061035110fdb6d23, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=null, status=PENDING, timestamp=2025-06-06T10:35:11.792374700, updatedAt=2025-06-06T10:35:12.017503900} MDC:[traceId=, spanId=]
2025-06-06 10:35:12 [http-nio-8088-exec-8] DEBUG org.hibernate.SQL - insert into tbl_transaction (amount,bank_type,created_at,created_by,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1d46b9e2 MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).referenceCode)  MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@946296466 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.reference_code=? MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [24ec22d3-4b41-47d7-b5ac-93b32167952a] MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(2)): 24ec22d3-4b41-47d7-b5ac-93b32167952a MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(2)#24ec22d3-4b41-47d7-b5ac-93b32167952a] : 1336180201 MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [10000.00] MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T10:35:12.017504] MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Giao dịch
] MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506061035110fdb6d23] MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [PENDING] MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T10:35:11.792375] MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T10:35:12.017504] MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(2)#24ec22d3-4b41-47d7-b5ac-93b32167952a MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4df56149 MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=10000.00, fromAccountNumber=12345678, updatedBy=test123, bankType=INTERNAL, description=Giao dịch
, type=TRANSFER, createdAt=2025-06-06T10:35:12.017504, destinationBankCode=970452, toAccountNumber=87654321, createdBy=test123, currency=VND, id=24ec22d3-4b41-47d7-b5ac-93b32167952a, referenceCode=TXN-12345678-202506061035110fdb6d23, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=null, status=COMPLETED, timestamp=2025-06-06T10:35:11.792375, updatedAt=2025-06-06T10:35:49.570430500} MDC:[traceId=, spanId=]
2025-06-06 10:35:49 [http-nio-8088-exec-9] DEBUG org.hibernate.SQL - update tbl_transaction set amount=?,bank_type=?,created_at=?,created_by=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=?,updated_at=?,updated_by=? where id=? MDC:[traceId=, spanId=]
2025-06-06 10:35:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:35:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:35:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:35:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:35:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@643dcc1 MDC:[traceId=, spanId=]
2025-06-06 10:35:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:35:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2a8f5930 MDC:[traceId=, spanId=]
2025-06-06 10:35:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:35:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:35:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:35:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:35:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@574866750 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:35:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:35:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:36:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:36:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:36:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:36:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:36:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@56ef2b8b MDC:[traceId=, spanId=]
2025-06-06 10:36:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:36:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@63b55982 MDC:[traceId=, spanId=]
2025-06-06 10:36:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:36:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:36:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:36:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:36:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@394076052 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:36:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:36:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:37:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:37:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:37:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:37:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:37:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4ffff917 MDC:[traceId=, spanId=]
2025-06-06 10:37:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:37:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@21e48715 MDC:[traceId=, spanId=]
2025-06-06 10:37:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:37:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:37:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:37:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:37:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1414205309 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:37:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:37:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:38:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:38:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:38:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:38:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:38:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@15be6851 MDC:[traceId=, spanId=]
2025-06-06 10:38:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:38:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6a43533f MDC:[traceId=, spanId=]
2025-06-06 10:38:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:38:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:38:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:38:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:38:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@30355832 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:38:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:38:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:39:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:39:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:39:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:39:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:39:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6205c324 MDC:[traceId=, spanId=]
2025-06-06 10:39:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:39:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@710265b2 MDC:[traceId=, spanId=]
2025-06-06 10:39:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:39:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:39:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:39:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:39:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1122496602 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:39:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:39:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:40:30 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:40:30 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:40:30 [http-nio-8088-exec-2] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 10:40:30 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:40:30 [http-nio-8088-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-06 10:40:30 [http-nio-8088-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-06 10:40:30 [http-nio-8088-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-06 10:40:30 [http-nio-8088-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-06 10:40:30 [http-nio-8088-exec-2] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-06 10:40:30 [http-nio-8088-exec-2] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=100000, fromAccountNumber=12345678, updatedBy=test123, bankType=INTERNAL, description=, type=TRANSFER, createdAt=2025-06-06T10:40:30.465974700, destinationBankCode=970452, toAccountNumber=87654321, createdBy=test123, currency=VND, id=01ed99a4-8aee-40e2-95e5-786429020728, referenceCode=TXN-12345678-20250606104030f4fd5f1d, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=null, status=PENDING, timestamp=2025-06-06T10:40:30.336144, updatedAt=2025-06-06T10:40:30.465974700} MDC:[traceId=, spanId=]
2025-06-06 10:40:30 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - insert into tbl_transaction (amount,bank_type,created_at,created_by,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-06 10:40:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:40:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:40:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:40:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:40:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@26dc91ba MDC:[traceId=, spanId=]
2025-06-06 10:40:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:40:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5b2884ff MDC:[traceId=, spanId=]
2025-06-06 10:40:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:40:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:40:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:40:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:40:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@782351918 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:40:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:40:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:41:01 [http-nio-8088-exec-3] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:41:01 [http-nio-8088-exec-3] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:41:02 [http-nio-8088-exec-3] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 10:41:02 [http-nio-8088-exec-3] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:41:02 [http-nio-8088-exec-3] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-06 10:41:02 [http-nio-8088-exec-3] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-06 10:41:02 [http-nio-8088-exec-3] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-06 10:41:02 [http-nio-8088-exec-3] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-06 10:41:02 [http-nio-8088-exec-3] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-06 10:41:02 [http-nio-8088-exec-3] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=22222, fromAccountNumber=12345678, updatedBy=test123, bankType=INTERNAL, description=, type=TRANSFER, createdAt=2025-06-06T10:41:02.053916800, destinationBankCode=970452, toAccountNumber=87654321, createdBy=test123, currency=VND, id=87f546a8-ff9b-404d-8f1b-6e7ca8b87aa7, referenceCode=TXN-12345678-202506061041026b5d6439, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=null, status=PENDING, timestamp=2025-06-06T10:41:02.006598600, updatedAt=2025-06-06T10:41:02.053916800} MDC:[traceId=, spanId=]
2025-06-06 10:41:02 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - insert into tbl_transaction (amount,bank_type,created_at,created_by,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-06 10:41:44 [http-nio-8088-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:41:44 [http-nio-8088-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:41:45 [http-nio-8088-exec-5] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 10:41:45 [http-nio-8088-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:41:45 [http-nio-8088-exec-5] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-06 10:41:45 [http-nio-8088-exec-5] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-06 10:41:45 [http-nio-8088-exec-5] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-06 10:41:45 [http-nio-8088-exec-5] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-06 10:41:45 [http-nio-8088-exec-5] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-06 10:41:45 [http-nio-8088-exec-5] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=22222, fromAccountNumber=12345678, updatedBy=test123, bankType=INTERNAL, description=, type=TRANSFER, createdAt=2025-06-06T10:41:45.033492, destinationBankCode=970452, toAccountNumber=87654321, createdBy=test123, currency=VND, id=6832c4a4-74c6-40fb-9d8e-d1b09ed3bf23, referenceCode=TXN-12345678-2025060610414410570bbd, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=null, status=PENDING, timestamp=2025-06-06T10:41:44.977158700, updatedAt=2025-06-06T10:41:45.033492} MDC:[traceId=, spanId=]
2025-06-06 10:41:45 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - insert into tbl_transaction (amount,bank_type,created_at,created_by,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-06 10:41:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:41:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:41:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:41:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:41:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6e27ca91 MDC:[traceId=, spanId=]
2025-06-06 10:41:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:41:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@331792e2 MDC:[traceId=, spanId=]
2025-06-06 10:41:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:41:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:41:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:41:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:41:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1078155224 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:41:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:41:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:42:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:42:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:42:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:42:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:42:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@75fe644e MDC:[traceId=, spanId=]
2025-06-06 10:42:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:42:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@411cb57 MDC:[traceId=, spanId=]
2025-06-06 10:42:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:42:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:42:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:42:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:42:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@980286982 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:42:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:42:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@546efd74 MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@42d12035 MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@576903827 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [01ed99a4-8aee-40e2-95e5-786429020728] MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(4)): 01ed99a4-8aee-40e2-95e5-786429020728 MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(4)#01ed99a4-8aee-40e2-95e5-786429020728] : 45914816 MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [100000.00] MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T10:40:30.465975] MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250606104030f4fd5f1d] MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [PENDING] MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T10:40:30.336144] MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T10:40:30.465975] MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(4)#01ed99a4-8aee-40e2-95e5-786429020728 MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@36be6e46 MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=100000.00, fromAccountNumber=12345678, updatedBy=test123, bankType=INTERNAL, description=, type=TRANSFER, createdAt=2025-06-06T10:40:30.465975, destinationBankCode=970452, toAccountNumber=87654321, createdBy=test123, currency=VND, id=01ed99a4-8aee-40e2-95e5-786429020728, referenceCode=TXN-12345678-20250606104030f4fd5f1d, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=Quá thời gian cho phép của giao dịch, status=FAILED, timestamp=2025-06-06T10:40:30.336144, updatedAt=2025-06-06T10:43:56.563177900} MDC:[traceId=, spanId=]
2025-06-06 10:43:56 [scheduling-1] DEBUG org.hibernate.SQL - update tbl_transaction set amount=?,bank_type=?,created_at=?,created_by=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=?,updated_at=?,updated_by=? where id=? MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7ecf4a30 MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4bec1112 MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1901581637 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [6832c4a4-74c6-40fb-9d8e-d1b09ed3bf23] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(4)): 6832c4a4-74c6-40fb-9d8e-d1b09ed3bf23 MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(4)#6832c4a4-74c6-40fb-9d8e-d1b09ed3bf23] : 258278477 MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [22222.00] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T10:41:45.033492] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-2025060610414410570bbd] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [PENDING] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T10:41:44.977159] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T10:41:45.033492] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(4)#6832c4a4-74c6-40fb-9d8e-d1b09ed3bf23 MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@40571519 MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87f546a8-ff9b-404d-8f1b-6e7ca8b87aa7] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(4)): 87f546a8-ff9b-404d-8f1b-6e7ca8b87aa7 MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(4)#87f546a8-ff9b-404d-8f1b-6e7ca8b87aa7] : 441649679 MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [22222.00] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T10:41:02.053917] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506061041026b5d6439] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [PENDING] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T10:41:02.006599] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T10:41:02.053917] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(4)#87f546a8-ff9b-404d-8f1b-6e7ca8b87aa7 MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@40571519 MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 2 objects MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=22222.00, fromAccountNumber=12345678, updatedBy=test123, bankType=INTERNAL, description=, type=TRANSFER, createdAt=2025-06-06T10:41:02.053917, destinationBankCode=970452, toAccountNumber=87654321, createdBy=test123, currency=VND, id=87f546a8-ff9b-404d-8f1b-6e7ca8b87aa7, referenceCode=TXN-12345678-202506061041026b5d6439, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=Quá thời gian cho phép của giao dịch, status=FAILED, timestamp=2025-06-06T10:41:02.006599, updatedAt=2025-06-06T10:44:56.567851200} MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=22222.00, fromAccountNumber=12345678, updatedBy=test123, bankType=INTERNAL, description=, type=TRANSFER, createdAt=2025-06-06T10:41:45.033492, destinationBankCode=970452, toAccountNumber=87654321, createdBy=test123, currency=VND, id=6832c4a4-74c6-40fb-9d8e-d1b09ed3bf23, referenceCode=TXN-12345678-2025060610414410570bbd, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=Quá thời gian cho phép của giao dịch, status=FAILED, timestamp=2025-06-06T10:41:44.977159, updatedAt=2025-06-06T10:44:56.557853300} MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.SQL - update tbl_transaction set amount=?,bank_type=?,created_at=?,created_by=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=?,updated_at=?,updated_by=? where id=? MDC:[traceId=, spanId=]
2025-06-06 10:44:56 [scheduling-1] DEBUG org.hibernate.SQL - update tbl_transaction set amount=?,bank_type=?,created_at=?,created_by=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=?,updated_at=?,updated_by=? where id=? MDC:[traceId=, spanId=]
2025-06-06 10:45:36 [http-nio-8088-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:45:36 [http-nio-8088-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:45:37 [http-nio-8088-exec-6] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 10:45:37 [http-nio-8088-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:45:37 [http-nio-8088-exec-6] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-06 10:45:37 [http-nio-8088-exec-6] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-06 10:45:37 [http-nio-8088-exec-6] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-06 10:45:37 [http-nio-8088-exec-6] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-06 10:45:37 [http-nio-8088-exec-6] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-06 10:45:37 [http-nio-8088-exec-6] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=2222, fromAccountNumber=12345678, updatedBy=test123, bankType=INTERNAL, description=, type=TRANSFER, createdAt=2025-06-06T10:45:37.682178600, destinationBankCode=970452, toAccountNumber=87654321, createdBy=test123, currency=VND, id=c0561eda-7792-48fd-84ff-17816f0c4a23, referenceCode=TXN-12345678-202506061045371c62a0de, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=null, status=PENDING, timestamp=2025-06-06T10:45:37.407412500, updatedAt=2025-06-06T10:45:37.682178600} MDC:[traceId=, spanId=]
2025-06-06 10:45:37 [http-nio-8088-exec-6] DEBUG org.hibernate.SQL - insert into tbl_transaction (amount,bank_type,created_at,created_by,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-06 10:45:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:45:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:45:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:45:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:45:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@79fc64d1 MDC:[traceId=, spanId=]
2025-06-06 10:45:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:45:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7ca480ed MDC:[traceId=, spanId=]
2025-06-06 10:45:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:45:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:45:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:45:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:45:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@544998259 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:45:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:45:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:46:55 [http-nio-8088-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:46:55 [http-nio-8088-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:46:55 [http-nio-8088-exec-10] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 10:46:55 [http-nio-8088-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:46:55 [http-nio-8088-exec-10] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-06 10:46:55 [http-nio-8088-exec-10] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-06 10:46:55 [http-nio-8088-exec-10] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-06 10:46:55 [http-nio-8088-exec-10] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-06 10:46:55 [http-nio-8088-exec-10] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-06 10:46:55 [http-nio-8088-exec-10] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=23200, fromAccountNumber=12345678, updatedBy=test123, bankType=INTERNAL, description=, type=TRANSFER, createdAt=2025-06-06T10:46:55.517292600, destinationBankCode=970452, toAccountNumber=87654321, createdBy=test123, currency=VND, id=54452cd0-46a5-4efe-8f50-cd23bdb31493, referenceCode=TXN-12345678-20250606104655ac30817d, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=null, status=PENDING, timestamp=2025-06-06T10:46:55.429971100, updatedAt=2025-06-06T10:46:55.517292600} MDC:[traceId=, spanId=]
2025-06-06 10:46:55 [http-nio-8088-exec-10] DEBUG org.hibernate.SQL - insert into tbl_transaction (amount,bank_type,created_at,created_by,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-06 10:46:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:46:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:46:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:46:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:46:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@326d6721 MDC:[traceId=, spanId=]
2025-06-06 10:46:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:46:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4fa89e72 MDC:[traceId=, spanId=]
2025-06-06 10:46:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:46:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:46:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:46:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:46:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@760684127 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:46:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:46:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:47:28 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:47:28 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:47:28 [http-nio-8088-exec-8] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 10:47:28 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:47:28 [http-nio-8088-exec-8] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-06 10:47:28 [http-nio-8088-exec-8] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-06 10:47:28 [http-nio-8088-exec-8] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-06 10:47:28 [http-nio-8088-exec-8] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-06 10:47:28 [http-nio-8088-exec-8] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-06 10:47:28 [http-nio-8088-exec-8] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=1111, fromAccountNumber=12345678, updatedBy=test123, bankType=INTERNAL, description=, type=TRANSFER, createdAt=2025-06-06T10:47:28.904429400, destinationBankCode=970452, toAccountNumber=87654321, createdBy=test123, currency=VND, id=540195c9-b6bd-4b97-aee7-d0b24a72b992, referenceCode=TXN-12345678-20250606104728e594085b, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=null, status=PENDING, timestamp=2025-06-06T10:47:28.820086300, updatedAt=2025-06-06T10:47:28.904429400} MDC:[traceId=, spanId=]
2025-06-06 10:47:28 [http-nio-8088-exec-8] DEBUG org.hibernate.SQL - insert into tbl_transaction (amount,bank_type,created_at,created_by,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-06 10:47:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:47:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:47:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:47:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:47:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@527fdc1 MDC:[traceId=, spanId=]
2025-06-06 10:47:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:47:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5f1a671e MDC:[traceId=, spanId=]
2025-06-06 10:47:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:47:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:47:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:47:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:47:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1416597559 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:47:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:47:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:48:29 [http-nio-8088-exec-9] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:48:29 [http-nio-8088-exec-9] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:48:29 [http-nio-8088-exec-9] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 10:48:29 [http-nio-8088-exec-9] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:48:29 [http-nio-8088-exec-9] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-06 10:48:29 [http-nio-8088-exec-9] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-06 10:48:29 [http-nio-8088-exec-9] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-06 10:48:29 [http-nio-8088-exec-9] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-06 10:48:29 [http-nio-8088-exec-9] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-06 10:48:29 [http-nio-8088-exec-9] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=12222, fromAccountNumber=12345678, updatedBy=test123, bankType=INTERNAL, description=, type=TRANSFER, createdAt=2025-06-06T10:48:29.277118500, destinationBankCode=970452, toAccountNumber=87654321, createdBy=test123, currency=VND, id=e1146077-297d-4e0d-91c5-de9ad0463fad, referenceCode=TXN-12345678-20250606104829f65cab70, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=null, status=PENDING, timestamp=2025-06-06T10:48:29.234176100, updatedAt=2025-06-06T10:48:29.277118500} MDC:[traceId=, spanId=]
2025-06-06 10:48:29 [http-nio-8088-exec-9] DEBUG org.hibernate.SQL - insert into tbl_transaction (amount,bank_type,created_at,created_by,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@487f7bee MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@587a187c MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@455466852 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [c0561eda-7792-48fd-84ff-17816f0c4a23] MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(4)): c0561eda-7792-48fd-84ff-17816f0c4a23 MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(4)#c0561eda-7792-48fd-84ff-17816f0c4a23] : 1480531052 MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [2222.00] MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T10:45:37.682179] MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506061045371c62a0de] MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [PENDING] MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T10:45:37.407413] MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T10:45:37.682179] MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(4)#c0561eda-7792-48fd-84ff-17816f0c4a23 MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6d5426f0 MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=2222.00, fromAccountNumber=12345678, updatedBy=test123, bankType=INTERNAL, description=, type=TRANSFER, createdAt=2025-06-06T10:45:37.682179, destinationBankCode=970452, toAccountNumber=87654321, createdBy=test123, currency=VND, id=c0561eda-7792-48fd-84ff-17816f0c4a23, referenceCode=TXN-12345678-202506061045371c62a0de, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=Quá thời gian cho phép của giao dịch, status=FAILED, timestamp=2025-06-06T10:45:37.407413, updatedAt=2025-06-06T10:48:56.540053900} MDC:[traceId=, spanId=]
2025-06-06 10:48:56 [scheduling-1] DEBUG org.hibernate.SQL - update tbl_transaction set amount=?,bank_type=?,created_at=?,created_by=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=?,updated_at=?,updated_by=? where id=? MDC:[traceId=, spanId=]
2025-06-06 10:49:05 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:49:05 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:49:08 [http-nio-8088-exec-1] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 10:49:08 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:49:08 [http-nio-8088-exec-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-06 10:49:08 [http-nio-8088-exec-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-06 10:49:08 [http-nio-8088-exec-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-06 10:49:08 [http-nio-8088-exec-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-06 10:49:08 [http-nio-8088-exec-1] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-06 10:49:08 [http-nio-8088-exec-1] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=21222, fromAccountNumber=27072000, updatedBy=test123, bankType=INTERNAL, description=, type=TRANSFER, createdAt=2025-06-06T10:49:08.950605900, destinationBankCode=970452, toAccountNumber=87654321, createdBy=test123, currency=VND, id=210ccc1a-eb77-49da-b535-244137680004, referenceCode=TXN-27072000-20250606104908c1781146, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=null, status=PENDING, timestamp=2025-06-06T10:49:08.842415, updatedAt=2025-06-06T10:49:08.950605900} MDC:[traceId=, spanId=]
2025-06-06 10:49:08 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - insert into tbl_transaction (amount,bank_type,created_at,created_by,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-06 10:49:42 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:49:42 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:49:42 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:49:42 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:49:42 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@27c59243 MDC:[traceId=, spanId=]
2025-06-06 10:49:42 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).referenceCode)  MDC:[traceId=, spanId=]
2025-06-06 10:49:42 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:49:42 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:49:42 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:49:42 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@728779296 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:49:42 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.reference_code=? MDC:[traceId=, spanId=]
2025-06-06 10:49:42 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [210ccc1a-eb77-49da-b535-244137680004] MDC:[traceId=, spanId=]
2025-06-06 10:49:42 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(2)): 210ccc1a-eb77-49da-b535-244137680004 MDC:[traceId=, spanId=]
2025-06-06 10:49:42 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(2)#210ccc1a-eb77-49da-b535-244137680004] : 125802474 MDC:[traceId=, spanId=]
2025-06-06 10:49:42 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [21222.00] MDC:[traceId=, spanId=]
2025-06-06 10:49:42 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-06 10:49:42 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T10:49:08.950606] MDC:[traceId=, spanId=]
2025-06-06 10:49:42 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-06 10:49:42 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-06 10:49:42 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-06 10:49:42 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-06 10:49:42 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-06 10:49:42 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-06 10:49:42 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 10:49:42 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-27072000-20250606104908c1781146] MDC:[traceId=, spanId=]
2025-06-06 10:49:42 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [PENDING] MDC:[traceId=, spanId=]
2025-06-06 10:49:42 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T10:49:08.842415] MDC:[traceId=, spanId=]
2025-06-06 10:49:42 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 10:49:42 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-06 10:49:42 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T10:49:08.950606] MDC:[traceId=, spanId=]
2025-06-06 10:49:42 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-06 10:49:42 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(2)#210ccc1a-eb77-49da-b535-244137680004 MDC:[traceId=, spanId=]
2025-06-06 10:49:42 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2ef7fc6f MDC:[traceId=, spanId=]
2025-06-06 10:49:43 [http-nio-8088-exec-2] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 10:49:43 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:49:43 [http-nio-8088-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-06 10:49:43 [http-nio-8088-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-06 10:49:43 [http-nio-8088-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-06 10:49:43 [http-nio-8088-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-06 10:49:43 [http-nio-8088-exec-2] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-06 10:49:43 [http-nio-8088-exec-2] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=21222.00, fromAccountNumber=27072000, updatedBy=test123, bankType=INTERNAL, description=, type=TRANSFER, createdAt=2025-06-06T10:49:08.950606, destinationBankCode=970452, toAccountNumber=87654321, createdBy=test123, currency=VND, id=210ccc1a-eb77-49da-b535-244137680004, referenceCode=TXN-27072000-20250606104908c1781146, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=null, status=COMPLETED, timestamp=2025-06-06T10:49:08.842415, updatedAt=2025-06-06T10:49:43.275114900} MDC:[traceId=, spanId=]
2025-06-06 10:49:43 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - update tbl_transaction set amount=?,bank_type=?,created_at=?,created_by=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=?,updated_at=?,updated_by=? where id=? MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5eb7d9cb MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3265916c MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@278418109 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [54452cd0-46a5-4efe-8f50-cd23bdb31493] MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(4)): 54452cd0-46a5-4efe-8f50-cd23bdb31493 MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(4)#54452cd0-46a5-4efe-8f50-cd23bdb31493] : 952691997 MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [23200.00] MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T10:46:55.517293] MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250606104655ac30817d] MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [PENDING] MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T10:46:55.429971] MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T10:46:55.517293] MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(4)#54452cd0-46a5-4efe-8f50-cd23bdb31493 MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a975d03 MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=23200.00, fromAccountNumber=12345678, updatedBy=test123, bankType=INTERNAL, description=, type=TRANSFER, createdAt=2025-06-06T10:46:55.517293, destinationBankCode=970452, toAccountNumber=87654321, createdBy=test123, currency=VND, id=54452cd0-46a5-4efe-8f50-cd23bdb31493, referenceCode=TXN-12345678-20250606104655ac30817d, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=Quá thời gian cho phép của giao dịch, status=FAILED, timestamp=2025-06-06T10:46:55.429971, updatedAt=2025-06-06T10:49:56.530270} MDC:[traceId=, spanId=]
2025-06-06 10:49:56 [scheduling-1] DEBUG org.hibernate.SQL - update tbl_transaction set amount=?,bank_type=?,created_at=?,created_by=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=?,updated_at=?,updated_by=? where id=? MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@26e20f4f MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1cc9b51f MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1815308791 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [540195c9-b6bd-4b97-aee7-d0b24a72b992] MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(4)): 540195c9-b6bd-4b97-aee7-d0b24a72b992 MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(4)#540195c9-b6bd-4b97-aee7-d0b24a72b992] : 1147835910 MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [1111.00] MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T10:47:28.904429] MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250606104728e594085b] MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [PENDING] MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T10:47:28.820086] MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T10:47:28.904429] MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(4)#540195c9-b6bd-4b97-aee7-d0b24a72b992 MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@33e133ad MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=1111.00, fromAccountNumber=12345678, updatedBy=test123, bankType=INTERNAL, description=, type=TRANSFER, createdAt=2025-06-06T10:47:28.904429, destinationBankCode=970452, toAccountNumber=87654321, createdBy=test123, currency=VND, id=540195c9-b6bd-4b97-aee7-d0b24a72b992, referenceCode=TXN-12345678-20250606104728e594085b, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=Quá thời gian cho phép của giao dịch, status=FAILED, timestamp=2025-06-06T10:47:28.820086, updatedAt=2025-06-06T10:50:56.524297900} MDC:[traceId=, spanId=]
2025-06-06 10:50:56 [scheduling-1] DEBUG org.hibernate.SQL - update tbl_transaction set amount=?,bank_type=?,created_at=?,created_by=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=?,updated_at=?,updated_by=? where id=? MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@18301b90 MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@340933e1 MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1720417790 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [e1146077-297d-4e0d-91c5-de9ad0463fad] MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(4)): e1146077-297d-4e0d-91c5-de9ad0463fad MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(4)#e1146077-297d-4e0d-91c5-de9ad0463fad] : 233319475 MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [12222.00] MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T10:48:29.277119] MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250606104829f65cab70] MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [PENDING] MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T10:48:29.234176] MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T10:48:29.277119] MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(4)#e1146077-297d-4e0d-91c5-de9ad0463fad MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3031d4fd MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=12222.00, fromAccountNumber=12345678, updatedBy=test123, bankType=INTERNAL, description=, type=TRANSFER, createdAt=2025-06-06T10:48:29.277119, destinationBankCode=970452, toAccountNumber=87654321, createdBy=test123, currency=VND, id=e1146077-297d-4e0d-91c5-de9ad0463fad, referenceCode=TXN-12345678-20250606104829f65cab70, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=Quá thời gian cho phép của giao dịch, status=FAILED, timestamp=2025-06-06T10:48:29.234176, updatedAt=2025-06-06T10:51:56.528914100} MDC:[traceId=, spanId=]
2025-06-06 10:51:56 [scheduling-1] DEBUG org.hibernate.SQL - update tbl_transaction set amount=?,bank_type=?,created_at=?,created_by=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=?,updated_at=?,updated_by=? where id=? MDC:[traceId=, spanId=]
2025-06-06 10:52:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:52:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:52:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:52:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:52:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@b716d2d MDC:[traceId=, spanId=]
2025-06-06 10:52:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:52:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@412f68e6 MDC:[traceId=, spanId=]
2025-06-06 10:52:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:52:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:52:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:52:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:52:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@321148483 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:52:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:52:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:53:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:53:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:53:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:53:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:53:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@162b3db MDC:[traceId=, spanId=]
2025-06-06 10:53:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:53:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1d5635ff MDC:[traceId=, spanId=]
2025-06-06 10:53:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:53:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:53:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:53:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:53:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@723527111 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:53:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:53:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:54:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:54:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:54:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:54:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:54:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@344686de MDC:[traceId=, spanId=]
2025-06-06 10:54:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:54:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@584dc59a MDC:[traceId=, spanId=]
2025-06-06 10:54:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:54:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:54:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:54:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:54:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1351739073 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:54:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:54:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:55:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:55:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:55:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:55:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:55:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@27d50d1d MDC:[traceId=, spanId=]
2025-06-06 10:55:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:55:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2b1414dc MDC:[traceId=, spanId=]
2025-06-06 10:55:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:55:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:55:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:55:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:55:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2036772105 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:55:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:55:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:56:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:56:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:56:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:56:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:56:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1ac895dd MDC:[traceId=, spanId=]
2025-06-06 10:56:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:56:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2d6ebe7a MDC:[traceId=, spanId=]
2025-06-06 10:56:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:56:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:56:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:56:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:56:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1819847602 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:56:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:56:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:57:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:57:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:57:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:57:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:57:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@58aef3da MDC:[traceId=, spanId=]
2025-06-06 10:57:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:57:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2c7d35a4 MDC:[traceId=, spanId=]
2025-06-06 10:57:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:57:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:57:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:57:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:57:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@207036054 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:57:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:57:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:58:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:58:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:58:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:58:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:58:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7a1e2ef9 MDC:[traceId=, spanId=]
2025-06-06 10:58:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:58:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@216c1a02 MDC:[traceId=, spanId=]
2025-06-06 10:58:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:58:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:58:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:58:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:58:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1528479704 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:58:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:58:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 10:59:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 10:59:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 10:59:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 10:59:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 10:59:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3c4c8f7 MDC:[traceId=, spanId=]
2025-06-06 10:59:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 10:59:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@40e17dd3 MDC:[traceId=, spanId=]
2025-06-06 10:59:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 10:59:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 10:59:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 10:59:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 10:59:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@115007328 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 10:59:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 10:59:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:00:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:00:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:00:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:00:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:00:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@236edfe7 MDC:[traceId=, spanId=]
2025-06-06 11:00:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:00:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3e188ea1 MDC:[traceId=, spanId=]
2025-06-06 11:00:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:00:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:00:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:00:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:00:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@104681267 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:00:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:00:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:01:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:01:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:01:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:01:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:01:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@29e12e2c MDC:[traceId=, spanId=]
2025-06-06 11:01:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:01:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@9e23819 MDC:[traceId=, spanId=]
2025-06-06 11:01:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:01:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:01:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:01:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:01:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1646393624 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:01:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:01:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:02:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:02:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:02:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:02:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:02:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@72a41b5a MDC:[traceId=, spanId=]
2025-06-06 11:02:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:02:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@32185ddb MDC:[traceId=, spanId=]
2025-06-06 11:02:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:02:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:02:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:02:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:02:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1535965981 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:02:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:02:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:03:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:03:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:03:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:03:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:03:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6fb78ae0 MDC:[traceId=, spanId=]
2025-06-06 11:03:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:03:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2664edb MDC:[traceId=, spanId=]
2025-06-06 11:03:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:03:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:03:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:03:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:03:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2108438732 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:03:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:03:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:04:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:04:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:04:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:04:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:04:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1000ae4f MDC:[traceId=, spanId=]
2025-06-06 11:04:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:04:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@57f401ad MDC:[traceId=, spanId=]
2025-06-06 11:04:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:04:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:04:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:04:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:04:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1911870345 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:04:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:04:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:05:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:05:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:05:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:05:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:05:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6fa0436d MDC:[traceId=, spanId=]
2025-06-06 11:05:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:05:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@479c9c26 MDC:[traceId=, spanId=]
2025-06-06 11:05:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:05:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:05:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:05:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:05:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1218816006 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:05:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:05:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:06:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:06:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:06:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:06:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:06:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@57bca3c1 MDC:[traceId=, spanId=]
2025-06-06 11:06:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:06:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4a5946e MDC:[traceId=, spanId=]
2025-06-06 11:06:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:06:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:06:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:06:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:06:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1335888675 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:06:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:06:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:07:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:07:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:07:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:07:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:07:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@73c3928 MDC:[traceId=, spanId=]
2025-06-06 11:07:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:07:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4d9e0ace MDC:[traceId=, spanId=]
2025-06-06 11:07:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:07:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:07:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:07:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:07:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@581664907 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:07:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:07:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:08:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:08:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:08:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:08:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:08:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@a9bdda6 MDC:[traceId=, spanId=]
2025-06-06 11:08:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:08:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@430083b6 MDC:[traceId=, spanId=]
2025-06-06 11:08:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:08:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:08:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:08:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:08:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1280219986 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:08:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:08:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:09:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:09:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:09:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:09:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:09:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3a46ec44 MDC:[traceId=, spanId=]
2025-06-06 11:09:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:09:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@11ee89b7 MDC:[traceId=, spanId=]
2025-06-06 11:09:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:09:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:09:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:09:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:09:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@713866350 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:09:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:09:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:10:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:10:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:10:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:10:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:10:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@26b6a303 MDC:[traceId=, spanId=]
2025-06-06 11:10:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:10:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@52f55103 MDC:[traceId=, spanId=]
2025-06-06 11:10:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:10:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:10:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:10:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:10:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1095192361 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:10:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:10:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:11:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:11:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:11:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:11:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:11:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@56625029 MDC:[traceId=, spanId=]
2025-06-06 11:11:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:11:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3347466c MDC:[traceId=, spanId=]
2025-06-06 11:11:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:11:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:11:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:11:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:11:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@80318541 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:11:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:11:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:12:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:12:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:12:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:12:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:12:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@50c6a460 MDC:[traceId=, spanId=]
2025-06-06 11:12:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:12:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7d7f817e MDC:[traceId=, spanId=]
2025-06-06 11:12:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:12:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:12:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:12:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:12:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@563125994 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:12:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:12:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:13:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:13:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:13:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:13:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:13:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1f2e852f MDC:[traceId=, spanId=]
2025-06-06 11:13:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:13:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@131276a5 MDC:[traceId=, spanId=]
2025-06-06 11:13:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:13:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:13:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:13:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:13:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1068434746 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:13:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:13:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:14:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:14:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:14:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:14:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:14:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@782a23ee MDC:[traceId=, spanId=]
2025-06-06 11:14:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:14:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@361531f MDC:[traceId=, spanId=]
2025-06-06 11:14:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:14:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:14:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:14:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:14:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@377814555 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:14:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:14:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:15:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:15:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:15:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:15:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:15:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7fee3020 MDC:[traceId=, spanId=]
2025-06-06 11:15:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:15:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@bb2bd33 MDC:[traceId=, spanId=]
2025-06-06 11:15:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:15:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:15:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:15:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:15:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@75663437 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:15:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:15:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:16:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:16:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:16:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:16:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:16:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@261d2ca2 MDC:[traceId=, spanId=]
2025-06-06 11:16:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:16:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@37b84a30 MDC:[traceId=, spanId=]
2025-06-06 11:16:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:16:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:16:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:16:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:16:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2024284083 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:16:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:16:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:17:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:17:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:17:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:17:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:17:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1f97878b MDC:[traceId=, spanId=]
2025-06-06 11:17:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:17:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@38528196 MDC:[traceId=, spanId=]
2025-06-06 11:17:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:17:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:17:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:17:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:17:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@599084075 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:17:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:17:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:18:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:18:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:18:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:18:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:18:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4006e7bd MDC:[traceId=, spanId=]
2025-06-06 11:18:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:18:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4a2cc53 MDC:[traceId=, spanId=]
2025-06-06 11:18:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:18:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:18:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:18:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:18:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1102220233 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:18:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:18:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:19:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:19:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:19:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:19:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:19:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@25bb9891 MDC:[traceId=, spanId=]
2025-06-06 11:19:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:19:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@8efe13e MDC:[traceId=, spanId=]
2025-06-06 11:19:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:19:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:19:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:19:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:19:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@598047382 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:19:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:19:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:20:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:20:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:20:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:20:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:20:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6301cb4a MDC:[traceId=, spanId=]
2025-06-06 11:20:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:20:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6d94a305 MDC:[traceId=, spanId=]
2025-06-06 11:20:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:20:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:20:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:20:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:20:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1401781847 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:20:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:20:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:21:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:21:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:21:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:21:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:21:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4aa0fec2 MDC:[traceId=, spanId=]
2025-06-06 11:21:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:21:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@36a0034b MDC:[traceId=, spanId=]
2025-06-06 11:21:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:21:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:21:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:21:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:21:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2119735968 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:21:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:21:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:22:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:22:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:22:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:22:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:22:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5bea664a MDC:[traceId=, spanId=]
2025-06-06 11:22:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:22:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3f75ab28 MDC:[traceId=, spanId=]
2025-06-06 11:22:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:22:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:22:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:22:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:22:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@429883214 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:22:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:22:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:23:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:23:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:23:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:23:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:23:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1f350b56 MDC:[traceId=, spanId=]
2025-06-06 11:23:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:23:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4b8874c MDC:[traceId=, spanId=]
2025-06-06 11:23:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:23:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:23:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:23:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:23:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@889930378 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:23:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:23:57 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:24:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:24:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:24:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:24:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:24:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@45ea164b MDC:[traceId=, spanId=]
2025-06-06 11:24:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:24:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2e261f75 MDC:[traceId=, spanId=]
2025-06-06 11:24:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:24:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:24:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:24:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:24:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1377271517 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:24:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:24:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:25:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:25:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:25:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:25:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:25:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@e252bd3 MDC:[traceId=, spanId=]
2025-06-06 11:25:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:25:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@32b3e3b3 MDC:[traceId=, spanId=]
2025-06-06 11:25:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:25:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:25:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:25:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:25:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1888624736 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:25:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:25:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:26:46 [SpringContextShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-06-06 11:26:46 [SpringContextShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@631d8e8d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4a3f99f6] MDC:[traceId=, spanId=]
2025-06-06 11:26:46 [SpringContextShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-06 11:26:46 [SpringContextShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-06 11:27:06 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-06-06 11:27:06 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-06 11:27:06 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-06 11:27:06 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-06 11:27:06 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-06 11:27:06 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-06 11:27:06 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-06 11:27:06 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-06 11:27:07 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-06 11:27:07 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-06 11:27:07 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-06 11:27:07 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-06 11:27:07 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-06 11:27:07 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@77cfcbbb
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/java-banking-phase2/backend/transaction-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.transaction_service.entity.Transaction]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1aa4f2df MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1aa4f2df MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1aa4f2df MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@e6d8532 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@e6d8532 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@64239172 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@64239172 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@d1006a5 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@d1006a5 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@301f3fd2 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@301f3fd2 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@301f3fd2 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@523968f6 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@523968f6 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@523968f6 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2a69cbc2 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2a69cbc2 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@27c1d504 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6ee99f81 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6ee99f81 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@770e2472 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@13ddc68a MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3a9d4800 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3a9d4800 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3a9d4800 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@182add45 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@182add45 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@182add45 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1e014786 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1e014786 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1e014786 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@63953b5a MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@63953b5a MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@63953b5a MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3318a260 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3318a260 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3318a260 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7d9691b3 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7d9691b3 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@69bfd4f0 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@69bfd4f0 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@233a7d76 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@233a7d76 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@233a7d76 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@55c7c0d3 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1c15d8d1 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1c15d8d1 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@b9a87f7 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7b3b9a3f MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7b3b9a3f MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7b3b9a3f MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@10910cd3 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@22708d40 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7d0a13c6 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5a47843a MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5a47843a MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4228ec35 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4228ec35 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@649463bd MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@49add8ca MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2fadf391 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2a61eb15 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6d2fec6f MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4ae31288 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@a12513e MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@a12513e MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2f0e3a2a MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2f0e3a2a MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3dd0f730 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3dd0f730 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6ff5d550 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6ff5d550 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7776e231 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7776e231 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2977599f MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@13a452f6 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@523a5a87 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@523a5a87 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@129d4d9b MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@13555f6 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@303784c4 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@30d90e27 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@30d90e27 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@48d06c32 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@63e10a3b MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@6f7cb327 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6f7cb327 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@172c30d9 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@172c30d9 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5cd67ff2 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5cd67ff2 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5cd67ff2 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@370d1681 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@370d1681 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@370d1681 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3de27ecc MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4b3e2b51 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@24f8e42b MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@24f8e42b MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7b1e572b MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7b1e572b MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7b1e572b MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5524429a MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6ffa9fcc MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@c40f7a4 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@c40f7a4 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5ee5e08 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5ee5e08 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5ee5e08 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7229fcbd MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7229fcbd MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@499619cb MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@499619cb MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@42603a8a MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@42603a8a MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@350932d0 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@350932d0 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@878ecd8 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@878ecd8 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@71d9e45d MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@322e3486 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@79551353 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@79551353 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6d29f394 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@388f129f MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@31d05deb MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4a17e3d8 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@68801c5d MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@285bf038 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1bd7cfdd MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6eabf65c MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6217d20 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@498b033d] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@498b033d) [was null] MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6fa075c7] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@b5939fc] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@38d1eac] MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@498b033d] MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@498b033d] MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-06-06 11:27:13 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6988850d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@64d3bbd6) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@124fd02b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@57ec8709) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7ae1d014) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@315d995) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6fb78f54) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5cd08964) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@28c5939a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5313e66) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56afdcbb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@eece4a3) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ab1efa7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6ff3299) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2e9d7cf9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@47bd4c75) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@42744ff2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3de0c6df) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7b7d36a9 MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@6d29f394` MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7f0da632] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6c8a4ff0] MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Transaction MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.example.transaction_service.entity.Transaction on table tbl_transaction MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:id] MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.id MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property amount with lazy=false MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:amount] MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for amount MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.amount MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property amount MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property bankType with lazy=false MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:bankType] MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for bankType MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.bank_type MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property bankType MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:createdAt] MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for createdAt MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.created_at MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property createdAt MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property createdBy with lazy=false MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:createdBy] MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for createdBy MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.created_by MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property createdBy MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property currency with lazy=false MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:currency] MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for currency MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.currency MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property currency MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property description with lazy=false MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:description] MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for description MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.description MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property description MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankCode with lazy=false MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankCode] MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankCode MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_code MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankCode MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankName with lazy=false MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankName] MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankName MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_name MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankName MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property failedReason with lazy=false MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:failedReason] MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for failedReason MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.failed_reason MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property failedReason MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:fromAccountNumber] MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.from_account_number MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property fromAccountNumber MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property referenceCode with lazy=false MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:referenceCode] MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for referenceCode MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.reference_code MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property referenceCode MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property status with lazy=false MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:status] MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for status MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.status MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property status MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property timestamp with lazy=false MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:timestamp] MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for timestamp MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.timestamp MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property timestamp MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property toAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:toAccountNumber] MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for toAccountNumber MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.to_account_number MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property toAccountNumber MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property type with lazy=false MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:type] MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for type MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.type MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property type MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:updatedAt] MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for updatedAt MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.updated_at MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property updatedAt MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property updatedBy with lazy=false MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:updatedBy] MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for updatedBy MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.updated_by MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property updatedBy MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.example.transaction_service.entity MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding touchForUpdate as PreUpdate callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding touchForCreate as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bankType MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for createdAt MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for createdBy MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for currency MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for description MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankCode MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankName MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for failedReason MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for referenceCode MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for timestamp MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for toAccountNumber MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for type MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for updatedAt MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for updatedBy MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_transaction] MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {jdk.tls.rejectClientInitiatedRenegotiation=true, java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@6c8cb519, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\java-banking-phase2\backend\transaction-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.11\spring-boot-starter-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.11\spring-boot-starter-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.11\spring-boot-starter-logging-3.3.11.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.11\spring-boot-actuator-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.11\spring-boot-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.13\micrometer-observation-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.13\micrometer-commons-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.13\micrometer-jakarta9-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-core\1.13.13\micrometer-core-1.13.13.jar;C:\Users\A715-42G\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\A715-42G\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.11\spring-boot-starter-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.11\spring-boot-starter-aop-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.11\spring-boot-starter-jdbc-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.19\spring-jdbc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.11\spring-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.11\spring-data-commons-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.19\spring-orm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.19\spring-context-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.19\spring-tx-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.19\spring-beans-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.19\spring-aspects-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.11\spring-boot-starter-web-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.11\spring-boot-starter-json-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.11\spring-boot-starter-tomcat-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.40\tomcat-embed-core-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.40\tomcat-embed-websocket-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.19\spring-web-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.19\spring-webmvc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.19\spring-expression-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-devtools\3.3.11\spring-boot-devtools-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.11\spring-boot-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.11\spring-boot-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.19\spring-core-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.19\spring-jcl-6.1.19.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.11\spring-boot-starter-validation-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.0.2\springdoc-openapi-starter-webmvc-ui-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.0.2\springdoc-openapi-starter-webmvc-api-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.0.2\springdoc-openapi-starter-common-2.0.2.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.7\swagger-core-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.7\swagger-annotations-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.7\swagger-models-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\4.15.5\swagger-ui-4.15.5.jar;C:\Users\A715-42G\.m2\repository\org\webjars\webjars-locator-core\0.58\webjars-locator-core-0.58.jar;C:\Users\A715-42G\.m2\repository\io\github\classgraph\classgraph\4.8.149\classgraph-4.8.149.jar;D:\LT_Web\SpringBoot\java-banking-phase2\backend\common-service\target\classes;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-starter\3.3.2\dubbo-spring-boot-starter-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure\3.3.2\dubbo-spring-boot-autoconfigure-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure-compatible\3.3.2\dubbo-spring-boot-autoconfigure-compatible-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo\3.3.2\dubbo-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\javassist\javassist\3.30.2-GA\javassist-3.30.2-GA.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-all\4.1.119.Final\netty-all-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-dns\4.1.119.Final\netty-codec-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-haproxy\4.1.119.Final\netty-codec-haproxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http\4.1.119.Final\netty-codec-http-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http2\4.1.119.Final\netty-codec-http2-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-memcache\4.1.119.Final\netty-codec-memcache-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-mqtt\4.1.119.Final\netty-codec-mqtt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-redis\4.1.119.Final\netty-codec-redis-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-smtp\4.1.119.Final\netty-codec-smtp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-socks\4.1.119.Final\netty-codec-socks-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-stomp\4.1.119.Final\netty-codec-stomp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-xml\4.1.119.Final\netty-codec-xml-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-proxy\4.1.119.Final\netty-handler-proxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-ssl-ocsp\4.1.119.Final\netty-handler-ssl-ocsp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns\4.1.119.Final\netty-resolver-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-rxtx\4.1.119.Final\netty-transport-rxtx-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-sctp\4.1.119.Final\netty-transport-sctp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-udt\4.1.119.Final\netty-transport-udt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-kqueue\4.1.119.Final\netty-transport-classes-kqueue-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.119.Final\netty-resolver-dns-classes-macos-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-riscv64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\hessian-lite\4.0.3\hessian-lite-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\alibaba\fastjson2\fastjson2\2.0.53\fastjson2-2.0.53.jar;C:\Users\A715-42G\.m2\repository\com\google\protobuf\protobuf-java\3.25.5\protobuf-java-3.25.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-framework\5.1.0\curator-framework-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-client\5.1.0\curator-client-5.1.0.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\guava\27.0.1-jre\guava-27.0.1-jre.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\A715-42G\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\checkerframework\checker-qual\2.5.2\checker-qual-2.5.2.jar;C:\Users\A715-42G\.m2\repository\com\google\errorprone\error_prone_annotations\2.2.0\error_prone_annotations-2.2.0.jar;C:\Users\A715-42G\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\A715-42G\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.17\animal-sniffer-annotations-1.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper\3.7.1\zookeeper-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper-jute\3.7.1\zookeeper-jute-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\yetus\audience-annotations\0.12.0\audience-annotations-0.12.0.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler\4.1.119.Final\netty-handler-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-common\4.1.119.Final\netty-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver\4.1.119.Final\netty-resolver-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-buffer\4.1.119.Final\netty-buffer-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport\4.1.119.Final\netty-transport-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.119.Final\netty-transport-native-unix-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec\4.1.119.Final\netty-codec-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.119.Final\netty-transport-classes-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-recipes\5.5.0\curator-recipes-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-x-discovery\5.5.0\curator-x-discovery-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-vault-config\4.1.1\spring-cloud-starter-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.3.1\httpclient5-5.3.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.5\httpcore5-h2-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.5\httpcore5-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter\4.1.2\spring-cloud-starter-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-context\4.1.2\spring-cloud-context-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-commons\4.1.2\spring-cloud-commons-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-rsa\1.1.2\spring-security-rsa-1.1.2.jar;C:\Users\A715-42G\.m2\repository\org\bouncycastle\bcprov-jdk18on\1.77\bcprov-jdk18on-1.77.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-vault-config\4.1.1\spring-cloud-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\vault\spring-vault-core\3.1.1\spring-vault-core-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-redis\3.3.11\spring-boot-starter-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\lettuce\lettuce-core\6.3.2.RELEASE\lettuce-core-6.3.2.RELEASE.jar;C:\Users\A715-42G\.m2\repository\io\projectreactor\reactor-core\3.6.16\reactor-core-3.6.16.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-redis\3.3.11\spring-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-keyvalue\3.3.11\spring-data-keyvalue-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-oxm\6.1.19\spring-oxm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context-support\6.1.19\spring-context-support-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream\4.2.1\spring-cloud-stream-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-messaging\6.1.19\spring-messaging-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-core\6.3.9\spring-integration-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-jmx\6.3.9\spring-integration-jmx-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\retry\spring-retry\2.0.11\spring-retry-2.0.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-function-context\4.2.2\spring-cloud-function-context-4.2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-function-core\4.2.2\spring-cloud-function-core-4.2.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-joda\2.17.3\jackson-datatype-joda-2.17.3.jar;C:\Users\A715-42G\.m2\repository\joda-time\joda-time\2.10.14\joda-time-2.10.14.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-stream-kafka\4.2.1\spring-cloud-starter-stream-kafka-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka\4.2.1\spring-cloud-stream-binder-kafka-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka-core\4.2.1\spring-cloud-stream-binder-kafka-core-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-kafka\6.3.9\spring-integration-kafka-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\kafka\spring-kafka\3.2.8\spring-kafka-3.2.8.jar;C:\Users\A715-42G\.m2\repository\org\apache\kafka\kafka-clients\3.7.2\kafka-clients-3.7.2.jar;C:\Users\A715-42G\.m2\repository\com\github\luben\zstd-jni\1.5.6-4\zstd-jni-1.5.6-4.jar;C:\Users\A715-42G\.m2\repository\org\lz4\lz4-java\1.8.0\lz4-java-1.8.0.jar;C:\Users\A715-42G\.m2\repository\org\xerial\snappy\snappy-java\1.1.10.5\snappy-java-1.1.10.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.11\spring-boot-starter-security-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.19\spring-aop-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.9\spring-security-config-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.9\spring-security-web-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-oauth2-resource-server\3.3.11\spring-boot-starter-oauth2-resource-server-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.9\spring-security-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.9\spring-security-crypto-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-resource-server\6.3.9\spring-security-oauth2-resource-server-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-core\6.3.9\spring-security-oauth2-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-jose\6.3.9\spring-security-oauth2-jose-6.3.9.jar;C:\Users\A715-42G\.m2\repository\com\nimbusds\nimbus-jose-jwt\9.37.3\nimbus-jose-jwt-9.37.3.jar;C:\Users\A715-42G\.m2\repository\com\github\stephenc\jcip\jcip-annotations\1.0-1\jcip-annotations-1.0-1.jar;C:\Users\A715-42G\.m2\repository\org\keycloak\keycloak-admin-client\26.0.0\keycloak-admin-client-26.0.0.jar;C:\Users\A715-42G\.m2\repository\org\keycloak\keycloak-client-common-synced\26.0.0\keycloak-client-common-synced-26.0.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\commons-logging-jboss-logging\1.0.0.Final\commons-logging-jboss-logging-1.0.0.Final.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\microprofile\openapi\microprofile-openapi-api\3.1.1\microprofile-openapi-api-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-client\6.2.9.Final\resteasy-client-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-client-api\6.2.9.Final\resteasy-client-api-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-core-spi\6.2.9.Final\resteasy-core-spi-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-core\6.2.9.Final\resteasy-core-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\jandex\2.4.5.Final\jandex-2.4.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\com\ibm\async\asyncutil\0.1.0\asyncutil-0.1.0.jar;C:\Users\A715-42G\.m2\repository\commons-codec\commons-codec\1.16.1\commons-codec-1.16.1.jar;C:\Users\A715-42G\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\3.1.0\jakarta.ws.rs-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-multipart-provider\6.2.9.Final\resteasy-multipart-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\mail\jakarta.mail-api\2.1.3\jakarta.mail-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-mail\2.0.3\angus-mail-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-dom\0.8.11\apache-mime4j-dom-0.8.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-core\0.8.11\apache-mime4j-core-0.8.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-storage\0.8.11\apache-mime4j-storage-0.8.11.jar;C:\Users\A715-42G\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-jackson2-provider\6.2.9.Final\resteasy-jackson2-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-base\2.17.3\jackson-jakarta-rs-base-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-json-provider\2.17.3\jackson-jakarta-rs-json-provider-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-jakarta-xmlbind-annotations\2.17.3\jackson-module-jakarta-xmlbind-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\json-patch\1.13\json-patch-1.13.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\msg-simple\1.2\msg-simple-1.2.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\btf\1.3\btf-1.3.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\jackson-coreutils\2.0\jackson-coreutils-2.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-jaxb-provider\6.2.9.Final\resteasy-jaxb-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\codemodel\4.0.5\codemodel-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-jxc\4.0.5\jaxb-jxc-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-xjc\4.0.5\jaxb-xjc-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\xsom\4.0.5\xsom-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-tools\4.1.2\istack-commons-tools-4.1.2.jar;C:\Users\A715-42G\.m2\repository\com\sun\xml\bind\external\relaxng-datatype\4.0.3\relaxng-datatype-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\sun\xml\bind\external\rngom\4.0.3\rngom-4.0.3.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.example.transaction_service.TransactionServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@e259e51, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.3042204642178826982, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\java-banking-phase2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=1688, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.3042204642178826982, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@51ab9fac, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\ProgramData\chocolatey\bin;D:\KienLongBank\Vault;D:\GrafanaLabs\grafana\bin;D:\KienLongBank\InfluxData\influxdb-1.8.10-1;D:\Document\Work\Redis;C:\Program Files\Docker\Docker\resources\bin;D:\nodejs\nvm;C:\nvm4w\nodejs;C:\Program Files\nodejs\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\XamPP\php;C:\Program Files\Azure Data Studio\bin;D:\nodejs\nvm;C:\nvm4w\nodejs;C:\Users\A715-42G\AppData\Roaming\npm;D:\Document\cursor\resources\app\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[transaction-service] } MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@2d0cd43e] under count; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@56b2fc92] under every; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@476ddb35] under any; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3bfda182] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a275225] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58a8c8b1] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2a5d9e11] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7c7acb69] under log; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@53611eb9] under position; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@50a05057] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@5a1b0e9d] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@22d60a6d] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7178bb8a] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@5748acd4] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@42775eb9] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@31071206] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@57de5970] under str; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@48a18dc6] under format; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@4ecadb44] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@56a0b5a1] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6559de7a] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1f56f365] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7d310eb9] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@70fe9b61] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5bff310a] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@739a3ccb] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6abb0c7] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@20a06e0] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@b1899a9] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7c7acb69 MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@72338082] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6d3f9c95] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3cb6441e] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@53611eb9 MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@62ce5956] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@11702806] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@46a5ba39] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@24092c8c] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@349dc5b2] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@24bdfb3f] under format; prior registration was org.hibernate.dialect.function.FormatFunction@48a18dc6 MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@5bff310a MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@739a3ccb MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4fa2e9e3] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2a5d9e11 MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@22a2d1d7] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78482064] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@66384a66] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.example.transaction_service.entity.Transaction]: private accessor [amount] MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.example.transaction_service.entity.Transaction) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction)] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction.updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_transaction (amount,bank_type,created_at,created_by,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_transaction set amount=?,bank_type=?,created_at=?,created_by=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=?,updated_at=?,updated_by=? where id=? MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7f0da632] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@339ea184] MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-06-06 11:27:14 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-06-06 11:27:15 [restartedMain] DEBUG org.hibernate.mapping.Table - No alter strings for table : tbl_transaction MDC:[traceId=, spanId=]
2025-06-06 11:27:15 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5377784e MDC:[traceId=, spanId=]
2025-06-06 11:27:15 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: dfa4c502-baed-4572-83c5-d32f48eb503b (<unnamed>) MDC:[traceId=, spanId=]
2025-06-06 11:27:15 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-06-06 11:27:15 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-06-06 11:27:15 [restartedMain] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-06-06 11:27:15 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-06 11:27:15 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-06 11:27:15 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-06 11:27:15 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-06 11:27:18 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-06 11:27:18 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-06-06 11:27:18 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-06-06 11:27:18 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-06 11:27:18 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-06-06 11:27:18 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-06 11:27:18 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-06 11:27:18 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-06 11:27:18 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-06 11:27:18 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-06 11:27:18 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-06 11:27:18 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-06 11:27:18 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-06 11:27:18 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-06 11:27:18 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-06 11:27:18 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-06 11:27:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:27:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:27:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:27:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:27:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3ebdaddb MDC:[traceId=, spanId=]
2025-06-06 11:27:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:27:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@274d86ec MDC:[traceId=, spanId=]
2025-06-06 11:27:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:27:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:27:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:27:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:27:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1704100183 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:27:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:27:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:28:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:28:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:28:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:28:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:28:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@41826252 MDC:[traceId=, spanId=]
2025-06-06 11:28:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:28:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@334a0094 MDC:[traceId=, spanId=]
2025-06-06 11:28:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:28:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:28:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:28:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:28:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2097127660 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:28:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:28:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:28:29 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.query.plan.cache - Creating and caching NativeQuery ParameterInterpretation - ParameterInterpretationImpl (SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
) : {
} MDC:[traceId=, spanId=]
2025-06-06 11:28:29 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:28:29 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 11:28:29 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 11:28:29 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@29e43314 MDC:[traceId=, spanId=]
2025-06-06 11:28:29 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 11:28:29 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@29e43314 MDC:[traceId=, spanId=]
2025-06-06 11:28:29 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 11:29:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:29:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:29:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:29:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:29:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@21c023c MDC:[traceId=, spanId=]
2025-06-06 11:29:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:29:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@36023af5 MDC:[traceId=, spanId=]
2025-06-06 11:29:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:29:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:29:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:29:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:29:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1227806974 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:29:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:29:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:30:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:30:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:30:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:30:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:30:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@312e7079 MDC:[traceId=, spanId=]
2025-06-06 11:30:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:30:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@628a70c3 MDC:[traceId=, spanId=]
2025-06-06 11:30:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:30:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:30:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:30:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:30:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@961992624 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:30:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:30:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:31:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:31:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:31:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:31:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:31:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2ebe883c MDC:[traceId=, spanId=]
2025-06-06 11:31:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:31:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6887f06f MDC:[traceId=, spanId=]
2025-06-06 11:31:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:31:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:31:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:31:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:31:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1136745334 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:31:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:31:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:32:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:32:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:32:21 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:32:21 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:32:21 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@13ccdffc MDC:[traceId=, spanId=]
2025-06-06 11:32:21 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:32:21 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@783adcb4 MDC:[traceId=, spanId=]
2025-06-06 11:32:21 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:32:21 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:32:21 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:32:21 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:32:21 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1720879008 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:32:21 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:32:21 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:33:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:33:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:33:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:33:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:33:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4a0a387f MDC:[traceId=, spanId=]
2025-06-06 11:33:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:33:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4a5d6d23 MDC:[traceId=, spanId=]
2025-06-06 11:33:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:33:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:33:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:33:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:33:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1763472029 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:33:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:33:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:34:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:34:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:34:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:34:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:34:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4d40feff MDC:[traceId=, spanId=]
2025-06-06 11:34:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:34:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6454b52e MDC:[traceId=, spanId=]
2025-06-06 11:34:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:34:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:34:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:34:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:34:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1140232152 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:34:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:34:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:35:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:35:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:35:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:35:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:35:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1c56a4f4 MDC:[traceId=, spanId=]
2025-06-06 11:35:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:35:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@705bbc2a MDC:[traceId=, spanId=]
2025-06-06 11:35:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:35:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:35:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:35:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:35:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@391761212 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:35:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:35:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:36:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:36:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:36:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:36:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:36:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6c4d3244 MDC:[traceId=, spanId=]
2025-06-06 11:36:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:36:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@62199332 MDC:[traceId=, spanId=]
2025-06-06 11:36:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:36:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:36:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:36:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:36:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@720205846 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:36:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:36:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:37:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:37:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:37:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:37:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:37:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1ed20796 MDC:[traceId=, spanId=]
2025-06-06 11:37:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:37:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7346c143 MDC:[traceId=, spanId=]
2025-06-06 11:37:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:37:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:37:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:37:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:37:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@196373178 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:37:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:37:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:38:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:38:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:38:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:38:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:38:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7507d3d4 MDC:[traceId=, spanId=]
2025-06-06 11:38:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:38:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7b55871d MDC:[traceId=, spanId=]
2025-06-06 11:38:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:38:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:38:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:38:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:38:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@481327530 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:38:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:38:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:38:28 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:38:28 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 11:38:28 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 11:38:28 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@c83b5d MDC:[traceId=, spanId=]
2025-06-06 11:38:28 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 11:38:28 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@c83b5d MDC:[traceId=, spanId=]
2025-06-06 11:38:28 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 11:38:53 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:38:53 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 11:38:53 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 11:38:53 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@5d59e2c7 MDC:[traceId=, spanId=]
2025-06-06 11:38:53 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 11:38:53 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@5d59e2c7 MDC:[traceId=, spanId=]
2025-06-06 11:38:53 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 11:39:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:39:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:39:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:39:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:39:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@53bc8035 MDC:[traceId=, spanId=]
2025-06-06 11:39:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:39:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6d43138a MDC:[traceId=, spanId=]
2025-06-06 11:39:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:39:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:39:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:39:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:39:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@238882594 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:39:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:39:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:40:08 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:40:08 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 11:40:08 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 11:40:08 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@2eb4767f MDC:[traceId=, spanId=]
2025-06-06 11:40:08 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 11:40:08 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@2eb4767f MDC:[traceId=, spanId=]
2025-06-06 11:40:08 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 11:40:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:40:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:40:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:40:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:40:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7d125272 MDC:[traceId=, spanId=]
2025-06-06 11:40:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:40:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6dd9fae0 MDC:[traceId=, spanId=]
2025-06-06 11:40:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:40:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:40:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:40:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:40:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1118784775 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:40:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:40:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:41:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:41:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:41:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:41:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:41:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@49bd1fde MDC:[traceId=, spanId=]
2025-06-06 11:41:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:41:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3a222bdd MDC:[traceId=, spanId=]
2025-06-06 11:41:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:41:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:41:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:41:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:41:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2125538856 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:41:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:41:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:42:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:42:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:42:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:42:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:42:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@f84a4c MDC:[traceId=, spanId=]
2025-06-06 11:42:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:42:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2cfa0d62 MDC:[traceId=, spanId=]
2025-06-06 11:42:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:42:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:42:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:42:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:42:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@608328007 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:42:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:42:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:43:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:43:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:43:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:43:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:43:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@345454bd MDC:[traceId=, spanId=]
2025-06-06 11:43:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:43:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@705551ac MDC:[traceId=, spanId=]
2025-06-06 11:43:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:43:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:43:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:43:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:43:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@856422952 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:43:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:43:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:44:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:44:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:44:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:44:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:44:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7e75b8ce MDC:[traceId=, spanId=]
2025-06-06 11:44:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:44:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3ce32ab3 MDC:[traceId=, spanId=]
2025-06-06 11:44:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:44:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:44:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:44:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:44:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@228960761 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:44:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:44:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:44:34 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:44:34 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 11:44:34 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 11:44:34 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@4b36a2db MDC:[traceId=, spanId=]
2025-06-06 11:44:34 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 11:44:34 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@4b36a2db MDC:[traceId=, spanId=]
2025-06-06 11:44:34 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 11:44:57 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:44:57 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 11:44:57 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 11:44:57 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@3bfd2f55 MDC:[traceId=, spanId=]
2025-06-06 11:44:57 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 11:44:57 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@3bfd2f55 MDC:[traceId=, spanId=]
2025-06-06 11:44:57 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 11:45:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:45:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:45:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:45:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:45:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@43d363f7 MDC:[traceId=, spanId=]
2025-06-06 11:45:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:45:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@21e9c124 MDC:[traceId=, spanId=]
2025-06-06 11:45:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:45:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:45:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:45:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:45:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1792110407 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:45:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:45:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:46:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:46:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:46:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:46:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:46:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7c4bb6e0 MDC:[traceId=, spanId=]
2025-06-06 11:46:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:46:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@510e1506 MDC:[traceId=, spanId=]
2025-06-06 11:46:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:46:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:46:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:46:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:46:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1863357355 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:46:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:46:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:47:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:47:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:47:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:47:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:47:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@59ab30b MDC:[traceId=, spanId=]
2025-06-06 11:47:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:47:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1dd170bc MDC:[traceId=, spanId=]
2025-06-06 11:47:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:47:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:47:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:47:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:47:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1979457485 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:47:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:47:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:48:13 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:48:13 [http-nio-8088-exec-6] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 11:48:13 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 11:48:13 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@4f465c3c MDC:[traceId=, spanId=]
2025-06-06 11:48:13 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 11:48:13 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@4f465c3c MDC:[traceId=, spanId=]
2025-06-06 11:48:13 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 11:48:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:48:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:48:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:48:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:48:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7ff35dd3 MDC:[traceId=, spanId=]
2025-06-06 11:48:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:48:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3e88ee5b MDC:[traceId=, spanId=]
2025-06-06 11:48:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:48:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:48:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:48:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:48:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@144617263 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:48:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:48:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:49:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:49:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:49:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:49:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:49:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1249b029 MDC:[traceId=, spanId=]
2025-06-06 11:49:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:49:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3bdc1ae3 MDC:[traceId=, spanId=]
2025-06-06 11:49:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:49:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:49:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:49:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:49:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1164224817 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:49:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:49:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:50:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:50:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:50:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:50:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:50:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2286e437 MDC:[traceId=, spanId=]
2025-06-06 11:50:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:50:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6b6b079b MDC:[traceId=, spanId=]
2025-06-06 11:50:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:50:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:50:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:50:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:50:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1328392084 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:50:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:50:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:51:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:51:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:51:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:51:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:51:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6bb57ce9 MDC:[traceId=, spanId=]
2025-06-06 11:51:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:51:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@142e723 MDC:[traceId=, spanId=]
2025-06-06 11:51:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:51:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:51:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:51:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:51:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@333896069 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:51:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:51:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:52:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:52:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:52:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:52:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:52:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@22bfc691 MDC:[traceId=, spanId=]
2025-06-06 11:52:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:52:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6565acd7 MDC:[traceId=, spanId=]
2025-06-06 11:52:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:52:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:52:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:52:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:52:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1976930185 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:52:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:52:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:53:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:53:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:53:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:53:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:53:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1c25f426 MDC:[traceId=, spanId=]
2025-06-06 11:53:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:53:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@44e723cb MDC:[traceId=, spanId=]
2025-06-06 11:53:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:53:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:53:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:53:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:53:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@46780743 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:53:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:53:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:54:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:54:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:54:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:54:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:54:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@60c478fd MDC:[traceId=, spanId=]
2025-06-06 11:54:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:54:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3567731b MDC:[traceId=, spanId=]
2025-06-06 11:54:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:54:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:54:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:54:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:54:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@755750463 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:54:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:54:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:55:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:55:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:55:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:55:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:55:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@64362bb4 MDC:[traceId=, spanId=]
2025-06-06 11:55:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:55:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2a0038b2 MDC:[traceId=, spanId=]
2025-06-06 11:55:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:55:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:55:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:55:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:55:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1903427602 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:55:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:55:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:56:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:56:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:56:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:56:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:56:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@38ba3b86 MDC:[traceId=, spanId=]
2025-06-06 11:56:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:56:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1de316e4 MDC:[traceId=, spanId=]
2025-06-06 11:56:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:56:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:56:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:56:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:56:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1959456431 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:56:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:56:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:57:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:57:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:57:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:57:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:57:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@269e1053 MDC:[traceId=, spanId=]
2025-06-06 11:57:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:57:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6f2171b9 MDC:[traceId=, spanId=]
2025-06-06 11:57:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:57:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:57:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:57:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:57:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1476170493 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:57:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:57:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:58:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:58:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:58:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:58:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:58:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@225e6fc7 MDC:[traceId=, spanId=]
2025-06-06 11:58:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:58:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5fd6018b MDC:[traceId=, spanId=]
2025-06-06 11:58:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:58:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:58:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:58:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:58:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@165480552 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:58:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:58:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 11:59:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 11:59:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 11:59:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 11:59:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 11:59:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@54571300 MDC:[traceId=, spanId=]
2025-06-06 11:59:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 11:59:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@798e9a68 MDC:[traceId=, spanId=]
2025-06-06 11:59:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 11:59:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 11:59:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 11:59:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 11:59:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@827368917 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 11:59:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 11:59:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 12:00:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 12:00:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 12:00:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 12:00:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 12:00:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@755ab758 MDC:[traceId=, spanId=]
2025-06-06 12:00:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 12:00:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4b541956 MDC:[traceId=, spanId=]
2025-06-06 12:00:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 12:00:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 12:00:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 12:00:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 12:00:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@741384421 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 12:00:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 12:00:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 12:01:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 12:01:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 12:01:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 12:01:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 12:01:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@38701036 MDC:[traceId=, spanId=]
2025-06-06 12:01:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 12:01:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2ffeffee MDC:[traceId=, spanId=]
2025-06-06 12:01:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 12:01:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 12:01:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 12:01:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 12:01:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@696798480 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 12:01:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 12:01:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 12:02:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 12:02:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 12:02:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 12:02:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 12:02:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5524eba9 MDC:[traceId=, spanId=]
2025-06-06 12:02:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 12:02:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@10d2f66a MDC:[traceId=, spanId=]
2025-06-06 12:02:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 12:02:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 12:02:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 12:02:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 12:02:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@999731177 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 12:02:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 12:02:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 12:03:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 12:03:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 12:03:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 12:03:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 12:03:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5d278589 MDC:[traceId=, spanId=]
2025-06-06 12:03:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 12:03:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@698373e0 MDC:[traceId=, spanId=]
2025-06-06 12:03:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 12:03:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 12:03:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 12:03:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 12:03:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1411903640 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 12:03:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 12:03:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 12:04:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 12:04:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 12:04:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 12:04:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 12:04:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@47b8ef74 MDC:[traceId=, spanId=]
2025-06-06 12:04:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 12:04:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@19262406 MDC:[traceId=, spanId=]
2025-06-06 12:04:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 12:04:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 12:04:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 12:04:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 12:04:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@924070610 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 12:04:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 12:04:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 12:05:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 12:05:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 12:05:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 12:05:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 12:05:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6e5070ee MDC:[traceId=, spanId=]
2025-06-06 12:05:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 12:05:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@20c65277 MDC:[traceId=, spanId=]
2025-06-06 12:05:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 12:05:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 12:05:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 12:05:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 12:05:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2021806231 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 12:05:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 12:05:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 12:06:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 12:06:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 12:06:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 12:06:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 12:06:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1b301960 MDC:[traceId=, spanId=]
2025-06-06 12:06:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 12:06:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7c6ff1fa MDC:[traceId=, spanId=]
2025-06-06 12:06:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 12:06:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 12:06:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 12:06:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 12:06:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@884422957 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 12:06:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 12:06:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 12:07:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 12:07:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 12:07:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 12:07:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 12:07:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@21a6e369 MDC:[traceId=, spanId=]
2025-06-06 12:07:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 12:07:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2173a22c MDC:[traceId=, spanId=]
2025-06-06 12:07:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 12:07:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 12:07:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 12:07:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 12:07:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@980358520 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 12:07:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 12:07:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 12:08:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 12:08:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 12:08:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 12:08:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 12:08:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@286a2a2e MDC:[traceId=, spanId=]
2025-06-06 12:08:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 12:08:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@71658e7d MDC:[traceId=, spanId=]
2025-06-06 12:08:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 12:08:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 12:08:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 12:08:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 12:08:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1541464233 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 12:08:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 12:08:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 12:09:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 12:09:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 12:09:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 12:09:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 12:09:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5e6d0fa1 MDC:[traceId=, spanId=]
2025-06-06 12:09:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 12:09:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@74696e68 MDC:[traceId=, spanId=]
2025-06-06 12:09:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 12:09:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 12:09:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 12:09:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 12:09:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@931969284 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 12:09:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 12:09:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 12:10:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 12:10:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 12:10:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 12:10:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 12:10:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1bdd9438 MDC:[traceId=, spanId=]
2025-06-06 12:10:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 12:10:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1694b6a0 MDC:[traceId=, spanId=]
2025-06-06 12:10:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 12:10:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 12:10:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 12:10:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 12:10:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1842077013 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 12:10:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 12:10:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 12:11:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 12:11:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 12:11:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 12:11:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 12:11:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3e77cdc5 MDC:[traceId=, spanId=]
2025-06-06 12:11:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 12:11:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4e3305a3 MDC:[traceId=, spanId=]
2025-06-06 12:11:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 12:11:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 12:11:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 12:11:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 12:11:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@109067856 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 12:11:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 12:11:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 12:12:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 12:12:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 12:12:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 12:12:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 12:12:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@24ebfa3 MDC:[traceId=, spanId=]
2025-06-06 12:12:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 12:12:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2f8a801a MDC:[traceId=, spanId=]
2025-06-06 12:12:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 12:12:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 12:12:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 12:12:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 12:12:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@19433504 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 12:12:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 12:12:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 12:13:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 12:13:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 12:13:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 12:13:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 12:13:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7a1db5c8 MDC:[traceId=, spanId=]
2025-06-06 12:13:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 12:13:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6e5dbd33 MDC:[traceId=, spanId=]
2025-06-06 12:13:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 12:13:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 12:13:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 12:13:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 12:13:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1297693915 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 12:13:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 12:13:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 12:14:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 12:14:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 12:14:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 12:14:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 12:14:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1e7ad55 MDC:[traceId=, spanId=]
2025-06-06 12:14:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 12:14:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1f6f259e MDC:[traceId=, spanId=]
2025-06-06 12:14:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 12:14:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 12:14:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 12:14:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 12:14:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1441881431 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 12:14:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 12:14:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 12:15:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 12:15:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 12:15:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 12:15:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 12:15:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3df9be20 MDC:[traceId=, spanId=]
2025-06-06 12:15:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 12:15:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@61bd8c1e MDC:[traceId=, spanId=]
2025-06-06 12:15:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 12:15:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 12:15:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 12:15:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 12:15:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1595655675 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 12:15:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 12:15:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 12:16:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 12:16:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 12:16:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 12:16:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 12:16:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@468bf995 MDC:[traceId=, spanId=]
2025-06-06 12:16:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 12:16:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1eab52bc MDC:[traceId=, spanId=]
2025-06-06 12:16:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 12:16:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 12:16:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 12:16:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 12:16:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1816595920 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 12:16:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 12:16:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 12:17:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 12:17:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 12:17:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 12:17:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 12:17:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1550682b MDC:[traceId=, spanId=]
2025-06-06 12:17:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 12:17:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@53cd59bf MDC:[traceId=, spanId=]
2025-06-06 12:17:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 12:17:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 12:17:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 12:17:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 12:17:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1110385761 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 12:17:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 12:17:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 12:18:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 12:18:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 12:18:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 12:18:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 12:18:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1bc2cdca MDC:[traceId=, spanId=]
2025-06-06 12:18:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 12:18:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@57acff7d MDC:[traceId=, spanId=]
2025-06-06 12:18:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 12:18:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 12:18:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 12:18:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 12:18:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1747576563 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 12:18:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 12:18:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 12:19:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 12:19:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 12:19:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 12:19:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 12:19:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@590dbc56 MDC:[traceId=, spanId=]
2025-06-06 12:19:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 12:19:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@55d6b306 MDC:[traceId=, spanId=]
2025-06-06 12:19:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 12:19:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 12:19:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 12:19:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 12:19:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1356298989 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 12:19:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 12:19:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 12:20:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 12:20:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 12:20:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 12:20:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 12:20:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3eda6cc4 MDC:[traceId=, spanId=]
2025-06-06 12:20:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 12:20:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7d02700b MDC:[traceId=, spanId=]
2025-06-06 12:20:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 12:20:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 12:20:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 12:20:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 12:20:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2025943619 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 12:20:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 12:20:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 12:21:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 12:21:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 12:21:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 12:21:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 12:21:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@71415aa2 MDC:[traceId=, spanId=]
2025-06-06 12:21:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 12:21:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7d2dcddd MDC:[traceId=, spanId=]
2025-06-06 12:21:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 12:21:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 12:21:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 12:21:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 12:21:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1833305538 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 12:21:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 12:21:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 12:22:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 12:22:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 12:22:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 12:22:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 12:22:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@412935ae MDC:[traceId=, spanId=]
2025-06-06 12:22:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 12:22:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@795b2695 MDC:[traceId=, spanId=]
2025-06-06 12:22:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 12:22:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 12:22:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 12:22:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 12:22:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2058669409 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 12:22:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 12:22:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 12:23:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 12:23:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 12:23:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 12:23:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 12:23:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@31305ad5 MDC:[traceId=, spanId=]
2025-06-06 12:23:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 12:23:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@554943cf MDC:[traceId=, spanId=]
2025-06-06 12:23:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 12:23:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 12:23:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 12:23:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 12:23:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1889468462 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 12:23:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 12:23:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 12:23:49 [SpringContextShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-06-06 12:23:49 [SpringContextShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6c90c5a4] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@339ea184] MDC:[traceId=, spanId=]
2025-06-06 12:23:50 [SpringContextShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-06 12:23:50 [SpringContextShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-06 13:03:39 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-06-06 13:03:39 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-06 13:03:39 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-06 13:03:39 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-06 13:03:39 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-06 13:03:39 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-06 13:03:39 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-06 13:03:39 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-06 13:03:39 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-06 13:03:39 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-06 13:03:39 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-06 13:03:39 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-06 13:03:39 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-06 13:03:39 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1906c151
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/java-banking-phase2/backend/transaction-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.transaction_service.entity.Transaction]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1f3482f6 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1f3482f6 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1f3482f6 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@25fb5f0d MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@25fb5f0d MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6087beaa MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6087beaa MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3f035f16 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3f035f16 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@41b5932 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@41b5932 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@41b5932 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@7be77d8b MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7be77d8b MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@7be77d8b MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@26c8eeb3 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@26c8eeb3 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@396fe93 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5d1af51a MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5d1af51a MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1d51c017 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7c8d1878 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@48db031c MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@48db031c MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@48db031c MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@42638d38 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@42638d38 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@42638d38 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5121bc1b MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5121bc1b MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5121bc1b MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@45fb309f MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@45fb309f MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@45fb309f MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@552818df MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@552818df MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@552818df MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@bfc550f MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@bfc550f MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@57e1e10f MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@57e1e10f MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@4b025ca4 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@4b025ca4 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4b025ca4 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5ef94bfb MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@37c42906 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@37c42906 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6f754f68 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@364bc95e MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@364bc95e MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@364bc95e MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@22f9faff MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@34e36bbf MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@71a87c44 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@19c15a16 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@19c15a16 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@740265d3 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@740265d3 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5b13467f MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@69eb4b05 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7a69bdc4 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1d2273a7 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5c43fec2 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6fc3352c MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@58f3328d MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@58f3328d MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@56c2cd7f MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@56c2cd7f MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@15b48c8b MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@15b48c8b MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6328b144 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6328b144 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@228e90f6 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@228e90f6 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@62e708ed MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@538610ee MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7582294b MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7582294b MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@23dd1e2d MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@79a7cadb MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1ac5a461 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7ee91e03 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7ee91e03 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@358e5b85 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7238aefd MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@45e9fa77 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@45e9fa77 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@7346fdcf MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7346fdcf MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@34d3d251 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@34d3d251 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@34d3d251 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3abcd70 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3abcd70 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3abcd70 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@91ba530 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4df78959 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@679c9bec MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@679c9bec MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3a811a22 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3a811a22 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3a811a22 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6e671a67 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1f2bebb3 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1ceb4041 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1ceb4041 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2e0919f4 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2e0919f4 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2e0919f4 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@78eb9a70 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@78eb9a70 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@385d80ad MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@385d80ad MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7ef226af MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7ef226af MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@18d2563c MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@18d2563c MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@3c4e674c MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3c4e674c MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@68c2d080 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7ea5469 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@6b9956c7 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6b9956c7 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7f0078f2 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@40c73818 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6eaf9d37 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1b1b9aa6 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@67a0b6df MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1e5e45cb MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@c0a3512 MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4b03409f MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2977116e MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@680ceef0] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@680ceef0) [was null] MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@31f3b9b8] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-06 13:03:48 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6941a099] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2533751f] MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@680ceef0] MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@680ceef0] MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@465b101d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5a8023ed) MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@273db1dd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4842557d) MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@56877f90) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@dc3a1e6) MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@473a5ada) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1d8916fd) MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@709f8123) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@60c3c247) MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@753aa80f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@20d166ab) MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2c4b7d0b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@52e4433f) MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@723ef3bc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@59f1276e) MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2ea5aa7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5ea8f92e) MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@95b5da6 MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@7f0078f2` MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e271c59] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@c50a0ab] MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Transaction MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.example.transaction_service.entity.Transaction on table tbl_transaction MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:id] MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.id MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...) MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property amount with lazy=false MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:amount] MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for amount MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.amount MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property amount MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property bankType with lazy=false MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:bankType] MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for bankType MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.bank_type MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property bankType MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:createdAt] MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for createdAt MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.created_at MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property createdAt MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property createdBy with lazy=false MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:createdBy] MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for createdBy MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.created_by MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property createdBy MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property currency with lazy=false MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:currency] MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for currency MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.currency MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property currency MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property description with lazy=false MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:description] MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for description MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.description MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property description MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankCode with lazy=false MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankCode] MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankCode MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_code MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankCode MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankName with lazy=false MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankName] MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankName MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_name MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankName MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property failedReason with lazy=false MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:failedReason] MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for failedReason MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.failed_reason MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property failedReason MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:fromAccountNumber] MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.from_account_number MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property fromAccountNumber MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property referenceCode with lazy=false MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:referenceCode] MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for referenceCode MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.reference_code MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property referenceCode MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property status with lazy=false MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:status] MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for status MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.status MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property status MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property timestamp with lazy=false MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:timestamp] MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for timestamp MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.timestamp MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property timestamp MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property toAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:toAccountNumber] MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for toAccountNumber MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.to_account_number MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property toAccountNumber MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property type with lazy=false MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:type] MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for type MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.type MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property type MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:updatedAt] MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for updatedAt MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.updated_at MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property updatedAt MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property updatedBy with lazy=false MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:updatedBy] MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for updatedBy MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.updated_by MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property updatedBy MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.example.transaction_service.entity MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding touchForUpdate as PreUpdate callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding touchForCreate as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bankType MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for createdAt MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for createdBy MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for currency MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for description MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankCode MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankName MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for failedReason MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for referenceCode MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for timestamp MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for toAccountNumber MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for type MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for updatedAt MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for updatedBy MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_transaction] MDC:[traceId=, spanId=]
2025-06-06 13:03:49 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {jdk.tls.rejectClientInitiatedRenegotiation=true, java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@5fd1a7f, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\java-banking-phase2\backend\transaction-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.11\spring-boot-starter-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.11\spring-boot-starter-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.11\spring-boot-starter-logging-3.3.11.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.11\spring-boot-actuator-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.11\spring-boot-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.13\micrometer-observation-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.13\micrometer-commons-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.13\micrometer-jakarta9-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-core\1.13.13\micrometer-core-1.13.13.jar;C:\Users\A715-42G\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\A715-42G\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.11\spring-boot-starter-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.11\spring-boot-starter-aop-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.11\spring-boot-starter-jdbc-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.19\spring-jdbc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.11\spring-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.11\spring-data-commons-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.19\spring-orm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.19\spring-context-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.19\spring-tx-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.19\spring-beans-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.19\spring-aspects-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.11\spring-boot-starter-web-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.11\spring-boot-starter-json-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.11\spring-boot-starter-tomcat-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.40\tomcat-embed-core-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.40\tomcat-embed-websocket-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.19\spring-web-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.19\spring-webmvc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.19\spring-expression-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-devtools\3.3.11\spring-boot-devtools-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.11\spring-boot-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.11\spring-boot-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.19\spring-core-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.19\spring-jcl-6.1.19.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.11\spring-boot-starter-validation-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.0.2\springdoc-openapi-starter-webmvc-ui-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.0.2\springdoc-openapi-starter-webmvc-api-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.0.2\springdoc-openapi-starter-common-2.0.2.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.7\swagger-core-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.7\swagger-annotations-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.7\swagger-models-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\4.15.5\swagger-ui-4.15.5.jar;C:\Users\A715-42G\.m2\repository\org\webjars\webjars-locator-core\0.58\webjars-locator-core-0.58.jar;C:\Users\A715-42G\.m2\repository\io\github\classgraph\classgraph\4.8.149\classgraph-4.8.149.jar;D:\LT_Web\SpringBoot\java-banking-phase2\backend\common-service\target\classes;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-starter\3.3.2\dubbo-spring-boot-starter-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure\3.3.2\dubbo-spring-boot-autoconfigure-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure-compatible\3.3.2\dubbo-spring-boot-autoconfigure-compatible-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo\3.3.2\dubbo-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\javassist\javassist\3.30.2-GA\javassist-3.30.2-GA.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-all\4.1.119.Final\netty-all-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-dns\4.1.119.Final\netty-codec-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-haproxy\4.1.119.Final\netty-codec-haproxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http\4.1.119.Final\netty-codec-http-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http2\4.1.119.Final\netty-codec-http2-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-memcache\4.1.119.Final\netty-codec-memcache-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-mqtt\4.1.119.Final\netty-codec-mqtt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-redis\4.1.119.Final\netty-codec-redis-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-smtp\4.1.119.Final\netty-codec-smtp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-socks\4.1.119.Final\netty-codec-socks-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-stomp\4.1.119.Final\netty-codec-stomp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-xml\4.1.119.Final\netty-codec-xml-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-proxy\4.1.119.Final\netty-handler-proxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-ssl-ocsp\4.1.119.Final\netty-handler-ssl-ocsp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns\4.1.119.Final\netty-resolver-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-rxtx\4.1.119.Final\netty-transport-rxtx-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-sctp\4.1.119.Final\netty-transport-sctp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-udt\4.1.119.Final\netty-transport-udt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-kqueue\4.1.119.Final\netty-transport-classes-kqueue-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.119.Final\netty-resolver-dns-classes-macos-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-riscv64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\hessian-lite\4.0.3\hessian-lite-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\alibaba\fastjson2\fastjson2\2.0.53\fastjson2-2.0.53.jar;C:\Users\A715-42G\.m2\repository\com\google\protobuf\protobuf-java\3.25.5\protobuf-java-3.25.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-framework\5.1.0\curator-framework-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-client\5.1.0\curator-client-5.1.0.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\guava\27.0.1-jre\guava-27.0.1-jre.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\A715-42G\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\checkerframework\checker-qual\2.5.2\checker-qual-2.5.2.jar;C:\Users\A715-42G\.m2\repository\com\google\errorprone\error_prone_annotations\2.2.0\error_prone_annotations-2.2.0.jar;C:\Users\A715-42G\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\A715-42G\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.17\animal-sniffer-annotations-1.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper\3.7.1\zookeeper-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper-jute\3.7.1\zookeeper-jute-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\yetus\audience-annotations\0.12.0\audience-annotations-0.12.0.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler\4.1.119.Final\netty-handler-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-common\4.1.119.Final\netty-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver\4.1.119.Final\netty-resolver-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-buffer\4.1.119.Final\netty-buffer-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport\4.1.119.Final\netty-transport-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.119.Final\netty-transport-native-unix-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec\4.1.119.Final\netty-codec-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.119.Final\netty-transport-classes-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-recipes\5.5.0\curator-recipes-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-x-discovery\5.5.0\curator-x-discovery-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-vault-config\4.1.1\spring-cloud-starter-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.3.1\httpclient5-5.3.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.5\httpcore5-h2-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.5\httpcore5-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter\4.1.2\spring-cloud-starter-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-context\4.1.2\spring-cloud-context-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-commons\4.1.2\spring-cloud-commons-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-rsa\1.1.2\spring-security-rsa-1.1.2.jar;C:\Users\A715-42G\.m2\repository\org\bouncycastle\bcprov-jdk18on\1.77\bcprov-jdk18on-1.77.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-vault-config\4.1.1\spring-cloud-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\vault\spring-vault-core\3.1.1\spring-vault-core-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-redis\3.3.11\spring-boot-starter-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\lettuce\lettuce-core\6.3.2.RELEASE\lettuce-core-6.3.2.RELEASE.jar;C:\Users\A715-42G\.m2\repository\io\projectreactor\reactor-core\3.6.16\reactor-core-3.6.16.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-redis\3.3.11\spring-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-keyvalue\3.3.11\spring-data-keyvalue-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-oxm\6.1.19\spring-oxm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context-support\6.1.19\spring-context-support-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream\4.2.1\spring-cloud-stream-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-messaging\6.1.19\spring-messaging-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-core\6.3.9\spring-integration-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-jmx\6.3.9\spring-integration-jmx-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\retry\spring-retry\2.0.11\spring-retry-2.0.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-function-context\4.2.2\spring-cloud-function-context-4.2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-function-core\4.2.2\spring-cloud-function-core-4.2.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-joda\2.17.3\jackson-datatype-joda-2.17.3.jar;C:\Users\A715-42G\.m2\repository\joda-time\joda-time\2.10.14\joda-time-2.10.14.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-stream-kafka\4.2.1\spring-cloud-starter-stream-kafka-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka\4.2.1\spring-cloud-stream-binder-kafka-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka-core\4.2.1\spring-cloud-stream-binder-kafka-core-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-kafka\6.3.9\spring-integration-kafka-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\kafka\spring-kafka\3.2.8\spring-kafka-3.2.8.jar;C:\Users\A715-42G\.m2\repository\org\apache\kafka\kafka-clients\3.7.2\kafka-clients-3.7.2.jar;C:\Users\A715-42G\.m2\repository\com\github\luben\zstd-jni\1.5.6-4\zstd-jni-1.5.6-4.jar;C:\Users\A715-42G\.m2\repository\org\lz4\lz4-java\1.8.0\lz4-java-1.8.0.jar;C:\Users\A715-42G\.m2\repository\org\xerial\snappy\snappy-java\1.1.10.5\snappy-java-1.1.10.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.11\spring-boot-starter-security-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.19\spring-aop-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.9\spring-security-config-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.9\spring-security-web-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-oauth2-resource-server\3.3.11\spring-boot-starter-oauth2-resource-server-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.9\spring-security-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.9\spring-security-crypto-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-resource-server\6.3.9\spring-security-oauth2-resource-server-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-core\6.3.9\spring-security-oauth2-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-jose\6.3.9\spring-security-oauth2-jose-6.3.9.jar;C:\Users\A715-42G\.m2\repository\com\nimbusds\nimbus-jose-jwt\9.37.3\nimbus-jose-jwt-9.37.3.jar;C:\Users\A715-42G\.m2\repository\com\github\stephenc\jcip\jcip-annotations\1.0-1\jcip-annotations-1.0-1.jar;C:\Users\A715-42G\.m2\repository\org\keycloak\keycloak-admin-client\26.0.0\keycloak-admin-client-26.0.0.jar;C:\Users\A715-42G\.m2\repository\org\keycloak\keycloak-client-common-synced\26.0.0\keycloak-client-common-synced-26.0.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\commons-logging-jboss-logging\1.0.0.Final\commons-logging-jboss-logging-1.0.0.Final.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\microprofile\openapi\microprofile-openapi-api\3.1.1\microprofile-openapi-api-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-client\6.2.9.Final\resteasy-client-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-client-api\6.2.9.Final\resteasy-client-api-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-core-spi\6.2.9.Final\resteasy-core-spi-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-core\6.2.9.Final\resteasy-core-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\jandex\2.4.5.Final\jandex-2.4.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\com\ibm\async\asyncutil\0.1.0\asyncutil-0.1.0.jar;C:\Users\A715-42G\.m2\repository\commons-codec\commons-codec\1.16.1\commons-codec-1.16.1.jar;C:\Users\A715-42G\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\3.1.0\jakarta.ws.rs-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-multipart-provider\6.2.9.Final\resteasy-multipart-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\mail\jakarta.mail-api\2.1.3\jakarta.mail-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-mail\2.0.3\angus-mail-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-dom\0.8.11\apache-mime4j-dom-0.8.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-core\0.8.11\apache-mime4j-core-0.8.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-storage\0.8.11\apache-mime4j-storage-0.8.11.jar;C:\Users\A715-42G\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-jackson2-provider\6.2.9.Final\resteasy-jackson2-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-base\2.17.3\jackson-jakarta-rs-base-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-json-provider\2.17.3\jackson-jakarta-rs-json-provider-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-jakarta-xmlbind-annotations\2.17.3\jackson-module-jakarta-xmlbind-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\json-patch\1.13\json-patch-1.13.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\msg-simple\1.2\msg-simple-1.2.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\btf\1.3\btf-1.3.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\jackson-coreutils\2.0\jackson-coreutils-2.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-jaxb-provider\6.2.9.Final\resteasy-jaxb-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\codemodel\4.0.5\codemodel-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-jxc\4.0.5\jaxb-jxc-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-xjc\4.0.5\jaxb-xjc-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\xsom\4.0.5\xsom-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-tools\4.1.2\istack-commons-tools-4.1.2.jar;C:\Users\A715-42G\.m2\repository\com\sun\xml\bind\external\relaxng-datatype\4.0.3\relaxng-datatype-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\sun\xml\bind\external\rngom\4.0.3\rngom-4.0.3.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.example.transaction_service.TransactionServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@51c6e1b4, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.16172358455488900962, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\java-banking-phase2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=3448, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.16172358455488900962, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@15d9c411, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\ProgramData\chocolatey\bin;D:\KienLongBank\Vault;D:\GrafanaLabs\grafana\bin;D:\KienLongBank\InfluxData\influxdb-1.8.10-1;D:\Document\Work\Redis;C:\Program Files\Docker\Docker\resources\bin;D:\nodejs\nvm;C:\nvm4w\nodejs;C:\Program Files\nodejs\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\XamPP\php;C:\Program Files\Azure Data Studio\bin;D:\nodejs\nvm;C:\nvm4w\nodejs;C:\Users\A715-42G\AppData\Roaming\npm;D:\Document\cursor\resources\app\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[transaction-service] } MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@9a1c5cb] under count; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@59c64c4c] under every; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@193d454] under any; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@53c4b544] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@74efc9c5] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5fd984d6] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2156780f] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@574e97f4] under log; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@1f3b591c] under position; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3ddb9ddc] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@6a507369] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@680b2a78] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@394ce844] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@24eb903c] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@6e1cd055] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@28386a82] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@449eb9fd] under str; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@545c4a3c] under format; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@39adfbd9] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@7c47cf42] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@be693e3] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@69a474ec] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@69062d90] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6bdfebfd] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@541904ee] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1ed01995] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4662cd72] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@52f64640] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@602b6e48] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@574e97f4 MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@2ff503ec] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@8d048a1] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4b03d302] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@1f3b591c MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@c5a089c] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@715bf379] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@c5d5748] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@33726df6] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6f309dec] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@41de6b48] under format; prior registration was org.hibernate.dialect.function.FormatFunction@545c4a3c MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@541904ee MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@1ed01995 MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@275f932c] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2156780f MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e257ec] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cd66501] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@4f1402f5] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.example.transaction_service.entity.Transaction]: private accessor [amount] MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.example.transaction_service.entity.Transaction) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction)] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction.updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_transaction (amount,bank_type,created_at,created_by,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_transaction set amount=?,bank_type=?,created_at=?,created_by=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=?,updated_at=?,updated_by=? where id=? MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e271c59] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@de03f96] MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG org.hibernate.mapping.Table - No alter strings for table : tbl_transaction MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@288a86fb MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 4753cad6-b4c8-42f0-8b64-e0bfde638061 (<unnamed>) MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-06-06 13:03:50 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-06-06 13:03:51 [restartedMain] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-06-06 13:03:51 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-06 13:03:51 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-06 13:03:51 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-06 13:03:51 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-06 13:03:54 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-06 13:03:54 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-06-06 13:03:54 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-06-06 13:03:54 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-06 13:03:54 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-06-06 13:03:54 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-06 13:03:54 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-06 13:03:54 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-06 13:03:54 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-06 13:03:54 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-06 13:03:54 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-06 13:03:54 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-06 13:03:54 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-06 13:03:54 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-06 13:03:54 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-06 13:03:54 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-06 13:03:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:03:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:03:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:03:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:03:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@8d5a52f MDC:[traceId=, spanId=]
2025-06-06 13:03:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:03:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@9133995 MDC:[traceId=, spanId=]
2025-06-06 13:03:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:03:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:03:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:03:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:03:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1498913525 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:03:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:03:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:04:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:04:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:04:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:04:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:04:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@29b8a01a MDC:[traceId=, spanId=]
2025-06-06 13:04:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:04:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@44f4d560 MDC:[traceId=, spanId=]
2025-06-06 13:04:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:04:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:04:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:04:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:04:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1249863437 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:04:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:04:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:05:07 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.query.plan.cache - Creating and caching NativeQuery ParameterInterpretation - ParameterInterpretationImpl (SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
) : {
} MDC:[traceId=, spanId=]
2025-06-06 13:05:07 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:05:07 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:05:08 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:05:08 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@4233a0d4 MDC:[traceId=, spanId=]
2025-06-06 13:05:08 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:05:08 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@4233a0d4 MDC:[traceId=, spanId=]
2025-06-06 13:05:08 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:05:51 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:05:51 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:05:51 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:05:51 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@1d46b9e2 MDC:[traceId=, spanId=]
2025-06-06 13:05:51 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:05:51 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@1d46b9e2 MDC:[traceId=, spanId=]
2025-06-06 13:05:51 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:05:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:05:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:05:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:05:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:05:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7a51dbb MDC:[traceId=, spanId=]
2025-06-06 13:05:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:05:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2f325416 MDC:[traceId=, spanId=]
2025-06-06 13:05:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:05:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:05:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:05:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:05:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1162427727 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:05:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:05:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:06:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:06:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:06:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:06:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:06:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@be56938 MDC:[traceId=, spanId=]
2025-06-06 13:06:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:06:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@a26c2a6 MDC:[traceId=, spanId=]
2025-06-06 13:06:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:06:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:06:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:06:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:06:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@278665634 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:06:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:06:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:07:13 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:07:13 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:07:13 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:07:13 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@39570a9a MDC:[traceId=, spanId=]
2025-06-06 13:07:13 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:07:13 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@39570a9a MDC:[traceId=, spanId=]
2025-06-06 13:07:13 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:07:36 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:07:36 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:07:36 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:07:36 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@2a3de0b7 MDC:[traceId=, spanId=]
2025-06-06 13:07:36 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:07:36 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@2a3de0b7 MDC:[traceId=, spanId=]
2025-06-06 13:07:36 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:07:51 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:07:51 [http-nio-8088-exec-6] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:07:51 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:07:51 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@204e1283 MDC:[traceId=, spanId=]
2025-06-06 13:07:51 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:07:51 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@204e1283 MDC:[traceId=, spanId=]
2025-06-06 13:07:51 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:07:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:07:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:07:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:07:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:07:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3ebb8187 MDC:[traceId=, spanId=]
2025-06-06 13:07:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:07:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7c14b73 MDC:[traceId=, spanId=]
2025-06-06 13:07:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:07:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:07:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:07:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:07:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@176133097 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:07:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:07:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:08:16 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:08:16 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:08:16 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:08:16 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@77288468 MDC:[traceId=, spanId=]
2025-06-06 13:08:16 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:08:16 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@77288468 MDC:[traceId=, spanId=]
2025-06-06 13:08:16 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:08:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:08:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:08:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:08:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:08:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@8f288a2 MDC:[traceId=, spanId=]
2025-06-06 13:08:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:08:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@41e3ff63 MDC:[traceId=, spanId=]
2025-06-06 13:08:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:08:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:08:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:08:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:08:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@617899741 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:08:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:08:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:08:56 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:08:56 [http-nio-8088-exec-8] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:08:56 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:08:56 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@4d42c750 MDC:[traceId=, spanId=]
2025-06-06 13:08:56 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:08:56 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@4d42c750 MDC:[traceId=, spanId=]
2025-06-06 13:08:56 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:09:29 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:09:29 [http-nio-8088-exec-9] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:09:29 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:09:29 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@17fcdad9 MDC:[traceId=, spanId=]
2025-06-06 13:09:29 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:09:29 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@17fcdad9 MDC:[traceId=, spanId=]
2025-06-06 13:09:29 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:09:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:09:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:09:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:09:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:09:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7878f544 MDC:[traceId=, spanId=]
2025-06-06 13:09:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:09:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2528a3ba MDC:[traceId=, spanId=]
2025-06-06 13:09:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:09:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:09:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:09:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:09:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@2007391143 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:09:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:09:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:10:02 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:10:02 [http-nio-8088-exec-10] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:10:02 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:10:02 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@1639a5d7 MDC:[traceId=, spanId=]
2025-06-06 13:10:02 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:10:02 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@1639a5d7 MDC:[traceId=, spanId=]
2025-06-06 13:10:02 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:10:55 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:10:55 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:10:55 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:10:55 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@10443274 MDC:[traceId=, spanId=]
2025-06-06 13:10:55 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:10:55 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@10443274 MDC:[traceId=, spanId=]
2025-06-06 13:10:55 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:10:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:10:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:10:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:10:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:10:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4d8abfad MDC:[traceId=, spanId=]
2025-06-06 13:10:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:10:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2256a06d MDC:[traceId=, spanId=]
2025-06-06 13:10:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:10:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:10:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:10:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:10:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1429375149 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:10:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:10:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:11:08 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:11:08 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:11:08 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:11:08 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@135454c3 MDC:[traceId=, spanId=]
2025-06-06 13:11:08 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:11:08 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@135454c3 MDC:[traceId=, spanId=]
2025-06-06 13:11:08 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:11:15 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:11:15 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:11:15 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:11:15 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@1047e2f MDC:[traceId=, spanId=]
2025-06-06 13:11:15 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:11:15 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@1047e2f MDC:[traceId=, spanId=]
2025-06-06 13:11:15 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:11:45 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:11:45 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:11:45 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:11:45 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@d41a900 MDC:[traceId=, spanId=]
2025-06-06 13:11:45 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:11:45 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@d41a900 MDC:[traceId=, spanId=]
2025-06-06 13:11:45 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:11:50 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:11:50 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:11:50 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:11:50 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@26044b1c MDC:[traceId=, spanId=]
2025-06-06 13:11:50 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:11:50 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@26044b1c MDC:[traceId=, spanId=]
2025-06-06 13:11:50 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:11:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:11:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:11:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:11:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:11:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@b03021f MDC:[traceId=, spanId=]
2025-06-06 13:11:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:11:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1291adf5 MDC:[traceId=, spanId=]
2025-06-06 13:11:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:11:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:11:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:11:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:11:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@429410523 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:11:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:11:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:12:28 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:12:28 [http-nio-8088-exec-6] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:12:28 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:12:28 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@16a7c222 MDC:[traceId=, spanId=]
2025-06-06 13:12:28 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:12:28 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@16a7c222 MDC:[traceId=, spanId=]
2025-06-06 13:12:28 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:12:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:12:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:12:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:12:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:12:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@744418ee MDC:[traceId=, spanId=]
2025-06-06 13:12:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:12:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3647ee8f MDC:[traceId=, spanId=]
2025-06-06 13:12:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:12:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:12:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:12:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:12:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1273524606 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:12:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:12:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:13:10 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:13:10 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:13:10 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:13:10 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@2f138b49 MDC:[traceId=, spanId=]
2025-06-06 13:13:10 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:13:10 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@2f138b49 MDC:[traceId=, spanId=]
2025-06-06 13:13:10 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:13:49 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:13:49 [http-nio-8088-exec-8] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:13:49 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:13:49 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@3044e74f MDC:[traceId=, spanId=]
2025-06-06 13:13:49 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:13:49 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@3044e74f MDC:[traceId=, spanId=]
2025-06-06 13:13:49 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:13:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:13:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:13:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:13:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:13:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@45f8f382 MDC:[traceId=, spanId=]
2025-06-06 13:13:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:13:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4d4c0c44 MDC:[traceId=, spanId=]
2025-06-06 13:13:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:13:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:13:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:13:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:13:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@235140159 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:13:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:13:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:14:07 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:14:07 [http-nio-8088-exec-9] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:14:07 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:14:07 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@626d3728 MDC:[traceId=, spanId=]
2025-06-06 13:14:07 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:14:07 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@626d3728 MDC:[traceId=, spanId=]
2025-06-06 13:14:07 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:14:43 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:14:43 [http-nio-8088-exec-10] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:14:43 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:14:43 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@6ac03269 MDC:[traceId=, spanId=]
2025-06-06 13:14:43 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:14:43 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@6ac03269 MDC:[traceId=, spanId=]
2025-06-06 13:14:43 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:14:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:14:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:14:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:14:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:14:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6f88f739 MDC:[traceId=, spanId=]
2025-06-06 13:14:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:14:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2d26f51f MDC:[traceId=, spanId=]
2025-06-06 13:14:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:14:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:14:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:14:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:14:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@353725526 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:14:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:14:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:15:25 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:15:25 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:15:25 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:15:25 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@41947007 MDC:[traceId=, spanId=]
2025-06-06 13:15:25 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:15:25 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@41947007 MDC:[traceId=, spanId=]
2025-06-06 13:15:25 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:15:45 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:15:45 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:15:45 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:15:45 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@384e5898 MDC:[traceId=, spanId=]
2025-06-06 13:15:45 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:15:45 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@384e5898 MDC:[traceId=, spanId=]
2025-06-06 13:15:45 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:15:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:15:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:15:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:15:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:15:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@46f0d206 MDC:[traceId=, spanId=]
2025-06-06 13:15:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:15:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6675d1a1 MDC:[traceId=, spanId=]
2025-06-06 13:15:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:15:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:15:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:15:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:15:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1268485807 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:15:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:15:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:16:23 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:16:23 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:16:23 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:16:23 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@17ff0d5b MDC:[traceId=, spanId=]
2025-06-06 13:16:23 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:16:23 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@17ff0d5b MDC:[traceId=, spanId=]
2025-06-06 13:16:23 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:16:46 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:16:46 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:16:46 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:16:46 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@222d4068 MDC:[traceId=, spanId=]
2025-06-06 13:16:46 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:16:46 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@222d4068 MDC:[traceId=, spanId=]
2025-06-06 13:16:46 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:16:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:16:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:16:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:16:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:16:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@447f0929 MDC:[traceId=, spanId=]
2025-06-06 13:16:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:16:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@651f1e08 MDC:[traceId=, spanId=]
2025-06-06 13:16:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:16:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:16:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:16:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:16:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1563661646 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:16:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:16:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:16:59 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:16:59 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:16:59 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:16:59 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@2f44181e MDC:[traceId=, spanId=]
2025-06-06 13:16:59 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:16:59 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@2f44181e MDC:[traceId=, spanId=]
2025-06-06 13:16:59 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:17:17 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:17:17 [http-nio-8088-exec-6] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:17:17 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:17:17 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@7c230242 MDC:[traceId=, spanId=]
2025-06-06 13:17:17 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:17:17 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@7c230242 MDC:[traceId=, spanId=]
2025-06-06 13:17:17 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:17:28 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:17:28 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:17:28 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:17:28 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@38d81caf MDC:[traceId=, spanId=]
2025-06-06 13:17:28 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:17:28 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@38d81caf MDC:[traceId=, spanId=]
2025-06-06 13:17:28 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:17:49 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:17:49 [http-nio-8088-exec-8] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:17:49 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:17:49 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@58af7785 MDC:[traceId=, spanId=]
2025-06-06 13:17:49 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:17:49 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@58af7785 MDC:[traceId=, spanId=]
2025-06-06 13:17:49 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:17:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:17:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:17:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:17:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:17:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@58800816 MDC:[traceId=, spanId=]
2025-06-06 13:17:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:17:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7cacb566 MDC:[traceId=, spanId=]
2025-06-06 13:17:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:17:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:17:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:17:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:17:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@812829737 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:17:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:17:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:18:13 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:18:13 [http-nio-8088-exec-9] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:18:13 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:18:13 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@12557079 MDC:[traceId=, spanId=]
2025-06-06 13:18:13 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:18:13 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@12557079 MDC:[traceId=, spanId=]
2025-06-06 13:18:13 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:18:26 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:18:26 [http-nio-8088-exec-10] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:18:26 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:18:26 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@3b384d7e MDC:[traceId=, spanId=]
2025-06-06 13:18:26 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:18:26 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@3b384d7e MDC:[traceId=, spanId=]
2025-06-06 13:18:26 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:18:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:18:44 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:18:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:18:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@4cf48a9a MDC:[traceId=, spanId=]
2025-06-06 13:18:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:18:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@4cf48a9a MDC:[traceId=, spanId=]
2025-06-06 13:18:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:18:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:18:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:18:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:18:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:18:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@50322991 MDC:[traceId=, spanId=]
2025-06-06 13:18:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:18:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@66bb7e90 MDC:[traceId=, spanId=]
2025-06-06 13:18:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:18:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:18:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:18:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:18:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@742212040 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:18:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:18:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:19:17 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:19:17 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:19:17 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:19:17 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@7bb14ec MDC:[traceId=, spanId=]
2025-06-06 13:19:17 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:19:17 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@7bb14ec MDC:[traceId=, spanId=]
2025-06-06 13:19:17 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:19:24 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:19:24 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:19:24 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:19:24 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@5d6de093 MDC:[traceId=, spanId=]
2025-06-06 13:19:24 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:19:24 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@5d6de093 MDC:[traceId=, spanId=]
2025-06-06 13:19:24 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:19:31 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:19:31 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:19:31 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:19:31 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@58531999 MDC:[traceId=, spanId=]
2025-06-06 13:19:31 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:19:31 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@58531999 MDC:[traceId=, spanId=]
2025-06-06 13:19:31 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:19:36 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:19:36 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:19:36 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:19:36 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@66c09537 MDC:[traceId=, spanId=]
2025-06-06 13:19:36 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:19:36 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@66c09537 MDC:[traceId=, spanId=]
2025-06-06 13:19:36 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:19:46 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:19:46 [http-nio-8088-exec-6] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:19:46 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:19:46 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@59adb804 MDC:[traceId=, spanId=]
2025-06-06 13:19:46 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:19:46 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@59adb804 MDC:[traceId=, spanId=]
2025-06-06 13:19:46 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:19:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:19:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:19:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:19:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:19:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5fc6d7b7 MDC:[traceId=, spanId=]
2025-06-06 13:19:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:19:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3e6849c7 MDC:[traceId=, spanId=]
2025-06-06 13:19:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:19:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:19:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:19:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:19:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@2095357963 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:19:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:19:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:20:13 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:20:13 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:20:13 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:20:13 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@755868b9 MDC:[traceId=, spanId=]
2025-06-06 13:20:13 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:20:13 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@755868b9 MDC:[traceId=, spanId=]
2025-06-06 13:20:13 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:20:28 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:20:28 [http-nio-8088-exec-8] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:20:28 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:20:28 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@6699d4a7 MDC:[traceId=, spanId=]
2025-06-06 13:20:28 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:20:28 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@6699d4a7 MDC:[traceId=, spanId=]
2025-06-06 13:20:28 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:20:47 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:20:47 [http-nio-8088-exec-9] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:20:47 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:20:47 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@18ab8393 MDC:[traceId=, spanId=]
2025-06-06 13:20:47 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:20:47 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@18ab8393 MDC:[traceId=, spanId=]
2025-06-06 13:20:47 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:20:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:20:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:20:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:20:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:20:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6785d626 MDC:[traceId=, spanId=]
2025-06-06 13:20:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:20:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@433f1442 MDC:[traceId=, spanId=]
2025-06-06 13:20:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:20:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:20:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:20:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:20:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1664047006 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:20:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:20:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:21:02 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:21:02 [http-nio-8088-exec-10] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:21:02 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:21:02 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@24466aab MDC:[traceId=, spanId=]
2025-06-06 13:21:02 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:21:02 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@24466aab MDC:[traceId=, spanId=]
2025-06-06 13:21:02 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:21:11 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:21:11 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:21:11 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:21:11 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@209f883f MDC:[traceId=, spanId=]
2025-06-06 13:21:11 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:21:11 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@209f883f MDC:[traceId=, spanId=]
2025-06-06 13:21:11 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:21:16 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:21:16 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:21:16 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:21:16 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@34ddb74 MDC:[traceId=, spanId=]
2025-06-06 13:21:16 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:21:16 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@34ddb74 MDC:[traceId=, spanId=]
2025-06-06 13:21:16 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:21:27 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:21:27 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:21:27 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:21:27 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@7cc8fc6a MDC:[traceId=, spanId=]
2025-06-06 13:21:27 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:21:27 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@7cc8fc6a MDC:[traceId=, spanId=]
2025-06-06 13:21:27 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:21:45 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:21:45 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:21:45 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:21:45 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@5d93eb83 MDC:[traceId=, spanId=]
2025-06-06 13:21:45 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:21:45 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@5d93eb83 MDC:[traceId=, spanId=]
2025-06-06 13:21:45 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:21:54 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:21:54 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:21:54 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:21:54 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@23348c70 MDC:[traceId=, spanId=]
2025-06-06 13:21:54 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:21:54 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@23348c70 MDC:[traceId=, spanId=]
2025-06-06 13:21:54 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:21:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:21:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:21:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:21:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:21:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5483555e MDC:[traceId=, spanId=]
2025-06-06 13:21:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:21:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1f3da677 MDC:[traceId=, spanId=]
2025-06-06 13:21:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:21:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:21:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:21:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:21:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@939636126 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:21:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:21:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:22:01 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:22:01 [http-nio-8088-exec-6] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:22:01 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:22:01 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@685a33be MDC:[traceId=, spanId=]
2025-06-06 13:22:01 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:22:01 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@685a33be MDC:[traceId=, spanId=]
2025-06-06 13:22:01 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:22:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:22:14 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:22:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:22:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@5f63368c MDC:[traceId=, spanId=]
2025-06-06 13:22:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:22:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@5f63368c MDC:[traceId=, spanId=]
2025-06-06 13:22:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:22:29 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:22:29 [http-nio-8088-exec-8] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:22:29 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:22:29 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@20fea656 MDC:[traceId=, spanId=]
2025-06-06 13:22:29 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:22:29 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@20fea656 MDC:[traceId=, spanId=]
2025-06-06 13:22:29 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:22:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:22:34 [http-nio-8088-exec-9] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:22:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:22:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@1be2b6ca MDC:[traceId=, spanId=]
2025-06-06 13:22:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:22:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@1be2b6ca MDC:[traceId=, spanId=]
2025-06-06 13:22:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:22:55 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:22:55 [http-nio-8088-exec-10] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:22:55 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:22:55 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@cc93d97 MDC:[traceId=, spanId=]
2025-06-06 13:22:55 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:22:55 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@cc93d97 MDC:[traceId=, spanId=]
2025-06-06 13:22:55 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:22:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:22:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:22:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:22:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:22:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@649f6e6b MDC:[traceId=, spanId=]
2025-06-06 13:22:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:22:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4db745d3 MDC:[traceId=, spanId=]
2025-06-06 13:22:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:22:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:22:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:22:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:22:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@2099069736 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:22:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:22:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:23:10 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:23:10 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:23:10 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:23:10 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@7cd85780 MDC:[traceId=, spanId=]
2025-06-06 13:23:10 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:23:10 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@7cd85780 MDC:[traceId=, spanId=]
2025-06-06 13:23:10 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:23:17 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:23:17 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:23:17 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:23:17 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@a831384 MDC:[traceId=, spanId=]
2025-06-06 13:23:17 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:23:17 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@a831384 MDC:[traceId=, spanId=]
2025-06-06 13:23:17 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:23:37 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:23:37 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:23:37 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:23:37 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@378bf16 MDC:[traceId=, spanId=]
2025-06-06 13:23:37 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:23:37 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@378bf16 MDC:[traceId=, spanId=]
2025-06-06 13:23:37 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:23:51 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:23:51 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:23:51 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:23:51 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@27ec10a MDC:[traceId=, spanId=]
2025-06-06 13:23:51 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:23:51 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@27ec10a MDC:[traceId=, spanId=]
2025-06-06 13:23:51 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:23:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:23:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:23:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:23:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:23:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6248c7cc MDC:[traceId=, spanId=]
2025-06-06 13:23:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:23:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6063c2d8 MDC:[traceId=, spanId=]
2025-06-06 13:23:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:23:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:23:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:23:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:23:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@943457278 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:23:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:23:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:24:04 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:24:04 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:24:04 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:24:04 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@7ea6aee1 MDC:[traceId=, spanId=]
2025-06-06 13:24:04 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:24:04 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@7ea6aee1 MDC:[traceId=, spanId=]
2025-06-06 13:24:04 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:24:22 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:24:22 [http-nio-8088-exec-6] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:24:22 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:24:22 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@4f987302 MDC:[traceId=, spanId=]
2025-06-06 13:24:22 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:24:22 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@4f987302 MDC:[traceId=, spanId=]
2025-06-06 13:24:22 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:24:27 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:24:27 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:24:27 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:24:27 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@48c250b9 MDC:[traceId=, spanId=]
2025-06-06 13:24:27 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:24:27 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@48c250b9 MDC:[traceId=, spanId=]
2025-06-06 13:24:27 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:24:44 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:24:44 [http-nio-8088-exec-8] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:24:44 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:24:44 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@3a9dd470 MDC:[traceId=, spanId=]
2025-06-06 13:24:44 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:24:44 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@3a9dd470 MDC:[traceId=, spanId=]
2025-06-06 13:24:44 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:24:47 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:24:47 [http-nio-8088-exec-9] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:24:47 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:24:47 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@159a01e9 MDC:[traceId=, spanId=]
2025-06-06 13:24:47 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:24:47 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@159a01e9 MDC:[traceId=, spanId=]
2025-06-06 13:24:47 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:24:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:24:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:24:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:24:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:24:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@26256475 MDC:[traceId=, spanId=]
2025-06-06 13:24:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:24:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@55e11360 MDC:[traceId=, spanId=]
2025-06-06 13:24:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:24:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:24:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:24:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:24:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@286512301 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:24:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:24:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:25:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:25:00 [http-nio-8088-exec-10] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:25:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:25:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@7b85a9f4 MDC:[traceId=, spanId=]
2025-06-06 13:25:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:25:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@7b85a9f4 MDC:[traceId=, spanId=]
2025-06-06 13:25:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:25:05 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:25:05 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:25:05 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:25:05 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@2eda6d MDC:[traceId=, spanId=]
2025-06-06 13:25:05 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:25:05 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@2eda6d MDC:[traceId=, spanId=]
2025-06-06 13:25:05 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:25:08 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:25:08 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:25:08 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:25:08 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@76b8ebc2 MDC:[traceId=, spanId=]
2025-06-06 13:25:08 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:25:08 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@76b8ebc2 MDC:[traceId=, spanId=]
2025-06-06 13:25:08 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:25:35 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:25:35 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:25:35 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:25:35 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@542dc0ac MDC:[traceId=, spanId=]
2025-06-06 13:25:35 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:25:35 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@542dc0ac MDC:[traceId=, spanId=]
2025-06-06 13:25:35 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:25:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:25:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:25:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:25:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:25:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3d5970e7 MDC:[traceId=, spanId=]
2025-06-06 13:25:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:25:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3ec4afda MDC:[traceId=, spanId=]
2025-06-06 13:25:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:25:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:25:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:25:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:25:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1173018153 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:25:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:25:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:26:29 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:26:29 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:26:29 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:26:29 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@1cd6f26c MDC:[traceId=, spanId=]
2025-06-06 13:26:29 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:26:29 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@1cd6f26c MDC:[traceId=, spanId=]
2025-06-06 13:26:29 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:26:44 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:26:44 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:26:44 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:26:44 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@643e32d3 MDC:[traceId=, spanId=]
2025-06-06 13:26:44 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:26:44 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@643e32d3 MDC:[traceId=, spanId=]
2025-06-06 13:26:44 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:26:52 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:26:52 [http-nio-8088-exec-6] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:26:52 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:26:52 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@6cb817d1 MDC:[traceId=, spanId=]
2025-06-06 13:26:52 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:26:52 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@6cb817d1 MDC:[traceId=, spanId=]
2025-06-06 13:26:52 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:26:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:26:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:26:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:26:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:26:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@405c9543 MDC:[traceId=, spanId=]
2025-06-06 13:26:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:26:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3a20116d MDC:[traceId=, spanId=]
2025-06-06 13:26:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:26:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:26:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:26:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:26:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1594702643 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:26:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:26:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:27:38 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:27:38 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:27:38 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:27:38 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@42dadbab MDC:[traceId=, spanId=]
2025-06-06 13:27:38 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:27:38 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@42dadbab MDC:[traceId=, spanId=]
2025-06-06 13:27:38 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:27:46 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:27:46 [http-nio-8088-exec-8] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:27:46 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:27:46 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@648774fb MDC:[traceId=, spanId=]
2025-06-06 13:27:46 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:27:46 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@648774fb MDC:[traceId=, spanId=]
2025-06-06 13:27:46 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:27:54 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:27:54 [http-nio-8088-exec-9] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:27:54 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:27:54 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@73f31a66 MDC:[traceId=, spanId=]
2025-06-06 13:27:54 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:27:54 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@73f31a66 MDC:[traceId=, spanId=]
2025-06-06 13:27:54 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:27:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:27:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:27:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:27:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:27:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@13f3d2df MDC:[traceId=, spanId=]
2025-06-06 13:27:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:27:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5c5cd1b8 MDC:[traceId=, spanId=]
2025-06-06 13:27:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:27:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:27:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:27:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:27:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@2054274694 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:27:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:27:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:28:03 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:28:03 [http-nio-8088-exec-10] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:28:03 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:28:03 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@7f1ae0c4 MDC:[traceId=, spanId=]
2025-06-06 13:28:03 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:28:03 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@7f1ae0c4 MDC:[traceId=, spanId=]
2025-06-06 13:28:03 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:28:10 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:28:10 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:28:10 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:28:10 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@10041765 MDC:[traceId=, spanId=]
2025-06-06 13:28:10 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:28:10 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@10041765 MDC:[traceId=, spanId=]
2025-06-06 13:28:10 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:28:25 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:28:25 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:28:25 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:28:25 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@77c6d32a MDC:[traceId=, spanId=]
2025-06-06 13:28:25 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:28:25 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@77c6d32a MDC:[traceId=, spanId=]
2025-06-06 13:28:25 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:28:39 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:28:39 [http-nio-8088-exec-6] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:28:39 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:28:39 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@200441b2 MDC:[traceId=, spanId=]
2025-06-06 13:28:39 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:28:39 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@200441b2 MDC:[traceId=, spanId=]
2025-06-06 13:28:39 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:28:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:28:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:28:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:28:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:28:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@cf43bf MDC:[traceId=, spanId=]
2025-06-06 13:28:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:28:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@78d73aaf MDC:[traceId=, spanId=]
2025-06-06 13:28:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:28:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:28:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:28:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:28:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@291456422 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:28:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:28:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:29:02 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:29:02 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:29:02 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:29:02 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@660db63b MDC:[traceId=, spanId=]
2025-06-06 13:29:02 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:29:02 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@660db63b MDC:[traceId=, spanId=]
2025-06-06 13:29:02 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:29:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:29:15 [http-nio-8088-exec-9] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:29:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:29:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@28d7796 MDC:[traceId=, spanId=]
2025-06-06 13:29:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:29:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@28d7796 MDC:[traceId=, spanId=]
2025-06-06 13:29:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:29:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:29:52 [http-nio-8088-exec-10] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:29:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:29:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@595b5b84 MDC:[traceId=, spanId=]
2025-06-06 13:29:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:29:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@595b5b84 MDC:[traceId=, spanId=]
2025-06-06 13:29:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:29:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:29:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:29:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:29:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:29:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@45765b1d MDC:[traceId=, spanId=]
2025-06-06 13:29:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:29:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@316e891c MDC:[traceId=, spanId=]
2025-06-06 13:29:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:29:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:29:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:29:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:29:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@114386296 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:29:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:29:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:30:00 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:30:00 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:30:00 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:30:00 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@44c399e3 MDC:[traceId=, spanId=]
2025-06-06 13:30:00 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:30:00 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@44c399e3 MDC:[traceId=, spanId=]
2025-06-06 13:30:00 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:30:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:30:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:30:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:30:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:30:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@123fac0d MDC:[traceId=, spanId=]
2025-06-06 13:30:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:30:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@922c684 MDC:[traceId=, spanId=]
2025-06-06 13:30:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:30:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:30:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:30:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:30:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@825340554 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:30:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:30:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:30:58 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:30:58 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:30:58 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:30:58 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@13dec1cb MDC:[traceId=, spanId=]
2025-06-06 13:30:58 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:30:58 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@13dec1cb MDC:[traceId=, spanId=]
2025-06-06 13:30:58 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:31:30 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:31:30 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:31:30 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:31:30 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@1ea724be MDC:[traceId=, spanId=]
2025-06-06 13:31:30 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:31:30 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@1ea724be MDC:[traceId=, spanId=]
2025-06-06 13:31:30 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:31:48 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:31:48 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:31:48 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:31:48 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@721e54d2 MDC:[traceId=, spanId=]
2025-06-06 13:31:48 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:31:48 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@721e54d2 MDC:[traceId=, spanId=]
2025-06-06 13:31:48 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:31:55 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:31:55 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:31:55 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:31:55 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@1578a035 MDC:[traceId=, spanId=]
2025-06-06 13:31:55 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:31:55 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@1578a035 MDC:[traceId=, spanId=]
2025-06-06 13:31:55 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:31:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:31:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:31:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:31:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:31:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3612ae30 MDC:[traceId=, spanId=]
2025-06-06 13:31:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:31:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2b667d09 MDC:[traceId=, spanId=]
2025-06-06 13:31:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:31:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:31:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:31:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:31:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@365833409 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:31:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:31:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:32:01 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:32:01 [http-nio-8088-exec-6] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:32:01 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:32:01 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@31253d24 MDC:[traceId=, spanId=]
2025-06-06 13:32:01 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:32:01 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@31253d24 MDC:[traceId=, spanId=]
2025-06-06 13:32:01 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:32:06 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:32:06 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:32:06 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:32:06 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@2a551394 MDC:[traceId=, spanId=]
2025-06-06 13:32:06 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:32:06 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@2a551394 MDC:[traceId=, spanId=]
2025-06-06 13:32:06 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:32:20 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:32:20 [http-nio-8088-exec-8] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:32:20 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:32:20 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@66d4b3b4 MDC:[traceId=, spanId=]
2025-06-06 13:32:20 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:32:20 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@66d4b3b4 MDC:[traceId=, spanId=]
2025-06-06 13:32:20 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:32:30 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:32:30 [http-nio-8088-exec-9] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:32:30 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:32:30 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@7f9fb383 MDC:[traceId=, spanId=]
2025-06-06 13:32:30 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:32:30 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@7f9fb383 MDC:[traceId=, spanId=]
2025-06-06 13:32:30 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:32:35 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:32:35 [http-nio-8088-exec-10] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:32:35 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:32:35 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@3b2a3040 MDC:[traceId=, spanId=]
2025-06-06 13:32:35 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:32:35 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@3b2a3040 MDC:[traceId=, spanId=]
2025-06-06 13:32:35 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:32:49 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:32:49 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:32:49 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:32:49 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@7aead1c5 MDC:[traceId=, spanId=]
2025-06-06 13:32:49 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:32:49 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@7aead1c5 MDC:[traceId=, spanId=]
2025-06-06 13:32:49 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:32:53 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:32:53 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:32:53 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:32:53 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@37ee548b MDC:[traceId=, spanId=]
2025-06-06 13:32:53 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:32:53 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@37ee548b MDC:[traceId=, spanId=]
2025-06-06 13:32:53 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:32:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:32:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:32:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:32:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:32:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1ebbec56 MDC:[traceId=, spanId=]
2025-06-06 13:32:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:32:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4796dfc5 MDC:[traceId=, spanId=]
2025-06-06 13:32:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:32:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:32:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:32:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:32:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@607626755 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:32:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:32:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:32:56 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:32:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:32:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:32:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@3298eeb1 MDC:[traceId=, spanId=]
2025-06-06 13:32:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:32:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@3298eeb1 MDC:[traceId=, spanId=]
2025-06-06 13:32:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:33:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:33:11 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:33:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:33:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@53f44ae7 MDC:[traceId=, spanId=]
2025-06-06 13:33:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:33:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@53f44ae7 MDC:[traceId=, spanId=]
2025-06-06 13:33:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:33:14 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:33:14 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:33:14 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:33:14 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@2adad52 MDC:[traceId=, spanId=]
2025-06-06 13:33:14 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:33:14 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@2adad52 MDC:[traceId=, spanId=]
2025-06-06 13:33:14 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:33:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:33:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:33:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:33:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:33:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@145161d8 MDC:[traceId=, spanId=]
2025-06-06 13:33:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:33:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@68b7ff55 MDC:[traceId=, spanId=]
2025-06-06 13:33:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:33:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:33:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:33:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:33:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@902554468 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:33:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:33:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:34:25 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:34:25 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:34:25 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:34:25 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@66b96a31 MDC:[traceId=, spanId=]
2025-06-06 13:34:25 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:34:25 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@66b96a31 MDC:[traceId=, spanId=]
2025-06-06 13:34:25 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:34:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:34:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:34:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:34:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:34:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@50b94c63 MDC:[traceId=, spanId=]
2025-06-06 13:34:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:34:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5be95ceb MDC:[traceId=, spanId=]
2025-06-06 13:34:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:34:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:34:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:34:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:34:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@308265934 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:34:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:34:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:35:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:35:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:35:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:35:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:35:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6645a772 MDC:[traceId=, spanId=]
2025-06-06 13:35:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:35:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@429575f MDC:[traceId=, spanId=]
2025-06-06 13:35:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:35:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:35:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:35:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:35:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@2028129718 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:35:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:35:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:36:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:36:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:36:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:36:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:36:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7d6332b MDC:[traceId=, spanId=]
2025-06-06 13:36:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:36:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2ac538b5 MDC:[traceId=, spanId=]
2025-06-06 13:36:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:36:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:36:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:36:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:36:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@94961196 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:36:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:36:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:37:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:37:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:37:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:37:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:37:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7c59c412 MDC:[traceId=, spanId=]
2025-06-06 13:37:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:37:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@db64c12 MDC:[traceId=, spanId=]
2025-06-06 13:37:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:37:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:37:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:37:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:37:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1605502411 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:37:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:37:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:38:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:38:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:38:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:38:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:38:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7fd7fb9f MDC:[traceId=, spanId=]
2025-06-06 13:38:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:38:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@42618de1 MDC:[traceId=, spanId=]
2025-06-06 13:38:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:38:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:38:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:38:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:38:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@763091423 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:38:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:38:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:39:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:39:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:39:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:39:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:39:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5e3084b9 MDC:[traceId=, spanId=]
2025-06-06 13:39:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:39:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7e5f8919 MDC:[traceId=, spanId=]
2025-06-06 13:39:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:39:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:39:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:39:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:39:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1012958090 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:39:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:39:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:40:51 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:40:51 [http-nio-8088-exec-9] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:40:51 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:40:51 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@135a1533 MDC:[traceId=, spanId=]
2025-06-06 13:40:51 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:40:51 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@135a1533 MDC:[traceId=, spanId=]
2025-06-06 13:40:51 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:40:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:40:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:40:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:40:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:40:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2d74b709 MDC:[traceId=, spanId=]
2025-06-06 13:40:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:40:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3d7e3df5 MDC:[traceId=, spanId=]
2025-06-06 13:40:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:40:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:40:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:40:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:40:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1192276090 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:40:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:40:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:41:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:41:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:41:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:41:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:41:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@644844a5 MDC:[traceId=, spanId=]
2025-06-06 13:41:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:41:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2ca4e5bb MDC:[traceId=, spanId=]
2025-06-06 13:41:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:41:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:41:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:41:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:41:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1704191017 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:41:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:41:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:42:25 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:42:25 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:42:25 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:42:25 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@7648411a MDC:[traceId=, spanId=]
2025-06-06 13:42:25 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:42:25 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@7648411a MDC:[traceId=, spanId=]
2025-06-06 13:42:25 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:42:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:42:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:42:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:42:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:42:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5aa7f0c2 MDC:[traceId=, spanId=]
2025-06-06 13:42:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:42:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@67e005df MDC:[traceId=, spanId=]
2025-06-06 13:42:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:42:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:42:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:42:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:42:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1941681644 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:42:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:42:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:42:57 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:42:57 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:42:57 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:42:57 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@33da1601 MDC:[traceId=, spanId=]
2025-06-06 13:42:57 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:42:57 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@33da1601 MDC:[traceId=, spanId=]
2025-06-06 13:42:57 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:43:06 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:43:06 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:43:06 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:43:06 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@ef92515 MDC:[traceId=, spanId=]
2025-06-06 13:43:06 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:43:06 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@ef92515 MDC:[traceId=, spanId=]
2025-06-06 13:43:06 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:43:42 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:43:42 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:43:42 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:43:42 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@64c96a94 MDC:[traceId=, spanId=]
2025-06-06 13:43:42 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:43:42 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@64c96a94 MDC:[traceId=, spanId=]
2025-06-06 13:43:42 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:43:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:43:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:43:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:43:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:43:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@128d7071 MDC:[traceId=, spanId=]
2025-06-06 13:43:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:43:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2997de8d MDC:[traceId=, spanId=]
2025-06-06 13:43:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:43:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:43:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:43:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:43:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1161518287 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:43:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:43:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:44:05 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:44:05 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:44:05 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:44:05 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@b779c11 MDC:[traceId=, spanId=]
2025-06-06 13:44:05 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:44:05 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@b779c11 MDC:[traceId=, spanId=]
2025-06-06 13:44:05 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:44:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:44:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:44:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:44:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:44:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7390bcb0 MDC:[traceId=, spanId=]
2025-06-06 13:44:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:44:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3856a1fa MDC:[traceId=, spanId=]
2025-06-06 13:44:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:44:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:44:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:44:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:44:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@138286525 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:44:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:44:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:45:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:45:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:45:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:45:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:45:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@8689ef8 MDC:[traceId=, spanId=]
2025-06-06 13:45:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:45:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@cebb2d9 MDC:[traceId=, spanId=]
2025-06-06 13:45:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:45:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:45:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:45:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:45:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1446957795 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:45:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:45:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:46:02 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:46:02 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:46:02 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:46:02 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@721312c5 MDC:[traceId=, spanId=]
2025-06-06 13:46:02 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:46:02 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@721312c5 MDC:[traceId=, spanId=]
2025-06-06 13:46:02 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:46:21 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:46:21 [http-nio-8088-exec-8] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:46:21 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:46:21 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@38af53c6 MDC:[traceId=, spanId=]
2025-06-06 13:46:21 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:46:21 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@38af53c6 MDC:[traceId=, spanId=]
2025-06-06 13:46:21 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:46:36 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:46:36 [http-nio-8088-exec-9] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:46:36 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:46:36 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@6a0ee57 MDC:[traceId=, spanId=]
2025-06-06 13:46:36 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:46:36 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@6a0ee57 MDC:[traceId=, spanId=]
2025-06-06 13:46:36 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:46:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:46:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:46:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:46:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:46:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@46c118e7 MDC:[traceId=, spanId=]
2025-06-06 13:46:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:46:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@894a991 MDC:[traceId=, spanId=]
2025-06-06 13:46:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:46:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:46:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:46:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:46:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@222414319 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:46:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:46:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:47:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:47:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:47:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:47:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:47:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3372e99 MDC:[traceId=, spanId=]
2025-06-06 13:47:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:47:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@20ee2376 MDC:[traceId=, spanId=]
2025-06-06 13:47:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:47:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:47:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:47:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:47:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1984547594 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:47:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:47:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:48:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:48:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:48:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:48:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:48:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4d226659 MDC:[traceId=, spanId=]
2025-06-06 13:48:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:48:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@50aa8e49 MDC:[traceId=, spanId=]
2025-06-06 13:48:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:48:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:48:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:48:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:48:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@952053898 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:48:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:48:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:49:03 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:49:03 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:49:03 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:49:03 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@5794b671 MDC:[traceId=, spanId=]
2025-06-06 13:49:03 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:49:03 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@5794b671 MDC:[traceId=, spanId=]
2025-06-06 13:49:03 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:49:16 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:49:16 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:49:16 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:49:16 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@3cc3fca1 MDC:[traceId=, spanId=]
2025-06-06 13:49:16 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:49:16 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@3cc3fca1 MDC:[traceId=, spanId=]
2025-06-06 13:49:16 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:49:49 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:49:49 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:49:49 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:49:49 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@17ef3379 MDC:[traceId=, spanId=]
2025-06-06 13:49:49 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:49:49 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@17ef3379 MDC:[traceId=, spanId=]
2025-06-06 13:49:49 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:49:55 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:49:55 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:49:55 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:49:55 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@2d32cf88 MDC:[traceId=, spanId=]
2025-06-06 13:49:55 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:49:55 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@2d32cf88 MDC:[traceId=, spanId=]
2025-06-06 13:49:55 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:49:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:49:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:49:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:49:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:49:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6718f067 MDC:[traceId=, spanId=]
2025-06-06 13:49:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:49:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7ca9613d MDC:[traceId=, spanId=]
2025-06-06 13:49:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:49:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:49:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:49:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:49:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@403475414 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:49:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:49:57 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:50:16 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:50:16 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:50:16 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:50:16 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@16570a6b MDC:[traceId=, spanId=]
2025-06-06 13:50:16 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:50:16 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@16570a6b MDC:[traceId=, spanId=]
2025-06-06 13:50:16 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:50:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:50:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:50:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:50:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:50:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7c710478 MDC:[traceId=, spanId=]
2025-06-06 13:50:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:50:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@609f4e0e MDC:[traceId=, spanId=]
2025-06-06 13:50:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:50:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:50:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:50:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:50:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1425050409 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:50:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:50:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:51:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:51:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:51:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:51:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:51:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5a3551bc MDC:[traceId=, spanId=]
2025-06-06 13:51:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:51:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3e41bc38 MDC:[traceId=, spanId=]
2025-06-06 13:51:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:51:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:51:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:51:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:51:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1704281006 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:51:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:51:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:52:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:52:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:52:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:52:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:52:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1d86d500 MDC:[traceId=, spanId=]
2025-06-06 13:52:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:52:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@44a7f38a MDC:[traceId=, spanId=]
2025-06-06 13:52:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:52:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:52:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:52:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:52:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@499498471 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:52:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:52:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:53:10 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:53:10 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:53:10 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:53:10 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@4faab961 MDC:[traceId=, spanId=]
2025-06-06 13:53:10 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:53:10 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@4faab961 MDC:[traceId=, spanId=]
2025-06-06 13:53:10 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:53:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:53:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:53:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:53:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:53:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4a87a81c MDC:[traceId=, spanId=]
2025-06-06 13:53:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:53:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4ee798f1 MDC:[traceId=, spanId=]
2025-06-06 13:53:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:53:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:53:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:53:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:53:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@273650516 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:53:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:53:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:54:54 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:54:54 [http-nio-8088-exec-9] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:54:54 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:54:54 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@3fcf89a6 MDC:[traceId=, spanId=]
2025-06-06 13:54:54 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:54:54 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@3fcf89a6 MDC:[traceId=, spanId=]
2025-06-06 13:54:54 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:54:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:54:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:54:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:54:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:54:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@14d381c3 MDC:[traceId=, spanId=]
2025-06-06 13:54:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:54:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2ac53e09 MDC:[traceId=, spanId=]
2025-06-06 13:54:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:54:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:54:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:54:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:54:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1169649526 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:54:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:54:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:55:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:55:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:55:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:55:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:55:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7ffb2473 MDC:[traceId=, spanId=]
2025-06-06 13:55:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:55:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4ae8c342 MDC:[traceId=, spanId=]
2025-06-06 13:55:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:55:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:55:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:55:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:55:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1830469441 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:55:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:55:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:56:48 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:56:48 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:56:48 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:56:48 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@1e29ef3d MDC:[traceId=, spanId=]
2025-06-06 13:56:48 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:56:48 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@1e29ef3d MDC:[traceId=, spanId=]
2025-06-06 13:56:48 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:56:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:56:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:56:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:56:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:56:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2a318378 MDC:[traceId=, spanId=]
2025-06-06 13:56:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:56:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7770bdf5 MDC:[traceId=, spanId=]
2025-06-06 13:56:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:56:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:56:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:56:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:56:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1384748426 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:56:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:56:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:57:03 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:57:03 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 13:57:03 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 13:57:03 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@1b0f4e MDC:[traceId=, spanId=]
2025-06-06 13:57:03 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 13:57:03 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@1b0f4e MDC:[traceId=, spanId=]
2025-06-06 13:57:03 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 13:57:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:57:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:57:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:57:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:57:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@c1cba60 MDC:[traceId=, spanId=]
2025-06-06 13:57:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:57:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@55b38f42 MDC:[traceId=, spanId=]
2025-06-06 13:57:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:57:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:57:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:57:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:57:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@157472414 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:57:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:57:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:58:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:58:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:58:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:58:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:58:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@d7a2a4c MDC:[traceId=, spanId=]
2025-06-06 13:58:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:58:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5fd3402 MDC:[traceId=, spanId=]
2025-06-06 13:58:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:58:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:58:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:58:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:58:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1132063868 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:58:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:58:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 13:59:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 13:59:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 13:59:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 13:59:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 13:59:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@79627c5c MDC:[traceId=, spanId=]
2025-06-06 13:59:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 13:59:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@17bc360b MDC:[traceId=, spanId=]
2025-06-06 13:59:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 13:59:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 13:59:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 13:59:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 13:59:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1457556389 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 13:59:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 13:59:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:00:28 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:00:28 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:00:28 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:00:28 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@736cd699 MDC:[traceId=, spanId=]
2025-06-06 14:00:28 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 14:00:28 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@736cd699 MDC:[traceId=, spanId=]
2025-06-06 14:00:28 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:00:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:00:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:00:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:00:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:00:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@14d6c5ae MDC:[traceId=, spanId=]
2025-06-06 14:00:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:00:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@43096e2e MDC:[traceId=, spanId=]
2025-06-06 14:00:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:00:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:00:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:00:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:00:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@49347119 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:00:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:00:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:01:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:01:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:01:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:01:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:01:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@55ac4d31 MDC:[traceId=, spanId=]
2025-06-06 14:01:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:01:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6468a889 MDC:[traceId=, spanId=]
2025-06-06 14:01:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:01:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:01:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:01:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:01:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1559923339 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:01:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:01:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:02:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:02:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:02:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:02:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:02:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@598e863c MDC:[traceId=, spanId=]
2025-06-06 14:02:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:02:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2c9d093e MDC:[traceId=, spanId=]
2025-06-06 14:02:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:02:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:02:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:02:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:02:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1388824956 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:02:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:02:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:03:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:03:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:03:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:03:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:03:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@635a0c63 MDC:[traceId=, spanId=]
2025-06-06 14:03:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:03:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@43273298 MDC:[traceId=, spanId=]
2025-06-06 14:03:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:03:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:03:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:03:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:03:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1268409048 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:03:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:03:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:04:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:04:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:04:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:04:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:04:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@172c7948 MDC:[traceId=, spanId=]
2025-06-06 14:04:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:04:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@31bc4c42 MDC:[traceId=, spanId=]
2025-06-06 14:04:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:04:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:04:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:04:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:04:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@43297167 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:04:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:04:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:05:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:05:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:05:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:05:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:05:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6f1fc417 MDC:[traceId=, spanId=]
2025-06-06 14:05:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:05:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@33edeb62 MDC:[traceId=, spanId=]
2025-06-06 14:05:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:05:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:05:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:05:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:05:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@119855764 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:05:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:05:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:06:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:06:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:06:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:06:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:06:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@26a12f11 MDC:[traceId=, spanId=]
2025-06-06 14:06:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:06:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2346508b MDC:[traceId=, spanId=]
2025-06-06 14:06:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:06:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:06:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:06:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:06:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@654108314 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:06:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:06:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:07:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:07:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:07:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:07:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:07:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@787bdc5d MDC:[traceId=, spanId=]
2025-06-06 14:07:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:07:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@700f16ca MDC:[traceId=, spanId=]
2025-06-06 14:07:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:07:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:07:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:07:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:07:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@556684801 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:07:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:07:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:08:11 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:08:11 [http-nio-8088-exec-6] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:08:11 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:08:11 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@57ae84f5 MDC:[traceId=, spanId=]
2025-06-06 14:08:11 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 14:08:11 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@57ae84f5 MDC:[traceId=, spanId=]
2025-06-06 14:08:11 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:08:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:08:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:08:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:08:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:08:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2a9ea0eb MDC:[traceId=, spanId=]
2025-06-06 14:08:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:08:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@13798afb MDC:[traceId=, spanId=]
2025-06-06 14:08:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:08:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:08:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:08:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:08:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@920648516 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:08:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:08:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:09:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:09:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:09:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:09:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:09:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6960043e MDC:[traceId=, spanId=]
2025-06-06 14:09:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:09:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@64ab78e6 MDC:[traceId=, spanId=]
2025-06-06 14:09:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:09:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:09:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:09:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:09:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@111992621 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:09:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:09:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:10:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:10:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:10:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:10:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:10:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1b493357 MDC:[traceId=, spanId=]
2025-06-06 14:10:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:10:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@797910c5 MDC:[traceId=, spanId=]
2025-06-06 14:10:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:10:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:10:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:10:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:10:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1010852733 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:10:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:10:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:11:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:11:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:11:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:11:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:11:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@442d7b7d MDC:[traceId=, spanId=]
2025-06-06 14:11:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:11:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2b545ea4 MDC:[traceId=, spanId=]
2025-06-06 14:11:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:11:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:11:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:11:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:11:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@153977269 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:11:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:11:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:12:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:12:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:12:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:12:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:12:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3657a064 MDC:[traceId=, spanId=]
2025-06-06 14:12:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:12:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@78eea256 MDC:[traceId=, spanId=]
2025-06-06 14:12:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:12:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:12:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:12:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:12:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@841999462 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:12:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:12:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:13:41 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:13:41 [http-nio-8088-exec-8] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:13:41 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:13:41 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@28f13032 MDC:[traceId=, spanId=]
2025-06-06 14:13:41 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 14:13:41 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@28f13032 MDC:[traceId=, spanId=]
2025-06-06 14:13:41 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:13:47 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:13:47 [http-nio-8088-exec-9] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:13:47 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:13:47 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@37d5dc1e MDC:[traceId=, spanId=]
2025-06-06 14:13:47 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 14:13:47 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@37d5dc1e MDC:[traceId=, spanId=]
2025-06-06 14:13:47 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:13:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:13:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:13:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:13:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:13:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@31c56186 MDC:[traceId=, spanId=]
2025-06-06 14:13:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:13:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@54e66e9b MDC:[traceId=, spanId=]
2025-06-06 14:13:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:13:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:13:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:13:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:13:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@487905156 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:13:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:13:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:14:37 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:14:37 [http-nio-8088-exec-10] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:14:37 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:14:37 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@b830baf MDC:[traceId=, spanId=]
2025-06-06 14:14:37 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 14:14:37 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@b830baf MDC:[traceId=, spanId=]
2025-06-06 14:14:37 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:14:39 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:14:39 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:14:39 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:14:39 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@589adcef MDC:[traceId=, spanId=]
2025-06-06 14:14:39 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 14:14:39 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@589adcef MDC:[traceId=, spanId=]
2025-06-06 14:14:39 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:14:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:14:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:14:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:14:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:14:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4f04cd67 MDC:[traceId=, spanId=]
2025-06-06 14:14:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:14:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1aec4a0f MDC:[traceId=, spanId=]
2025-06-06 14:14:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:14:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:14:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:14:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:14:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1688346321 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:14:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:14:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:15:18 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:15:18 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:15:18 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:15:18 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@f583638 MDC:[traceId=, spanId=]
2025-06-06 14:15:18 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:15:20 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:15:20 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:15:20 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:15:20 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@1bb5f39 MDC:[traceId=, spanId=]
2025-06-06 14:15:20 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:15:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:15:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:15:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:15:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:15:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2aba14d6 MDC:[traceId=, spanId=]
2025-06-06 14:15:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:15:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2d5c0844 MDC:[traceId=, spanId=]
2025-06-06 14:15:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:15:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:15:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:15:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:15:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@431910121 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:15:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:15:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:16:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:16:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:16:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:16:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:16:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4a56f8b MDC:[traceId=, spanId=]
2025-06-06 14:16:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:16:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@30beef10 MDC:[traceId=, spanId=]
2025-06-06 14:16:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:16:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:16:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:16:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:16:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@2038938293 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:16:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:16:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:16:59 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:16:59 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:16:59 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:16:59 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@588ea8d5 MDC:[traceId=, spanId=]
2025-06-06 14:16:59 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:17:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:17:02 [http-nio-8088-exec-6] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:17:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:17:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@289f2101 MDC:[traceId=, spanId=]
2025-06-06 14:17:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:17:38 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:17:38 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:17:38 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:17:38 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@438a5702 MDC:[traceId=, spanId=]
2025-06-06 14:17:38 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:17:49 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:17:49 [http-nio-8088-exec-8] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:17:49 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:17:49 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@44f61f2a MDC:[traceId=, spanId=]
2025-06-06 14:17:49 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:17:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:17:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:17:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:17:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:17:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6f33125b MDC:[traceId=, spanId=]
2025-06-06 14:17:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:17:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@250b56b4 MDC:[traceId=, spanId=]
2025-06-06 14:17:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:17:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:17:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:17:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:17:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1623881589 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:17:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:17:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:18:17 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:18:17 [http-nio-8088-exec-9] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:18:17 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:18:17 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@75f2b77d MDC:[traceId=, spanId=]
2025-06-06 14:18:17 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:18:33 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:18:33 [http-nio-8088-exec-10] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:18:33 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:18:33 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@236c38b1 MDC:[traceId=, spanId=]
2025-06-06 14:18:33 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:18:52 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:18:52 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:18:52 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:18:52 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@1c762d2b MDC:[traceId=, spanId=]
2025-06-06 14:18:52 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:18:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:18:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:18:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:18:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:18:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@54e382b5 MDC:[traceId=, spanId=]
2025-06-06 14:18:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:18:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4c5cfbeb MDC:[traceId=, spanId=]
2025-06-06 14:18:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:18:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:18:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:18:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:18:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@911714711 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:18:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:18:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:19:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:19:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:19:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:19:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:19:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@74a5d903 MDC:[traceId=, spanId=]
2025-06-06 14:19:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:19:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@10f7ef4c MDC:[traceId=, spanId=]
2025-06-06 14:19:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:19:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:19:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:19:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:19:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1762540574 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:19:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:19:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:20:12 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:20:12 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = 12345678
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:20:12 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:20:12 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@7577ded MDC:[traceId=, spanId=]
2025-06-06 14:20:12 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:20:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:20:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:20:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:20:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:20:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3ff5014e MDC:[traceId=, spanId=]
2025-06-06 14:20:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:20:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@31fa922d MDC:[traceId=, spanId=]
2025-06-06 14:20:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:20:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:20:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:20:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:20:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@998824369 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:20:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:20:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:21:07 [SpringContextShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-06-06 14:21:07 [SpringContextShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6d73e2b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@de03f96] MDC:[traceId=, spanId=]
2025-06-06 14:21:07 [SpringContextShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-06 14:21:07 [SpringContextShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-06 14:21:18 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-06-06 14:21:18 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-06 14:21:18 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-06 14:21:18 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-06 14:21:18 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-06 14:21:18 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-06 14:21:18 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-06 14:21:18 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-06 14:21:18 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-06 14:21:18 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-06 14:21:18 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-06 14:21:18 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-06 14:21:18 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-06 14:21:18 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-06 14:21:25 [restartedMain] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@48f4e7f2
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/java-banking-phase2/backend/transaction-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.transaction_service.entity.Transaction]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-06-06 14:21:25 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-06-06 14:21:25 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-06-06 14:21:25 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-06-06 14:21:25 [restartedMain] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2995f5d5 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2995f5d5 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2995f5d5 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@b24aa24 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@b24aa24 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@81ea43c MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@81ea43c MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1245c60 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1245c60 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7992acc MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7992acc MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7992acc MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2942d591 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2942d591 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2942d591 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5400bbc1 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5400bbc1 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@77643a7d MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3965b117 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3965b117 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@63415f7 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@573b7843 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1da070b MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1da070b MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1da070b MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@15a3f32e MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@15a3f32e MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@15a3f32e MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@339ec7c0 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@339ec7c0 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@339ec7c0 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3f6b4890 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3f6b4890 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3f6b4890 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6ed8e229 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6ed8e229 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6ed8e229 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@64e8465f MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@64e8465f MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@210d3dc5 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@210d3dc5 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@44c7cebc MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@44c7cebc MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@44c7cebc MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6d27a5a7 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@4b5bcce2 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4b5bcce2 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3702359 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@79b8bfa5 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@79b8bfa5 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@79b8bfa5 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@29e227a8 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3ccbc2aa MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3e234481 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2da8177 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2da8177 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3a3d39e3 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3a3d39e3 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5881729c MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7c223241 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2a25c58b MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7904130d MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2a428b23 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@471f1410 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@431288e5 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@431288e5 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1a5767f1 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1a5767f1 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@24f2fc0b MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@24f2fc0b MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1bf2d311 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1bf2d311 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4c70352a MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4c70352a MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6d39bbba MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5e9800b2 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@53ff2a2b MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@53ff2a2b MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1eeb8c1b MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3eaf0017 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@202c1ae0 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@aa8d2bc MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@aa8d2bc MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@48611ca6 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@e081205 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@4e33f23e MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4e33f23e MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@2c2e476 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2c2e476 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@42864ca4 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@42864ca4 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@42864ca4 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@c50f6cb MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@c50f6cb MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@c50f6cb MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5da3477d MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4857e9eb MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@38447f29 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@38447f29 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@33a93044 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@33a93044 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@33a93044 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@74f601e3 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@399b627 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@183f2c4a MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@183f2c4a MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@626e0419 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@626e0419 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@626e0419 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@26d3f8ae MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@26d3f8ae MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@68b54add MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@68b54add MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@98976fd MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@98976fd MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1b55e519 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1b55e519 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@227a7855 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@227a7855 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@60db3d65 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2227911d MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@68fbd3b7 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@68fbd3b7 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@4c9816c7 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7f5cb6fa MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@761a1aa7 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2f75ca19 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@23d7df1e MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@39a656f8 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1f4fac49 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1e6b98bb MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3d98b47 MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2483df0f] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2483df0f) [was null] MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1f21dd55] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@79b0fff] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5b995246] MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2483df0f] MDC:[traceId=, spanId=]
2025-06-06 14:21:26 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2483df0f] MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@33337cc6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@66a2e8f8) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@48672948) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65073f2c) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4dfaaa06) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3c6e6e69) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4d322dc5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@11908510) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@9a2b7be) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@46f09dc5) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a70dcdb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@f5d6280) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13de2b92) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51828299) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d881a76) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@29a52825) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4bc50438) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@e16d193) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1ca593f8 MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4c9816c7` MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a2818ed] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7a8e866d] MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Transaction MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.example.transaction_service.entity.Transaction on table tbl_transaction MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:id] MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.id MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property amount with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:amount] MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for amount MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.amount MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property amount MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property bankType with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:bankType] MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for bankType MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.bank_type MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property bankType MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:createdAt] MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for createdAt MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.created_at MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property createdAt MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property createdBy with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:createdBy] MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for createdBy MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.created_by MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property createdBy MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property currency with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:currency] MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for currency MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.currency MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property currency MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property description with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:description] MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for description MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.description MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property description MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankCode with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankCode] MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankCode MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_code MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankCode MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankName with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankName] MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankName MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_name MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankName MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property failedReason with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:failedReason] MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for failedReason MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.failed_reason MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property failedReason MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:fromAccountNumber] MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.from_account_number MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property fromAccountNumber MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property referenceCode with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:referenceCode] MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for referenceCode MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.reference_code MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property referenceCode MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property status with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:status] MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for status MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.status MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property status MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property timestamp with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:timestamp] MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for timestamp MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.timestamp MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property timestamp MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property toAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:toAccountNumber] MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for toAccountNumber MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.to_account_number MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property toAccountNumber MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property type with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:type] MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for type MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.type MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property type MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:updatedAt] MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for updatedAt MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.updated_at MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property updatedAt MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property updatedBy with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:updatedBy] MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for updatedBy MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.updated_by MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property updatedBy MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.example.transaction_service.entity MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding touchForUpdate as PreUpdate callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding touchForCreate as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bankType MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for createdAt MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for createdBy MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for currency MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for description MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankCode MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankName MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for failedReason MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for referenceCode MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for timestamp MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for toAccountNumber MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for type MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for updatedAt MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for updatedBy MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_transaction] MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {jdk.tls.rejectClientInitiatedRenegotiation=true, java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@6c0228f0, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\java-banking-phase2\backend\transaction-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.11\spring-boot-starter-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.11\spring-boot-starter-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.11\spring-boot-starter-logging-3.3.11.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.11\spring-boot-actuator-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.11\spring-boot-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.13\micrometer-observation-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.13\micrometer-commons-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.13\micrometer-jakarta9-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-core\1.13.13\micrometer-core-1.13.13.jar;C:\Users\A715-42G\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\A715-42G\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.11\spring-boot-starter-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.11\spring-boot-starter-aop-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.11\spring-boot-starter-jdbc-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.19\spring-jdbc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.11\spring-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.11\spring-data-commons-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.19\spring-orm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.19\spring-context-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.19\spring-tx-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.19\spring-beans-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.19\spring-aspects-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.11\spring-boot-starter-web-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.11\spring-boot-starter-json-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.11\spring-boot-starter-tomcat-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.40\tomcat-embed-core-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.40\tomcat-embed-websocket-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.19\spring-web-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.19\spring-webmvc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.19\spring-expression-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-devtools\3.3.11\spring-boot-devtools-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.11\spring-boot-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.11\spring-boot-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.19\spring-core-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.19\spring-jcl-6.1.19.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.11\spring-boot-starter-validation-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.0.2\springdoc-openapi-starter-webmvc-ui-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.0.2\springdoc-openapi-starter-webmvc-api-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.0.2\springdoc-openapi-starter-common-2.0.2.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.7\swagger-core-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.7\swagger-annotations-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.7\swagger-models-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\4.15.5\swagger-ui-4.15.5.jar;C:\Users\A715-42G\.m2\repository\org\webjars\webjars-locator-core\0.58\webjars-locator-core-0.58.jar;C:\Users\A715-42G\.m2\repository\io\github\classgraph\classgraph\4.8.149\classgraph-4.8.149.jar;D:\LT_Web\SpringBoot\java-banking-phase2\backend\common-service\target\classes;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-starter\3.3.2\dubbo-spring-boot-starter-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure\3.3.2\dubbo-spring-boot-autoconfigure-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure-compatible\3.3.2\dubbo-spring-boot-autoconfigure-compatible-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo\3.3.2\dubbo-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\javassist\javassist\3.30.2-GA\javassist-3.30.2-GA.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-all\4.1.119.Final\netty-all-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-dns\4.1.119.Final\netty-codec-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-haproxy\4.1.119.Final\netty-codec-haproxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http\4.1.119.Final\netty-codec-http-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http2\4.1.119.Final\netty-codec-http2-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-memcache\4.1.119.Final\netty-codec-memcache-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-mqtt\4.1.119.Final\netty-codec-mqtt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-redis\4.1.119.Final\netty-codec-redis-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-smtp\4.1.119.Final\netty-codec-smtp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-socks\4.1.119.Final\netty-codec-socks-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-stomp\4.1.119.Final\netty-codec-stomp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-xml\4.1.119.Final\netty-codec-xml-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-proxy\4.1.119.Final\netty-handler-proxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-ssl-ocsp\4.1.119.Final\netty-handler-ssl-ocsp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns\4.1.119.Final\netty-resolver-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-rxtx\4.1.119.Final\netty-transport-rxtx-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-sctp\4.1.119.Final\netty-transport-sctp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-udt\4.1.119.Final\netty-transport-udt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-kqueue\4.1.119.Final\netty-transport-classes-kqueue-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.119.Final\netty-resolver-dns-classes-macos-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-riscv64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\hessian-lite\4.0.3\hessian-lite-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\alibaba\fastjson2\fastjson2\2.0.53\fastjson2-2.0.53.jar;C:\Users\A715-42G\.m2\repository\com\google\protobuf\protobuf-java\3.25.5\protobuf-java-3.25.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-framework\5.1.0\curator-framework-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-client\5.1.0\curator-client-5.1.0.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\guava\27.0.1-jre\guava-27.0.1-jre.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\A715-42G\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\checkerframework\checker-qual\2.5.2\checker-qual-2.5.2.jar;C:\Users\A715-42G\.m2\repository\com\google\errorprone\error_prone_annotations\2.2.0\error_prone_annotations-2.2.0.jar;C:\Users\A715-42G\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\A715-42G\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.17\animal-sniffer-annotations-1.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper\3.7.1\zookeeper-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper-jute\3.7.1\zookeeper-jute-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\yetus\audience-annotations\0.12.0\audience-annotations-0.12.0.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler\4.1.119.Final\netty-handler-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-common\4.1.119.Final\netty-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver\4.1.119.Final\netty-resolver-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-buffer\4.1.119.Final\netty-buffer-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport\4.1.119.Final\netty-transport-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.119.Final\netty-transport-native-unix-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec\4.1.119.Final\netty-codec-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.119.Final\netty-transport-classes-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-recipes\5.5.0\curator-recipes-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-x-discovery\5.5.0\curator-x-discovery-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-vault-config\4.1.1\spring-cloud-starter-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.3.1\httpclient5-5.3.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.5\httpcore5-h2-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.5\httpcore5-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter\4.1.2\spring-cloud-starter-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-context\4.1.2\spring-cloud-context-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-commons\4.1.2\spring-cloud-commons-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-rsa\1.1.2\spring-security-rsa-1.1.2.jar;C:\Users\A715-42G\.m2\repository\org\bouncycastle\bcprov-jdk18on\1.77\bcprov-jdk18on-1.77.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-vault-config\4.1.1\spring-cloud-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\vault\spring-vault-core\3.1.1\spring-vault-core-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-redis\3.3.11\spring-boot-starter-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\lettuce\lettuce-core\6.3.2.RELEASE\lettuce-core-6.3.2.RELEASE.jar;C:\Users\A715-42G\.m2\repository\io\projectreactor\reactor-core\3.6.16\reactor-core-3.6.16.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-redis\3.3.11\spring-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-keyvalue\3.3.11\spring-data-keyvalue-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-oxm\6.1.19\spring-oxm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context-support\6.1.19\spring-context-support-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream\4.2.1\spring-cloud-stream-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-messaging\6.1.19\spring-messaging-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-core\6.3.9\spring-integration-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-jmx\6.3.9\spring-integration-jmx-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\retry\spring-retry\2.0.11\spring-retry-2.0.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-function-context\4.2.2\spring-cloud-function-context-4.2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-function-core\4.2.2\spring-cloud-function-core-4.2.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-joda\2.17.3\jackson-datatype-joda-2.17.3.jar;C:\Users\A715-42G\.m2\repository\joda-time\joda-time\2.10.14\joda-time-2.10.14.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-stream-kafka\4.2.1\spring-cloud-starter-stream-kafka-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka\4.2.1\spring-cloud-stream-binder-kafka-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka-core\4.2.1\spring-cloud-stream-binder-kafka-core-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-kafka\6.3.9\spring-integration-kafka-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\kafka\spring-kafka\3.2.8\spring-kafka-3.2.8.jar;C:\Users\A715-42G\.m2\repository\org\apache\kafka\kafka-clients\3.7.2\kafka-clients-3.7.2.jar;C:\Users\A715-42G\.m2\repository\com\github\luben\zstd-jni\1.5.6-4\zstd-jni-1.5.6-4.jar;C:\Users\A715-42G\.m2\repository\org\lz4\lz4-java\1.8.0\lz4-java-1.8.0.jar;C:\Users\A715-42G\.m2\repository\org\xerial\snappy\snappy-java\1.1.10.5\snappy-java-1.1.10.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.11\spring-boot-starter-security-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.19\spring-aop-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.9\spring-security-config-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.9\spring-security-web-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-oauth2-resource-server\3.3.11\spring-boot-starter-oauth2-resource-server-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.9\spring-security-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.9\spring-security-crypto-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-resource-server\6.3.9\spring-security-oauth2-resource-server-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-core\6.3.9\spring-security-oauth2-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-jose\6.3.9\spring-security-oauth2-jose-6.3.9.jar;C:\Users\A715-42G\.m2\repository\com\nimbusds\nimbus-jose-jwt\9.37.3\nimbus-jose-jwt-9.37.3.jar;C:\Users\A715-42G\.m2\repository\com\github\stephenc\jcip\jcip-annotations\1.0-1\jcip-annotations-1.0-1.jar;C:\Users\A715-42G\.m2\repository\org\keycloak\keycloak-admin-client\26.0.0\keycloak-admin-client-26.0.0.jar;C:\Users\A715-42G\.m2\repository\org\keycloak\keycloak-client-common-synced\26.0.0\keycloak-client-common-synced-26.0.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\commons-logging-jboss-logging\1.0.0.Final\commons-logging-jboss-logging-1.0.0.Final.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\microprofile\openapi\microprofile-openapi-api\3.1.1\microprofile-openapi-api-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-client\6.2.9.Final\resteasy-client-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-client-api\6.2.9.Final\resteasy-client-api-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-core-spi\6.2.9.Final\resteasy-core-spi-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-core\6.2.9.Final\resteasy-core-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\jandex\2.4.5.Final\jandex-2.4.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\com\ibm\async\asyncutil\0.1.0\asyncutil-0.1.0.jar;C:\Users\A715-42G\.m2\repository\commons-codec\commons-codec\1.16.1\commons-codec-1.16.1.jar;C:\Users\A715-42G\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\3.1.0\jakarta.ws.rs-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-multipart-provider\6.2.9.Final\resteasy-multipart-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\mail\jakarta.mail-api\2.1.3\jakarta.mail-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-mail\2.0.3\angus-mail-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-dom\0.8.11\apache-mime4j-dom-0.8.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-core\0.8.11\apache-mime4j-core-0.8.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-storage\0.8.11\apache-mime4j-storage-0.8.11.jar;C:\Users\A715-42G\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-jackson2-provider\6.2.9.Final\resteasy-jackson2-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-base\2.17.3\jackson-jakarta-rs-base-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-json-provider\2.17.3\jackson-jakarta-rs-json-provider-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-jakarta-xmlbind-annotations\2.17.3\jackson-module-jakarta-xmlbind-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\json-patch\1.13\json-patch-1.13.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\msg-simple\1.2\msg-simple-1.2.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\btf\1.3\btf-1.3.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\jackson-coreutils\2.0\jackson-coreutils-2.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-jaxb-provider\6.2.9.Final\resteasy-jaxb-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\codemodel\4.0.5\codemodel-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-jxc\4.0.5\jaxb-jxc-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-xjc\4.0.5\jaxb-xjc-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\xsom\4.0.5\xsom-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-tools\4.1.2\istack-commons-tools-4.1.2.jar;C:\Users\A715-42G\.m2\repository\com\sun\xml\bind\external\relaxng-datatype\4.0.3\relaxng-datatype-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\sun\xml\bind\external\rngom\4.0.3\rngom-4.0.3.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.example.transaction_service.TransactionServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@6fb1eaf, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.15064021158773080548, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\java-banking-phase2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=10320, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.15064021158773080548, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@37c99ac2, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\ProgramData\chocolatey\bin;D:\KienLongBank\Vault;D:\GrafanaLabs\grafana\bin;D:\KienLongBank\InfluxData\influxdb-1.8.10-1;D:\Document\Work\Redis;C:\Program Files\Docker\Docker\resources\bin;D:\nodejs\nvm;C:\nvm4w\nodejs;C:\Program Files\nodejs\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\XamPP\php;C:\Program Files\Azure Data Studio\bin;D:\nodejs\nvm;C:\nvm4w\nodejs;C:\Users\A715-42G\AppData\Roaming\npm;D:\Document\cursor\resources\app\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[transaction-service] } MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@50f66a33] under count; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@575c5b77] under every; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@348e1351] under any; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4ce897e5] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@63ff14ea] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@585d27d1] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@21a4ab83] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@297b57ed] under log; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@33b3ae7c] under position; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7a0c2f40] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@1ed75d06] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@b4cfaf3] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@240c81e1] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@69669030] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@127c4479] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@5925fa39] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@350eebc0] under str; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5b2020d6] under format; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7b2a29e6] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@57c6ab25] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3e8e8f74] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a28882b] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@25bedd6d] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@654f807e] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2ff0568c] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6157ea89] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@32d1167b] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2b842c2f] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@6807e096] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@297b57ed MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@2c1721d5] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6163217b] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f985653] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@33b3ae7c MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@570429b3] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@d6ce976] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@73c492fe] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4c2dd2ba] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a12233d] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@50df5a50] under format; prior registration was org.hibernate.dialect.function.FormatFunction@5b2020d6 MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@2ff0568c MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6157ea89 MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75b71d7] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@21a4ab83 MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@25c1cb84] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e610fca] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@5560f296] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-06 14:21:27 [restartedMain] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-06-06 14:21:28 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-06 14:21:28 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 14:21:28 [restartedMain] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.example.transaction_service.entity.Transaction]: private accessor [amount] MDC:[traceId=, spanId=]
2025-06-06 14:21:28 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-06-06 14:21:28 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.example.transaction_service.entity.Transaction) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-06-06 14:21:28 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:21:28 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction)] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:21:28 [restartedMain] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction.updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:21:28 [restartedMain] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:21:28 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 14:21:28 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-06 14:21:28 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_transaction (amount,bank_type,created_at,created_by,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-06 14:21:28 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_transaction set amount=?,bank_type=?,created_at=?,created_by=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=?,updated_at=?,updated_by=? where id=? MDC:[traceId=, spanId=]
2025-06-06 14:21:28 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-06 14:21:28 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-06-06 14:21:28 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a2818ed] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@18f68b9a] MDC:[traceId=, spanId=]
2025-06-06 14:21:28 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-06-06 14:21:28 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-06-06 14:21:28 [restartedMain] DEBUG org.hibernate.mapping.Table - No alter strings for table : tbl_transaction MDC:[traceId=, spanId=]
2025-06-06 14:21:28 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3a7e7a73 MDC:[traceId=, spanId=]
2025-06-06 14:21:28 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 8b3c455f-ea92-4bea-b805-bf0dadb798d4 (<unnamed>) MDC:[traceId=, spanId=]
2025-06-06 14:21:28 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-06-06 14:21:28 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-06-06 14:21:28 [restartedMain] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-06-06 14:21:28 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-06 14:21:28 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-06 14:21:28 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-06 14:21:28 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-06 14:21:32 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-06 14:21:32 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-06-06 14:21:32 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-06-06 14:21:32 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-06 14:21:32 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-06-06 14:21:32 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-06 14:21:32 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-06 14:21:32 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-06 14:21:32 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-06 14:21:32 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-06 14:21:32 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-06 14:21:32 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-06 14:21:32 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-06 14:21:32 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-06 14:21:32 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-06 14:21:32 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-06 14:21:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:21:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:21:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:21:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:21:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@79086e29 MDC:[traceId=, spanId=]
2025-06-06 14:21:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:21:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@15f0d3ff MDC:[traceId=, spanId=]
2025-06-06 14:21:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:21:34 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:21:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:21:34 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:21:34 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@2053793951 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:21:34 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:21:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:21:51 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.query.plan.cache - Creating and caching NativeQuery ParameterInterpretation - ParameterInterpretationImpl (SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
) : {
    
} MDC:[traceId=, spanId=]
2025-06-06 14:21:51 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:21:51 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:21:51 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:21:58 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:21:58 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:21:58 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:21:58 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@723c44d9 MDC:[traceId=, spanId=]
2025-06-06 14:21:58 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:22:23 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:22:23 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:22:23 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:22:23 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@6d8eabe9 MDC:[traceId=, spanId=]
2025-06-06 14:22:23 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:22:24 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:22:24 [http-nio-8088-exec-6] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:22:24 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:22:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:22:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:22:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:22:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:22:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@11d09dc1 MDC:[traceId=, spanId=]
2025-06-06 14:22:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:22:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5d6a29 MDC:[traceId=, spanId=]
2025-06-06 14:22:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:22:34 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:22:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:22:34 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:22:34 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1480375942 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:22:34 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:22:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:23:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:23:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:23:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:23:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:23:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2cb213bf MDC:[traceId=, spanId=]
2025-06-06 14:23:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:23:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@32a8b193 MDC:[traceId=, spanId=]
2025-06-06 14:23:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:23:34 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:23:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:23:34 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:23:34 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@137813539 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:23:34 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:23:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:24:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:24:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:24:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:24:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:24:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4ea8cc76 MDC:[traceId=, spanId=]
2025-06-06 14:24:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:24:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@116891a7 MDC:[traceId=, spanId=]
2025-06-06 14:24:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:24:34 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:24:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:24:34 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:24:34 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@571995491 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:24:34 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:24:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:25:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:25:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:25:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:25:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:25:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1105de9b MDC:[traceId=, spanId=]
2025-06-06 14:25:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:25:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@24cd100d MDC:[traceId=, spanId=]
2025-06-06 14:25:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:25:34 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:25:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:25:34 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:25:34 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@318194729 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:25:34 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:25:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:26:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:26:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:26:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:26:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:26:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3dade42a MDC:[traceId=, spanId=]
2025-06-06 14:26:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:26:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@20385b39 MDC:[traceId=, spanId=]
2025-06-06 14:26:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:26:34 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:26:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:26:34 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:26:34 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@50492361 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:26:34 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:26:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:27:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:27:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:27:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:27:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:27:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@27c5eca5 MDC:[traceId=, spanId=]
2025-06-06 14:27:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:27:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@28d5ecca MDC:[traceId=, spanId=]
2025-06-06 14:27:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:27:34 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:27:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:27:34 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:27:34 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1495085499 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:27:34 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:27:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:28:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:28:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:28:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:28:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:28:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@11b30147 MDC:[traceId=, spanId=]
2025-06-06 14:28:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:28:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6ff3120f MDC:[traceId=, spanId=]
2025-06-06 14:28:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:28:34 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:28:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:28:34 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:28:34 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1695253475 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:28:34 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:28:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:29:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:29:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:29:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:29:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:29:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7cf58d59 MDC:[traceId=, spanId=]
2025-06-06 14:29:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:29:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5b0277ca MDC:[traceId=, spanId=]
2025-06-06 14:29:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:29:34 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:29:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:29:34 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:29:34 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@314296599 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:29:34 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:29:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:30:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:30:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:30:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:30:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:30:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@355dfbd5 MDC:[traceId=, spanId=]
2025-06-06 14:30:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:30:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2cd0e8d4 MDC:[traceId=, spanId=]
2025-06-06 14:30:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:30:34 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:30:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:30:34 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:30:34 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1877121754 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:30:34 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:30:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:31:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:31:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:31:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:31:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:31:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@26aa0049 MDC:[traceId=, spanId=]
2025-06-06 14:31:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:31:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@79c3a296 MDC:[traceId=, spanId=]
2025-06-06 14:31:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:31:34 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:31:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:31:34 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:31:34 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1831280994 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:31:34 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:31:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:32:05 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:32:05 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:32:05 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:32:06 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:32:06 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:32:06 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:32:06 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@76f2cf01 MDC:[traceId=, spanId=]
2025-06-06 14:32:06 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:32:13 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:32:13 [http-nio-8088-exec-8] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:32:13 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:32:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:32:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:32:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:32:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:32:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2151cbe3 MDC:[traceId=, spanId=]
2025-06-06 14:32:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:32:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1ffba80e MDC:[traceId=, spanId=]
2025-06-06 14:32:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:32:34 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:32:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:32:34 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:32:34 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@2132371171 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:32:34 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:32:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:32:40 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:32:40 [http-nio-8088-exec-9] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:32:40 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:32:40 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@5703ff83 MDC:[traceId=, spanId=]
2025-06-06 14:32:40 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:33:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:33:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:33:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:33:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:33:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5d519d12 MDC:[traceId=, spanId=]
2025-06-06 14:33:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:33:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@111f3a51 MDC:[traceId=, spanId=]
2025-06-06 14:33:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:33:34 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:33:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:33:34 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:33:34 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1556689027 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:33:34 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:33:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:33:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:33:44 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:33:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:33:45 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:33:45 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:33:45 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:33:45 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@699fb3fe MDC:[traceId=, spanId=]
2025-06-06 14:33:45 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:34:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:34:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:34:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:34:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:34:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@61477b42 MDC:[traceId=, spanId=]
2025-06-06 14:34:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:34:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@361cfea3 MDC:[traceId=, spanId=]
2025-06-06 14:34:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:34:34 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:34:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:34:34 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:34:34 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1129892189 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:34:34 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:34:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:35:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:35:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:35:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:35:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:35:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5c265475 MDC:[traceId=, spanId=]
2025-06-06 14:35:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:35:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@367f17ae MDC:[traceId=, spanId=]
2025-06-06 14:35:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:35:34 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:35:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:35:34 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:35:34 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@932425105 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:35:34 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:35:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:36:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:36:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:36:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:36:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:36:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6824b2e2 MDC:[traceId=, spanId=]
2025-06-06 14:36:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:36:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4a0f79d2 MDC:[traceId=, spanId=]
2025-06-06 14:36:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:36:34 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:36:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:36:34 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:36:34 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1750686813 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:36:34 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:36:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:37:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:37:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:37:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:37:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:37:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@171013e9 MDC:[traceId=, spanId=]
2025-06-06 14:37:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:37:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6e94f7be MDC:[traceId=, spanId=]
2025-06-06 14:37:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:37:34 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:37:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:37:34 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:37:34 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1241616147 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:37:34 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:37:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:38:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:38:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:38:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:38:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:38:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@332e6095 MDC:[traceId=, spanId=]
2025-06-06 14:38:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:38:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5f4969b7 MDC:[traceId=, spanId=]
2025-06-06 14:38:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:38:34 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:38:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:38:34 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:38:34 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@249464833 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:38:34 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:38:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:39:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:39:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:39:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:39:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:39:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@973001b MDC:[traceId=, spanId=]
2025-06-06 14:39:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:39:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7dc0bae5 MDC:[traceId=, spanId=]
2025-06-06 14:39:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:39:34 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:39:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:39:34 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:39:34 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1155368750 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:39:34 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:39:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:40:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:40:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:40:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:40:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:40:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5108db8f MDC:[traceId=, spanId=]
2025-06-06 14:40:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:40:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@218622d6 MDC:[traceId=, spanId=]
2025-06-06 14:40:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:40:34 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:40:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:40:34 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:40:34 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@159557837 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:40:34 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:40:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:41:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:41:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:41:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:41:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:41:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@40f745a5 MDC:[traceId=, spanId=]
2025-06-06 14:41:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:41:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2b0ff69b MDC:[traceId=, spanId=]
2025-06-06 14:41:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:41:34 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:41:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:41:34 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:41:34 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@347123870 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:41:34 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:41:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:42:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:42:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:42:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:42:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:42:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5c5effb2 MDC:[traceId=, spanId=]
2025-06-06 14:42:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:42:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6b7d76b9 MDC:[traceId=, spanId=]
2025-06-06 14:42:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:42:34 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:42:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:42:34 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:42:34 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@23063967 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:42:34 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:42:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:43:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:43:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:43:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:43:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:43:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@306ee86d MDC:[traceId=, spanId=]
2025-06-06 14:43:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:43:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4216bca7 MDC:[traceId=, spanId=]
2025-06-06 14:43:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:43:34 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:43:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:43:34 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:43:34 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@2003975280 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:43:34 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:43:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:44:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:44:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:44:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:44:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:44:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@256f19a7 MDC:[traceId=, spanId=]
2025-06-06 14:44:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:44:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@35cd503f MDC:[traceId=, spanId=]
2025-06-06 14:44:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:44:34 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:44:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:44:34 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:44:34 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1911804331 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:44:34 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:44:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:45:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:45:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:45:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:45:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:45:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@63500d22 MDC:[traceId=, spanId=]
2025-06-06 14:45:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:45:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@48f7fab8 MDC:[traceId=, spanId=]
2025-06-06 14:45:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:45:34 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:45:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:45:34 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:45:34 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@893443408 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:45:34 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:45:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:46:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:46:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:46:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:46:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:46:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@18b77501 MDC:[traceId=, spanId=]
2025-06-06 14:46:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:46:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@33ebc771 MDC:[traceId=, spanId=]
2025-06-06 14:46:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:46:34 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:46:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:46:34 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:46:34 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@953918797 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:46:34 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:46:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:47:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:47:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:47:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:47:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:47:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@30746105 MDC:[traceId=, spanId=]
2025-06-06 14:47:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-06 14:47:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6b20ee54 MDC:[traceId=, spanId=]
2025-06-06 14:47:34 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:47:34 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:47:34 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:47:34 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:47:34 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1363525733 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:47:34 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:47:34 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:48:06 [SpringContextShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-06-06 14:48:06 [SpringContextShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@84f2ea8] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@18f68b9a] MDC:[traceId=, spanId=]
2025-06-06 14:48:06 [SpringContextShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-06 14:48:06 [SpringContextShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-06 14:48:38 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-06-06 14:48:38 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-06 14:48:38 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-06 14:48:38 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-06 14:48:38 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-06 14:48:38 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-06 14:48:38 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-06 14:48:38 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-06 14:48:38 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-06 14:48:38 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-06 14:48:38 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-06 14:48:38 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-06 14:48:38 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-06 14:48:38 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@75e44db0
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/java-banking-phase2/backend/transaction-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.transaction_service.entity.Transaction]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5986dc02 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5986dc02 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5986dc02 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@63d4b45a MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@63d4b45a MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@62fe971a MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@62fe971a MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3c535ec7 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3c535ec7 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@535ae383 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@535ae383 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@535ae383 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@15eaebd6 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@15eaebd6 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@15eaebd6 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@33ae836 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@33ae836 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@25b93bf0 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@21fb923f MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@21fb923f MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@630d698d MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@37225682 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5b289d2d MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5b289d2d MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5b289d2d MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@263f861d MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@263f861d MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@263f861d MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2ef6d256 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2ef6d256 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@2ef6d256 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@bc5074c MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@bc5074c MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@bc5074c MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@149b22ec MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@149b22ec MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@149b22ec MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4ece410c MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4ece410c MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@56324ee1 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@56324ee1 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@756ecc0c MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@756ecc0c MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@756ecc0c MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@382f0c0f MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@4d5fc27 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4d5fc27 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@40d4ef1a MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@43d955a0 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@43d955a0 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@43d955a0 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@35676a0 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@28498629 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4f821005 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@46ff3800 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@46ff3800 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@76aca509 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@76aca509 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@12b00d3b MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4ded2550 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@726d3bd5 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@617a5c7c MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@73b14cbd MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@57d2303e MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4c7a1a82 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4c7a1a82 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7fd036cd MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7fd036cd MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@67d492e MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@67d492e MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@40e8da1f MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@40e8da1f MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5cda668a MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5cda668a MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@22425582 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4e9a4cdd MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@48245f33 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@48245f33 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@47459e8b MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@771b3da4 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6b7b7b3e MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@14c6ca5 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@14c6ca5 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6a960bc1 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@444efd2a MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@745ccc16 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@745ccc16 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1697af7c MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1697af7c MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4c05766c MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4c05766c MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4c05766c MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7f11656b MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7f11656b MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7f11656b MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6dbf2ae3 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@46789467 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@21292cd2 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@21292cd2 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@55e72fa1 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@55e72fa1 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@55e72fa1 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@411befcc MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@43c28024 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@2be56b32 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2be56b32 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@4793c3c8 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4793c3c8 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4793c3c8 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@59e82179 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@59e82179 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@efc49c0 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@efc49c0 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@ec01fd6 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@ec01fd6 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@57941045 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@57941045 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@4f6f0027 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4f6f0027 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@23b1e243 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2d81674c MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@67f441bb MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@67f441bb MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2bdf3600 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@51b8cb82 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1b259da6 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6b024d18 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@39bf094e MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2e4c3120 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@19b351e2 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6020b541 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@21142572 MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@c780ccb] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@c780ccb) [was null] MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@20dd95e5] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-06 14:48:49 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1a63354e] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@21c3f9f3] MDC:[traceId=, spanId=]
2025-06-06 14:48:50 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@c780ccb] MDC:[traceId=, spanId=]
2025-06-06 14:48:50 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@c780ccb] MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@35b6a42e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5cd66685) MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5ee90d6c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@579b304e) MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@578c6947) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3881cf7d) MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2e15376c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@20027ba0) MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@14f0f8b6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@22bc3772) MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2515ca1e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@16796a67) MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@55f0556) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@469bb528) MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d55c2df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1022a340) MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6d2a71a7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7683abdf) MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@3aa34e7d MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@2bdf3600` MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2c007c4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3bd8871d] MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Transaction MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.example.transaction_service.entity.Transaction on table tbl_transaction MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:id] MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.id MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...) MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property amount with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:amount] MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for amount MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.amount MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property amount MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property bankType with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:bankType] MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for bankType MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.bank_type MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property bankType MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:createdAt] MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for createdAt MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.created_at MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property createdAt MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property createdBy with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:createdBy] MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for createdBy MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.created_by MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property createdBy MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property currency with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:currency] MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for currency MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.currency MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property currency MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property description with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:description] MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for description MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.description MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property description MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankCode with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankCode] MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankCode MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_code MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankCode MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankName with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankName] MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankName MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_name MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankName MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property failedReason with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:failedReason] MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for failedReason MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.failed_reason MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property failedReason MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:fromAccountNumber] MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.from_account_number MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property fromAccountNumber MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property referenceCode with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:referenceCode] MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for referenceCode MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.reference_code MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property referenceCode MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property status with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:status] MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for status MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.status MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property status MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property timestamp with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:timestamp] MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for timestamp MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.timestamp MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property timestamp MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property toAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:toAccountNumber] MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for toAccountNumber MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.to_account_number MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property toAccountNumber MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property type with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:type] MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for type MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.type MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property type MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:updatedAt] MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for updatedAt MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.updated_at MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property updatedAt MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property updatedBy with lazy=false MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:updatedBy] MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for updatedBy MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.updated_by MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property updatedBy MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.example.transaction_service.entity MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding touchForUpdate as PreUpdate callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding touchForCreate as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bankType MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for createdAt MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for createdBy MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for currency MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for description MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankCode MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankName MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for failedReason MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for referenceCode MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for timestamp MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for toAccountNumber MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for type MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for updatedAt MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for updatedBy MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_transaction] MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {jdk.tls.rejectClientInitiatedRenegotiation=true, java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@c3d7577, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\java-banking-phase2\backend\transaction-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.11\spring-boot-starter-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.11\spring-boot-starter-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.11\spring-boot-starter-logging-3.3.11.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.11\spring-boot-actuator-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.11\spring-boot-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.13\micrometer-observation-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.13\micrometer-commons-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.13\micrometer-jakarta9-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-core\1.13.13\micrometer-core-1.13.13.jar;C:\Users\A715-42G\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\A715-42G\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.11\spring-boot-starter-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.11\spring-boot-starter-aop-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.11\spring-boot-starter-jdbc-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.19\spring-jdbc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.11\spring-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.11\spring-data-commons-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.19\spring-orm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.19\spring-context-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.19\spring-tx-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.19\spring-beans-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.19\spring-aspects-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.11\spring-boot-starter-web-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.11\spring-boot-starter-json-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.11\spring-boot-starter-tomcat-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.40\tomcat-embed-core-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.40\tomcat-embed-websocket-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.19\spring-web-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.19\spring-webmvc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.19\spring-expression-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-devtools\3.3.11\spring-boot-devtools-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.11\spring-boot-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.11\spring-boot-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.19\spring-core-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.19\spring-jcl-6.1.19.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.11\spring-boot-starter-validation-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.0.2\springdoc-openapi-starter-webmvc-ui-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.0.2\springdoc-openapi-starter-webmvc-api-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.0.2\springdoc-openapi-starter-common-2.0.2.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.7\swagger-core-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.7\swagger-annotations-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.7\swagger-models-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\4.15.5\swagger-ui-4.15.5.jar;C:\Users\A715-42G\.m2\repository\org\webjars\webjars-locator-core\0.58\webjars-locator-core-0.58.jar;C:\Users\A715-42G\.m2\repository\io\github\classgraph\classgraph\4.8.149\classgraph-4.8.149.jar;D:\LT_Web\SpringBoot\java-banking-phase2\backend\common-service\target\classes;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-starter\3.3.2\dubbo-spring-boot-starter-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure\3.3.2\dubbo-spring-boot-autoconfigure-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure-compatible\3.3.2\dubbo-spring-boot-autoconfigure-compatible-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo\3.3.2\dubbo-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\javassist\javassist\3.30.2-GA\javassist-3.30.2-GA.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-all\4.1.119.Final\netty-all-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-dns\4.1.119.Final\netty-codec-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-haproxy\4.1.119.Final\netty-codec-haproxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http\4.1.119.Final\netty-codec-http-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http2\4.1.119.Final\netty-codec-http2-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-memcache\4.1.119.Final\netty-codec-memcache-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-mqtt\4.1.119.Final\netty-codec-mqtt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-redis\4.1.119.Final\netty-codec-redis-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-smtp\4.1.119.Final\netty-codec-smtp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-socks\4.1.119.Final\netty-codec-socks-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-stomp\4.1.119.Final\netty-codec-stomp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-xml\4.1.119.Final\netty-codec-xml-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-proxy\4.1.119.Final\netty-handler-proxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-ssl-ocsp\4.1.119.Final\netty-handler-ssl-ocsp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns\4.1.119.Final\netty-resolver-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-rxtx\4.1.119.Final\netty-transport-rxtx-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-sctp\4.1.119.Final\netty-transport-sctp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-udt\4.1.119.Final\netty-transport-udt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-kqueue\4.1.119.Final\netty-transport-classes-kqueue-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.119.Final\netty-resolver-dns-classes-macos-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-riscv64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\hessian-lite\4.0.3\hessian-lite-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\alibaba\fastjson2\fastjson2\2.0.53\fastjson2-2.0.53.jar;C:\Users\A715-42G\.m2\repository\com\google\protobuf\protobuf-java\3.25.5\protobuf-java-3.25.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-framework\5.1.0\curator-framework-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-client\5.1.0\curator-client-5.1.0.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\guava\27.0.1-jre\guava-27.0.1-jre.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\A715-42G\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\checkerframework\checker-qual\2.5.2\checker-qual-2.5.2.jar;C:\Users\A715-42G\.m2\repository\com\google\errorprone\error_prone_annotations\2.2.0\error_prone_annotations-2.2.0.jar;C:\Users\A715-42G\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\A715-42G\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.17\animal-sniffer-annotations-1.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper\3.7.1\zookeeper-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper-jute\3.7.1\zookeeper-jute-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\yetus\audience-annotations\0.12.0\audience-annotations-0.12.0.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler\4.1.119.Final\netty-handler-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-common\4.1.119.Final\netty-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver\4.1.119.Final\netty-resolver-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-buffer\4.1.119.Final\netty-buffer-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport\4.1.119.Final\netty-transport-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.119.Final\netty-transport-native-unix-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec\4.1.119.Final\netty-codec-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.119.Final\netty-transport-classes-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-recipes\5.5.0\curator-recipes-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-x-discovery\5.5.0\curator-x-discovery-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-vault-config\4.1.1\spring-cloud-starter-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.3.1\httpclient5-5.3.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.5\httpcore5-h2-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.5\httpcore5-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter\4.1.2\spring-cloud-starter-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-context\4.1.2\spring-cloud-context-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-commons\4.1.2\spring-cloud-commons-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-rsa\1.1.2\spring-security-rsa-1.1.2.jar;C:\Users\A715-42G\.m2\repository\org\bouncycastle\bcprov-jdk18on\1.77\bcprov-jdk18on-1.77.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-vault-config\4.1.1\spring-cloud-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\vault\spring-vault-core\3.1.1\spring-vault-core-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-redis\3.3.11\spring-boot-starter-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\lettuce\lettuce-core\6.3.2.RELEASE\lettuce-core-6.3.2.RELEASE.jar;C:\Users\A715-42G\.m2\repository\io\projectreactor\reactor-core\3.6.16\reactor-core-3.6.16.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-redis\3.3.11\spring-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-keyvalue\3.3.11\spring-data-keyvalue-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-oxm\6.1.19\spring-oxm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context-support\6.1.19\spring-context-support-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream\4.2.1\spring-cloud-stream-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-messaging\6.1.19\spring-messaging-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-core\6.3.9\spring-integration-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-jmx\6.3.9\spring-integration-jmx-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\retry\spring-retry\2.0.11\spring-retry-2.0.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-function-context\4.2.2\spring-cloud-function-context-4.2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-function-core\4.2.2\spring-cloud-function-core-4.2.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-joda\2.17.3\jackson-datatype-joda-2.17.3.jar;C:\Users\A715-42G\.m2\repository\joda-time\joda-time\2.10.14\joda-time-2.10.14.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-stream-kafka\4.2.1\spring-cloud-starter-stream-kafka-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka\4.2.1\spring-cloud-stream-binder-kafka-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka-core\4.2.1\spring-cloud-stream-binder-kafka-core-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-kafka\6.3.9\spring-integration-kafka-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\kafka\spring-kafka\3.2.8\spring-kafka-3.2.8.jar;C:\Users\A715-42G\.m2\repository\org\apache\kafka\kafka-clients\3.7.2\kafka-clients-3.7.2.jar;C:\Users\A715-42G\.m2\repository\com\github\luben\zstd-jni\1.5.6-4\zstd-jni-1.5.6-4.jar;C:\Users\A715-42G\.m2\repository\org\lz4\lz4-java\1.8.0\lz4-java-1.8.0.jar;C:\Users\A715-42G\.m2\repository\org\xerial\snappy\snappy-java\1.1.10.5\snappy-java-1.1.10.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.11\spring-boot-starter-security-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.19\spring-aop-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.9\spring-security-config-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.9\spring-security-web-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-oauth2-resource-server\3.3.11\spring-boot-starter-oauth2-resource-server-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.9\spring-security-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.9\spring-security-crypto-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-resource-server\6.3.9\spring-security-oauth2-resource-server-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-core\6.3.9\spring-security-oauth2-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-jose\6.3.9\spring-security-oauth2-jose-6.3.9.jar;C:\Users\A715-42G\.m2\repository\com\nimbusds\nimbus-jose-jwt\9.37.3\nimbus-jose-jwt-9.37.3.jar;C:\Users\A715-42G\.m2\repository\com\github\stephenc\jcip\jcip-annotations\1.0-1\jcip-annotations-1.0-1.jar;C:\Users\A715-42G\.m2\repository\org\keycloak\keycloak-admin-client\26.0.0\keycloak-admin-client-26.0.0.jar;C:\Users\A715-42G\.m2\repository\org\keycloak\keycloak-client-common-synced\26.0.0\keycloak-client-common-synced-26.0.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\commons-logging-jboss-logging\1.0.0.Final\commons-logging-jboss-logging-1.0.0.Final.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\microprofile\openapi\microprofile-openapi-api\3.1.1\microprofile-openapi-api-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-client\6.2.9.Final\resteasy-client-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-client-api\6.2.9.Final\resteasy-client-api-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-core-spi\6.2.9.Final\resteasy-core-spi-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-core\6.2.9.Final\resteasy-core-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\jandex\2.4.5.Final\jandex-2.4.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\com\ibm\async\asyncutil\0.1.0\asyncutil-0.1.0.jar;C:\Users\A715-42G\.m2\repository\commons-codec\commons-codec\1.16.1\commons-codec-1.16.1.jar;C:\Users\A715-42G\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\3.1.0\jakarta.ws.rs-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-multipart-provider\6.2.9.Final\resteasy-multipart-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\mail\jakarta.mail-api\2.1.3\jakarta.mail-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-mail\2.0.3\angus-mail-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-dom\0.8.11\apache-mime4j-dom-0.8.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-core\0.8.11\apache-mime4j-core-0.8.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-storage\0.8.11\apache-mime4j-storage-0.8.11.jar;C:\Users\A715-42G\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-jackson2-provider\6.2.9.Final\resteasy-jackson2-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-base\2.17.3\jackson-jakarta-rs-base-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-json-provider\2.17.3\jackson-jakarta-rs-json-provider-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-jakarta-xmlbind-annotations\2.17.3\jackson-module-jakarta-xmlbind-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\json-patch\1.13\json-patch-1.13.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\msg-simple\1.2\msg-simple-1.2.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\btf\1.3\btf-1.3.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\jackson-coreutils\2.0\jackson-coreutils-2.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-jaxb-provider\6.2.9.Final\resteasy-jaxb-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\codemodel\4.0.5\codemodel-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-jxc\4.0.5\jaxb-jxc-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-xjc\4.0.5\jaxb-xjc-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\xsom\4.0.5\xsom-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-tools\4.1.2\istack-commons-tools-4.1.2.jar;C:\Users\A715-42G\.m2\repository\com\sun\xml\bind\external\relaxng-datatype\4.0.3\relaxng-datatype-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\sun\xml\bind\external\rngom\4.0.3\rngom-4.0.3.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.example.transaction_service.TransactionServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@3b5d180e, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.12546252808765022892, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\java-banking-phase2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=14016, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.12546252808765022892, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@3cad9768, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\ProgramData\chocolatey\bin;D:\KienLongBank\Vault;D:\GrafanaLabs\grafana\bin;D:\KienLongBank\InfluxData\influxdb-1.8.10-1;D:\Document\Work\Redis;C:\Program Files\Docker\Docker\resources\bin;D:\nodejs\nvm;C:\nvm4w\nodejs;C:\Program Files\nodejs\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\XamPP\php;C:\Program Files\Azure Data Studio\bin;D:\nodejs\nvm;C:\nvm4w\nodejs;C:\Users\A715-42G\AppData\Roaming\npm;D:\Document\cursor\resources\app\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[transaction-service] } MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 14:48:51 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@f445be1] under count; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5487a0b0] under every; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@621d529c] under any; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7b3147e5] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b6aa5e1] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f3b7070] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58fe78ea] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2901027f] under log; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@58b45008] under position; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@4e2b0267] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@303018a8] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@ad2e67e] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@23d137a9] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@405fb193] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@cf2e259] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@7ff6ca0a] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@2df4493] under str; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@75388cce] under format; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@1b11a5a1] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@2d4bf742] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1d122746] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@589740f5] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@21f6b1b5] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@47e160be] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4bc55713] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@29b72676] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3dd851ec] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@71703279] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@f43eedd] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2901027f MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@57286a7f] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@510a3583] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e0bb2d4] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@58b45008 MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@31fb590a] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ddbae1b] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@468c7316] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@517009e1] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a2839cc] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5ae3e3e4] under format; prior registration was org.hibernate.dialect.function.FormatFunction@75388cce MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@4bc55713 MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@29b72676 MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7f523f6d] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58fe78ea MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ebc1e67] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5521a425] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@688691b7] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.example.transaction_service.entity.Transaction]: private accessor [amount] MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-06-06 14:48:52 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.example.transaction_service.entity.Transaction) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-06-06 14:48:53 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:48:53 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction)] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:48:53 [restartedMain] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction.updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:48:53 [restartedMain] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:48:53 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-06 14:48:53 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-06 14:48:53 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_transaction (amount,bank_type,created_at,created_by,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-06 14:48:53 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_transaction set amount=?,bank_type=?,created_at=?,created_by=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=?,updated_at=?,updated_by=? where id=? MDC:[traceId=, spanId=]
2025-06-06 14:48:53 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-06 14:48:53 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-06-06 14:48:53 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2c007c4] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4c7c0c5c] MDC:[traceId=, spanId=]
2025-06-06 14:48:53 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-06-06 14:48:53 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-06-06 14:48:53 [restartedMain] DEBUG org.hibernate.mapping.Table - No alter strings for table : tbl_transaction MDC:[traceId=, spanId=]
2025-06-06 14:48:53 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@cc18fd5 MDC:[traceId=, spanId=]
2025-06-06 14:48:53 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 2f86f80f-5b65-477f-b5ae-3e688ab70971 (<unnamed>) MDC:[traceId=, spanId=]
2025-06-06 14:48:53 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-06-06 14:48:53 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-06-06 14:48:53 [restartedMain] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-06-06 14:48:54 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-06 14:48:54 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-06 14:48:54 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-06 14:48:54 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-06 14:48:56 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-06 14:48:56 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-06-06 14:48:56 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-06-06 14:48:56 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-06 14:48:56 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-06-06 14:48:56 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-06 14:48:56 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-06 14:48:56 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-06 14:48:56 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-06 14:48:56 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-06 14:48:56 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-06 14:48:56 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-06 14:48:56 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-06 14:48:56 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-06 14:48:56 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-06 14:48:56 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-06 14:48:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:48:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:48:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:48:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:48:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4777982 MDC:[traceId=, spanId=]
2025-06-06 14:48:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 14:48:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@720ef3c6 MDC:[traceId=, spanId=]
2025-06-06 14:48:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:48:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:48:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:48:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:48:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1580566631 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:48:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:48:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:49:07 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.query.plan.cache - Creating and caching NativeQuery ParameterInterpretation - ParameterInterpretationImpl (SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
) : {
    
} MDC:[traceId=, spanId=]
2025-06-06 14:49:07 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:49:07 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:49:07 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:49:07 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@7408b80d MDC:[traceId=, spanId=]
2025-06-06 14:49:07 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:49:27 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:49:27 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:49:27 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:49:34 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:49:34 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:49:34 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:49:34 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@2d4fcaff MDC:[traceId=, spanId=]
2025-06-06 14:49:34 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:49:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:49:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:49:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:49:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:49:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2406e581 MDC:[traceId=, spanId=]
2025-06-06 14:49:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 14:49:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3e3cc5d5 MDC:[traceId=, spanId=]
2025-06-06 14:49:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:49:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:49:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:49:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:49:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1807505993 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:49:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:49:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:50:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:50:10 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:50:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:50:13 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:50:13 [http-nio-8088-exec-6] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:50:13 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:50:13 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@2b5eb9f5 MDC:[traceId=, spanId=]
2025-06-06 14:50:13 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:50:53 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:50:53 [http-nio-8088-exec-8] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:50:53 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:50:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:50:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:50:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:50:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:50:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1eea78e1 MDC:[traceId=, spanId=]
2025-06-06 14:50:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 14:50:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@42e14067 MDC:[traceId=, spanId=]
2025-06-06 14:50:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:50:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:50:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:50:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:50:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@69143872 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:50:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:50:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:51:05 [http-nio-8088-exec-9] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:51:06 [http-nio-8088-exec-9] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:51:08 [http-nio-8088-exec-9] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-06 14:51:08 [http-nio-8088-exec-9] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-06-06 14:51:08 [http-nio-8088-exec-9] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-06-06 14:51:08 [http-nio-8088-exec-9] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-06 14:51:08 [http-nio-8088-exec-9] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-06-06 14:51:08 [http-nio-8088-exec-9] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-06 14:51:08 [http-nio-8088-exec-9] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-06 14:51:08 [http-nio-8088-exec-9] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-06 14:51:08 [http-nio-8088-exec-9] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-06 14:51:08 [http-nio-8088-exec-9] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-06 14:51:08 [http-nio-8088-exec-9] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-06 14:51:08 [http-nio-8088-exec-9] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-06 14:51:08 [http-nio-8088-exec-9] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-06 14:51:08 [http-nio-8088-exec-9] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-06 14:51:08 [http-nio-8088-exec-9] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-06 14:51:08 [http-nio-8088-exec-9] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-06 14:51:09 [http-nio-8088-exec-9] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-06 14:51:09 [http-nio-8088-exec-9] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-06-06 14:51:09 [http-nio-8088-exec-9] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-06-06 14:51:09 [http-nio-8088-exec-9] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-06 14:51:09 [http-nio-8088-exec-9] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-06-06 14:51:09 [http-nio-8088-exec-9] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-06 14:51:09 [http-nio-8088-exec-9] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-06 14:51:09 [http-nio-8088-exec-9] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-06 14:51:09 [http-nio-8088-exec-9] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-06 14:51:09 [http-nio-8088-exec-9] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-06 14:51:09 [http-nio-8088-exec-9] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-06 14:51:09 [http-nio-8088-exec-9] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-06 14:51:09 [http-nio-8088-exec-9] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-06 14:51:09 [http-nio-8088-exec-9] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-06 14:51:09 [http-nio-8088-exec-9] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-06 14:51:09 [http-nio-8088-exec-9] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-06 14:51:10 [http-nio-8088-exec-9] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 14:51:10 [http-nio-8088-exec-9] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:51:10 [http-nio-8088-exec-9] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-06 14:51:10 [http-nio-8088-exec-9] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-06 14:51:10 [http-nio-8088-exec-9] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-06 14:51:10 [http-nio-8088-exec-9] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-06 14:51:10 [http-nio-8088-exec-9] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-06 14:51:10 [http-nio-8088-exec-9] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=10000, fromAccountNumber=27072000, updatedBy=test123, bankType=INTERNAL, description=, type=TRANSFER, createdAt=2025-06-06T14:51:10.451896500, destinationBankCode=970452, toAccountNumber=87654321, createdBy=test123, currency=VND, id=0964f226-b8f2-438b-a461-96095a85cef2, referenceCode=TXN-27072000-2025060614510616988dab, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=null, status=PENDING, timestamp=2025-06-06T14:51:06.793483400, updatedAt=2025-06-06T14:51:10.451896500} MDC:[traceId=, spanId=]
2025-06-06 14:51:10 [http-nio-8088-exec-9] DEBUG org.hibernate.SQL - insert into tbl_transaction (amount,bank_type,created_at,created_by,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-06 14:51:49 [http-nio-8088-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:51:49 [http-nio-8088-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:51:49 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:51:49 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:51:49 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6123284b MDC:[traceId=, spanId=]
2025-06-06 14:51:49 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).referenceCode)  MDC:[traceId=, spanId=]
2025-06-06 14:51:49 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:51:49 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:51:49 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:51:49 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@472725234 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:51:49 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.reference_code=? MDC:[traceId=, spanId=]
2025-06-06 14:51:49 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [0964f226-b8f2-438b-a461-96095a85cef2] MDC:[traceId=, spanId=]
2025-06-06 14:51:49 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(2)): 0964f226-b8f2-438b-a461-96095a85cef2 MDC:[traceId=, spanId=]
2025-06-06 14:51:49 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(2)#0964f226-b8f2-438b-a461-96095a85cef2] : 75273250 MDC:[traceId=, spanId=]
2025-06-06 14:51:49 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [10000.00] MDC:[traceId=, spanId=]
2025-06-06 14:51:49 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-06 14:51:49 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T14:51:10.451897] MDC:[traceId=, spanId=]
2025-06-06 14:51:49 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-06 14:51:49 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-06 14:51:49 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-06 14:51:49 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-06 14:51:49 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-06 14:51:49 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-06 14:51:49 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 14:51:49 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-27072000-2025060614510616988dab] MDC:[traceId=, spanId=]
2025-06-06 14:51:49 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [PENDING] MDC:[traceId=, spanId=]
2025-06-06 14:51:49 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T14:51:06.793483] MDC:[traceId=, spanId=]
2025-06-06 14:51:49 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:51:49 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-06 14:51:49 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T14:51:10.451897] MDC:[traceId=, spanId=]
2025-06-06 14:51:49 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-06 14:51:49 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(2)#0964f226-b8f2-438b-a461-96095a85cef2 MDC:[traceId=, spanId=]
2025-06-06 14:51:49 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@62a0e48c MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@513dface MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).referenceCode)  MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@627124951 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.reference_code=? MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [0964f226-b8f2-438b-a461-96095a85cef2] MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(2)): 0964f226-b8f2-438b-a461-96095a85cef2 MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(2)#0964f226-b8f2-438b-a461-96095a85cef2] : 366955624 MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [10000.00] MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T14:51:10.451897] MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-27072000-2025060614510616988dab] MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [PENDING] MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T14:51:06.793483] MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T14:51:10.451897] MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(2)#0964f226-b8f2-438b-a461-96095a85cef2 MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3944eb96 MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=10000.00, fromAccountNumber=27072000, updatedBy=test123, bankType=INTERNAL, description=, type=TRANSFER, createdAt=2025-06-06T14:51:10.451897, destinationBankCode=970452, toAccountNumber=87654321, createdBy=test123, currency=VND, id=0964f226-b8f2-438b-a461-96095a85cef2, referenceCode=TXN-27072000-2025060614510616988dab, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=null, status=COMPLETED, timestamp=2025-06-06T14:51:06.793483, updatedAt=2025-06-06T14:51:51.320463500} MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-10] DEBUG org.hibernate.SQL - update tbl_transaction set amount=?,bank_type=?,created_at=?,created_by=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=?,updated_at=?,updated_by=? where id=? MDC:[traceId=, spanId=]
2025-06-06 14:51:51 [http-nio-8088-exec-7] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 14:51:52 [http-nio-8088-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:51:52 [http-nio-8088-exec-7] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-06 14:51:52 [http-nio-8088-exec-7] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-06 14:51:52 [http-nio-8088-exec-7] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-06 14:51:52 [http-nio-8088-exec-7] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-06 14:51:52 [http-nio-8088-exec-7] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-06 14:51:52 [http-nio-8088-exec-7] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=10000.00, fromAccountNumber=27072000, updatedBy=test123, bankType=INTERNAL, description=, type=TRANSFER, createdAt=2025-06-06T14:51:10.451897, destinationBankCode=970452, toAccountNumber=87654321, createdBy=test123, currency=VND, id=0964f226-b8f2-438b-a461-96095a85cef2, referenceCode=TXN-27072000-2025060614510616988dab, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=Lỗi hệ thống, status=FAILED, timestamp=2025-06-06T14:51:06.793483, updatedAt=2025-06-06T14:51:52.032624400} MDC:[traceId=, spanId=]
2025-06-06 14:51:52 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - update tbl_transaction set amount=?,bank_type=?,created_at=?,created_by=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=?,updated_at=?,updated_by=? where id=? MDC:[traceId=, spanId=]
2025-06-06 14:51:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:51:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:51:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:51:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:51:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@60ff8262 MDC:[traceId=, spanId=]
2025-06-06 14:51:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 14:51:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@10986572 MDC:[traceId=, spanId=]
2025-06-06 14:51:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:51:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:51:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:51:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:51:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@654774623 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:51:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:51:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:52:03 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:52:03 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:52:03 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:52:03 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@685071cc MDC:[traceId=, spanId=]
2025-06-06 14:52:03 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:52:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:52:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:52:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:52:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:52:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5b5e70ed MDC:[traceId=, spanId=]
2025-06-06 14:52:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 14:52:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@608a0675 MDC:[traceId=, spanId=]
2025-06-06 14:52:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:52:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:52:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:52:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:52:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@745144890 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:52:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:52:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:53:52 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:53:52 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:53:52 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:53:52 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@2d4b2e8f MDC:[traceId=, spanId=]
2025-06-06 14:53:52 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:53:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:53:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:53:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:53:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:53:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1c07b22 MDC:[traceId=, spanId=]
2025-06-06 14:53:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 14:53:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@18ea123 MDC:[traceId=, spanId=]
2025-06-06 14:53:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:53:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:53:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:53:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:53:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1377731961 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:53:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:53:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:54:23 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:54:23 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:54:23 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:54:23 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@7bc6b378 MDC:[traceId=, spanId=]
2025-06-06 14:54:23 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:54:25 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:54:25 [http-nio-8088-exec-6] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:54:25 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:54:25 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@6d20b0f6 MDC:[traceId=, spanId=]
2025-06-06 14:54:25 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:54:35 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:54:35 [http-nio-8088-exec-8] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:54:35 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:54:35 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@aade40a MDC:[traceId=, spanId=]
2025-06-06 14:54:35 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:54:43 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:54:43 [http-nio-8088-exec-9] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:54:43 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:54:43 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@6409f96 MDC:[traceId=, spanId=]
2025-06-06 14:54:43 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:54:47 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:54:47 [http-nio-8088-exec-10] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:54:47 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:54:47 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@1c67ddf7 MDC:[traceId=, spanId=]
2025-06-06 14:54:47 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:54:57 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:54:57 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:54:57 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:54:57 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@15e53373 MDC:[traceId=, spanId=]
2025-06-06 14:54:57 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:54:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:54:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:54:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:54:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:54:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3ef26d4 MDC:[traceId=, spanId=]
2025-06-06 14:54:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 14:54:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3e82c509 MDC:[traceId=, spanId=]
2025-06-06 14:54:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:54:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:54:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:54:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:54:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1568451606 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:54:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:54:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:55:00 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:55:00 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:55:00 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:55:00 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@62193be MDC:[traceId=, spanId=]
2025-06-06 14:55:00 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:55:16 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:55:16 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:55:17 [http-nio-8088-exec-2] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 14:55:17 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:55:17 [http-nio-8088-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-06 14:55:17 [http-nio-8088-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-06 14:55:17 [http-nio-8088-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-06 14:55:17 [http-nio-8088-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-06 14:55:17 [http-nio-8088-exec-2] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-06 14:55:17 [http-nio-8088-exec-2] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=222121, fromAccountNumber=12345678, updatedBy=test123, bankType=INTERNAL, description=, type=TRANSFER, createdAt=2025-06-06T14:55:17.181640900, destinationBankCode=970452, toAccountNumber=27072000, createdBy=test123, currency=VND, id=d41a58db-a3d5-46ce-8424-1de5833b2b30, referenceCode=TXN-12345678-2025060614551714b225e2, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=null, status=PENDING, timestamp=2025-06-06T14:55:17.070078700, updatedAt=2025-06-06T14:55:17.181640900} MDC:[traceId=, spanId=]
2025-06-06 14:55:17 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - insert into tbl_transaction (amount,bank_type,created_at,created_by,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2aff0e3c MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).referenceCode)  MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1422703084 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.reference_code=? MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d41a58db-a3d5-46ce-8424-1de5833b2b30] MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(2)): d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(2)#d41a58db-a3d5-46ce-8424-1de5833b2b30] : 1484873702 MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [222121.00] MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T14:55:17.181641] MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-2025060614551714b225e2] MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [PENDING] MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T14:55:17.070079] MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T14:55:17.181641] MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(2)#d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@69338ec3 MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=222121.00, fromAccountNumber=12345678, updatedBy=test123, bankType=INTERNAL, description=, type=TRANSFER, createdAt=2025-06-06T14:55:17.181641, destinationBankCode=970452, toAccountNumber=27072000, createdBy=test123, currency=VND, id=d41a58db-a3d5-46ce-8424-1de5833b2b30, referenceCode=TXN-12345678-2025060614551714b225e2, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=null, status=COMPLETED, timestamp=2025-06-06T14:55:17.070079, updatedAt=2025-06-06T14:55:27.673404600} MDC:[traceId=, spanId=]
2025-06-06 14:55:27 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - update tbl_transaction set amount=?,bank_type=?,created_at=?,created_by=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=?,updated_at=?,updated_by=? where id=? MDC:[traceId=, spanId=]
2025-06-06 14:55:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:55:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:55:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:55:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:55:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@925437f MDC:[traceId=, spanId=]
2025-06-06 14:55:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 14:55:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@667e642a MDC:[traceId=, spanId=]
2025-06-06 14:55:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:55:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:55:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:55:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:55:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@352082018 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:55:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:55:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:56:34 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:56:34 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:56:34 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:56:34 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@4eb4df59 MDC:[traceId=, spanId=]
2025-06-06 14:56:34 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 14:56:34 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@4eb4df59 MDC:[traceId=, spanId=]
2025-06-06 14:56:34 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:56:38 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:56:38 [http-nio-8088-exec-6] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:56:38 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:56:38 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@53c1c073 MDC:[traceId=, spanId=]
2025-06-06 14:56:38 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:56:43 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:56:43 [http-nio-8088-exec-8] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:56:43 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:56:43 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@49265745 MDC:[traceId=, spanId=]
2025-06-06 14:56:43 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 14:56:43 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@49265745 MDC:[traceId=, spanId=]
2025-06-06 14:56:43 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:56:47 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:56:47 [http-nio-8088-exec-9] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 14:56:47 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 14:56:47 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@7cf779d9 MDC:[traceId=, spanId=]
2025-06-06 14:56:47 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 14:56:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:56:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:56:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:56:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:56:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4c7e9e6e MDC:[traceId=, spanId=]
2025-06-06 14:56:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 14:56:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@72e658fa MDC:[traceId=, spanId=]
2025-06-06 14:56:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:56:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:56:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:56:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:56:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1485556387 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:56:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:56:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:57:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:57:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:57:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:57:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:57:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@370421e2 MDC:[traceId=, spanId=]
2025-06-06 14:57:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 14:57:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@126eab32 MDC:[traceId=, spanId=]
2025-06-06 14:57:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:57:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:57:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:57:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:57:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1521585904 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:57:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:57:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:58:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:58:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:58:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:58:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:58:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@562f06f1 MDC:[traceId=, spanId=]
2025-06-06 14:58:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 14:58:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2e3239c3 MDC:[traceId=, spanId=]
2025-06-06 14:58:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:58:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:58:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:58:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:58:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1566440509 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:58:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:58:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 14:59:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 14:59:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 14:59:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 14:59:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 14:59:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@8cd923a MDC:[traceId=, spanId=]
2025-06-06 14:59:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 14:59:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@29aa2f91 MDC:[traceId=, spanId=]
2025-06-06 14:59:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 14:59:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 14:59:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 14:59:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 14:59:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@798031643 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 14:59:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 14:59:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:00:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:00:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:00:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:00:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:00:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@55652f1a MDC:[traceId=, spanId=]
2025-06-06 15:00:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:00:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@46760aa7 MDC:[traceId=, spanId=]
2025-06-06 15:00:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:00:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:00:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:00:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:00:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@901402055 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:00:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:00:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:01:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:01:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:01:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:01:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:01:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@44841360 MDC:[traceId=, spanId=]
2025-06-06 15:01:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:01:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@79addc9f MDC:[traceId=, spanId=]
2025-06-06 15:01:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:01:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:01:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:01:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:01:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@208922294 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:01:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:01:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:02:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:02:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:02:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:02:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:02:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@129d4072 MDC:[traceId=, spanId=]
2025-06-06 15:02:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:02:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3084844d MDC:[traceId=, spanId=]
2025-06-06 15:02:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:02:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:02:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:02:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:02:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1655715565 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:02:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:02:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:03:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:03:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:03:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:03:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:03:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5b98450b MDC:[traceId=, spanId=]
2025-06-06 15:03:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:03:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@abe4cee MDC:[traceId=, spanId=]
2025-06-06 15:03:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:03:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:03:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:03:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:03:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@381159394 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:03:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:03:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:04:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:04:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:04:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:04:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:04:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@47dd05fa MDC:[traceId=, spanId=]
2025-06-06 15:04:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:04:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5f75fa1f MDC:[traceId=, spanId=]
2025-06-06 15:04:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:04:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:04:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:04:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:04:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1468752036 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:04:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:04:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:05:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:05:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:05:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:05:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:05:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4be7bf10 MDC:[traceId=, spanId=]
2025-06-06 15:05:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:05:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@301b885b MDC:[traceId=, spanId=]
2025-06-06 15:05:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:05:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:05:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:05:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:05:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1401285424 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:05:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:05:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:06:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:06:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:06:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:06:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:06:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7326054e MDC:[traceId=, spanId=]
2025-06-06 15:06:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:06:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@716ac46 MDC:[traceId=, spanId=]
2025-06-06 15:06:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:06:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:06:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:06:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:06:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2048433547 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:06:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:06:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:07:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:07:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:07:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:07:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:07:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@a885827 MDC:[traceId=, spanId=]
2025-06-06 15:07:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:07:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@419f2ad2 MDC:[traceId=, spanId=]
2025-06-06 15:07:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:07:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:07:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:07:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:07:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1055238646 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:07:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:07:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:08:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:08:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:08:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:08:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:08:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6ac6f87e MDC:[traceId=, spanId=]
2025-06-06 15:08:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:08:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@c330bdc MDC:[traceId=, spanId=]
2025-06-06 15:08:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:08:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:08:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:08:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:08:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1448681022 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:08:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:08:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:09:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:09:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:09:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:09:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:09:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@46f6b0f1 MDC:[traceId=, spanId=]
2025-06-06 15:09:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:09:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@f2ed55f MDC:[traceId=, spanId=]
2025-06-06 15:09:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:09:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:09:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:09:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:09:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1704613459 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:09:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:09:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:10:24 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:10:24 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 15:10:24 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 15:10:24 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@3b587310 MDC:[traceId=, spanId=]
2025-06-06 15:10:24 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 15:10:24 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@3b587310 MDC:[traceId=, spanId=]
2025-06-06 15:10:24 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 15:10:34 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:10:34 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:10:34 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - rolling back MDC:[traceId=, spanId=]
2025-06-06 15:10:38 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:10:38 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:10:39 [http-nio-8088-exec-2] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 15:10:39 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:10:39 [http-nio-8088-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-06 15:10:39 [http-nio-8088-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-06 15:10:39 [http-nio-8088-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-06 15:10:39 [http-nio-8088-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-06 15:10:39 [http-nio-8088-exec-2] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-06 15:10:39 [http-nio-8088-exec-2] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=111212, fromAccountNumber=12345678, updatedBy=test123, bankType=INTERNAL, description=, type=TRANSFER, createdAt=2025-06-06T15:10:39.311457500, destinationBankCode=970452, toAccountNumber=27072000, createdBy=test123, currency=VND, id=147c25ce-f4bb-4e62-a3db-0fe7e61b16da, referenceCode=TXN-12345678-20250606151039ee20157d, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=null, status=PENDING, timestamp=2025-06-06T15:10:39.081808600, updatedAt=2025-06-06T15:10:39.311457500} MDC:[traceId=, spanId=]
2025-06-06 15:10:39 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - insert into tbl_transaction (amount,bank_type,created_at,created_by,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-06 15:10:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:10:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:10:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:10:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:10:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1eed7b52 MDC:[traceId=, spanId=]
2025-06-06 15:10:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:10:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@54e84804 MDC:[traceId=, spanId=]
2025-06-06 15:10:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:10:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:10:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:10:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:10:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@404839874 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:10:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:10:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:11:57 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:11:57 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 15:11:57 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 15:11:57 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@6eaff14a MDC:[traceId=, spanId=]
2025-06-06 15:11:57 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 15:11:57 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@6eaff14a MDC:[traceId=, spanId=]
2025-06-06 15:11:57 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 15:11:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:11:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:11:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:11:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:11:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@eb50ee MDC:[traceId=, spanId=]
2025-06-06 15:11:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:11:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3b31ec3e MDC:[traceId=, spanId=]
2025-06-06 15:11:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:11:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:11:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:11:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:11:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1406123433 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:11:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:11:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:12:09 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:12:09 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 15:12:09 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 15:12:09 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@45babbaa MDC:[traceId=, spanId=]
2025-06-06 15:12:09 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 15:12:09 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@45babbaa MDC:[traceId=, spanId=]
2025-06-06 15:12:09 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 15:12:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:12:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:12:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:12:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:12:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7bf1f51d MDC:[traceId=, spanId=]
2025-06-06 15:12:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:12:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5167748 MDC:[traceId=, spanId=]
2025-06-06 15:12:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:12:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:12:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:12:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:12:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@966859001 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:12:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:12:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@54d61013 MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@67fc850e MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@180954245 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [147c25ce-f4bb-4e62-a3db-0fe7e61b16da] MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(4)): 147c25ce-f4bb-4e62-a3db-0fe7e61b16da MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(4)#147c25ce-f4bb-4e62-a3db-0fe7e61b16da] : 1925876835 MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [111212.00] MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T15:10:39.311458] MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250606151039ee20157d] MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [PENDING] MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T15:10:39.081809] MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T15:10:39.311458] MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(4)#147c25ce-f4bb-4e62-a3db-0fe7e61b16da MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@316463b3 MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=111212.00, fromAccountNumber=12345678, updatedBy=test123, bankType=INTERNAL, description=, type=TRANSFER, createdAt=2025-06-06T15:10:39.311458, destinationBankCode=970452, toAccountNumber=27072000, createdBy=test123, currency=VND, id=147c25ce-f4bb-4e62-a3db-0fe7e61b16da, referenceCode=TXN-12345678-20250606151039ee20157d, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=Quá thời gian cho phép của giao dịch, status=FAILED, timestamp=2025-06-06T15:10:39.081809, updatedAt=2025-06-06T15:13:58.883445600} MDC:[traceId=, spanId=]
2025-06-06 15:13:58 [scheduling-1] DEBUG org.hibernate.SQL - update tbl_transaction set amount=?,bank_type=?,created_at=?,created_by=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=?,updated_at=?,updated_by=? where id=? MDC:[traceId=, spanId=]
2025-06-06 15:14:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:14:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:14:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:14:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:14:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3c3ad5dc MDC:[traceId=, spanId=]
2025-06-06 15:14:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:14:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4536aa9c MDC:[traceId=, spanId=]
2025-06-06 15:14:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:14:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:14:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:14:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:14:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1984074939 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:14:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:14:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:15:50 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:15:50 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:15:50 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@22d81d9 MDC:[traceId=, spanId=]
2025-06-06 15:15:50 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).referenceCode)  MDC:[traceId=, spanId=]
2025-06-06 15:15:50 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:15:50 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:15:50 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:15:50 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1843362503 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:15:50 [http-nio-8088-exec-8] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.reference_code=? MDC:[traceId=, spanId=]
2025-06-06 15:15:56 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:15:56 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:15:56 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@20e2f8dc MDC:[traceId=, spanId=]
2025-06-06 15:15:56 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).referenceCode)  MDC:[traceId=, spanId=]
2025-06-06 15:15:56 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:15:56 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:15:56 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:15:56 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@642590089 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:15:56 [http-nio-8088-exec-9] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.reference_code=? MDC:[traceId=, spanId=]
2025-06-06 15:15:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:15:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:15:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:15:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:15:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@17695746 MDC:[traceId=, spanId=]
2025-06-06 15:15:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:15:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@81ddee1 MDC:[traceId=, spanId=]
2025-06-06 15:15:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:15:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:15:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:15:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:15:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@98627411 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:15:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:15:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:16:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:16:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:16:52 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@bd22f48 MDC:[traceId=, spanId=]
2025-06-06 15:16:52 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).referenceCode)  MDC:[traceId=, spanId=]
2025-06-06 15:16:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:16:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:16:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:16:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1566188700 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:16:52 [http-nio-8088-exec-10] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.reference_code=? MDC:[traceId=, spanId=]
2025-06-06 15:16:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:16:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:16:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:16:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:16:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@63bab9c8 MDC:[traceId=, spanId=]
2025-06-06 15:16:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:16:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@720a5b2b MDC:[traceId=, spanId=]
2025-06-06 15:16:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:16:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:16:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:16:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:16:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1843346787 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:16:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:16:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:17:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:17:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:17:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:17:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:17:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1f6bd24d MDC:[traceId=, spanId=]
2025-06-06 15:17:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:17:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@793e2327 MDC:[traceId=, spanId=]
2025-06-06 15:17:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:17:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:17:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:17:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:17:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@376440389 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:17:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:17:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:18:16 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:18:16 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:18:16 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4fbff5a5 MDC:[traceId=, spanId=]
2025-06-06 15:18:16 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).referenceCode)  MDC:[traceId=, spanId=]
2025-06-06 15:18:16 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:18:16 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:18:16 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:18:16 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@948986707 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:18:16 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.reference_code=? MDC:[traceId=, spanId=]
2025-06-06 15:18:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:18:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:18:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:18:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:18:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5eba7779 MDC:[traceId=, spanId=]
2025-06-06 15:18:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:18:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3eff8765 MDC:[traceId=, spanId=]
2025-06-06 15:18:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:18:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:18:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:18:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:18:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1069393167 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:18:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:18:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:19:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:19:28 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 15:19:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 15:19:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@74e61368 MDC:[traceId=, spanId=]
2025-06-06 15:19:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 15:19:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@74e61368 MDC:[traceId=, spanId=]
2025-06-06 15:19:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 15:19:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:19:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:19:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:19:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:19:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@464c68c8 MDC:[traceId=, spanId=]
2025-06-06 15:19:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:19:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7619bcbd MDC:[traceId=, spanId=]
2025-06-06 15:19:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:19:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:19:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:19:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:19:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1357145742 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:19:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:19:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:20:16 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:20:16 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 15:20:16 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 15:20:16 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@2f1a51c MDC:[traceId=, spanId=]
2025-06-06 15:20:16 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 15:20:16 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@2f1a51c MDC:[traceId=, spanId=]
2025-06-06 15:20:16 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 15:20:20 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:20:20 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 15:20:20 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 15:20:20 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@59368820 MDC:[traceId=, spanId=]
2025-06-06 15:20:20 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 15:20:28 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:20:28 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:20:29 [http-nio-8088-exec-4] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 15:20:29 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:20:29 [http-nio-8088-exec-4] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-06 15:20:29 [http-nio-8088-exec-4] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-06 15:20:29 [http-nio-8088-exec-4] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-06 15:20:29 [http-nio-8088-exec-4] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-06 15:20:29 [http-nio-8088-exec-4] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-06 15:20:29 [http-nio-8088-exec-4] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=23000, fromAccountNumber=27072000, updatedBy=test123, bankType=INTERNAL, description=, type=TRANSFER, createdAt=2025-06-06T15:20:29.117384, destinationBankCode=970452, toAccountNumber=87654321, createdBy=test123, currency=VND, id=11bac8ee-fcba-428f-8b72-640bb9f6c03b, referenceCode=TXN-27072000-20250606152028ab0b2173, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=null, status=PENDING, timestamp=2025-06-06T15:20:28.988216700, updatedAt=2025-06-06T15:20:29.117384} MDC:[traceId=, spanId=]
2025-06-06 15:20:29 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - insert into tbl_transaction (amount,bank_type,created_at,created_by,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-06 15:20:41 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:20:41 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:20:41 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5dc2726a MDC:[traceId=, spanId=]
2025-06-06 15:20:41 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).referenceCode)  MDC:[traceId=, spanId=]
2025-06-06 15:20:41 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:20:41 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:20:41 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:20:41 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@603336109 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:20:41 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.reference_code=? MDC:[traceId=, spanId=]
2025-06-06 15:20:41 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [11bac8ee-fcba-428f-8b72-640bb9f6c03b] MDC:[traceId=, spanId=]
2025-06-06 15:20:41 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(2)): 11bac8ee-fcba-428f-8b72-640bb9f6c03b MDC:[traceId=, spanId=]
2025-06-06 15:20:41 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(2)#11bac8ee-fcba-428f-8b72-640bb9f6c03b] : 1783830832 MDC:[traceId=, spanId=]
2025-06-06 15:20:41 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [23000.00] MDC:[traceId=, spanId=]
2025-06-06 15:20:41 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-06 15:20:41 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T15:20:29.117384] MDC:[traceId=, spanId=]
2025-06-06 15:20:41 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-06 15:20:41 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-06 15:20:41 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-06 15:20:41 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-06 15:20:41 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-06 15:20:41 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-06 15:20:41 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 15:20:41 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-27072000-20250606152028ab0b2173] MDC:[traceId=, spanId=]
2025-06-06 15:20:41 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [PENDING] MDC:[traceId=, spanId=]
2025-06-06 15:20:41 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T15:20:28.988217] MDC:[traceId=, spanId=]
2025-06-06 15:20:41 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 15:20:41 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-06 15:20:41 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T15:20:29.117384] MDC:[traceId=, spanId=]
2025-06-06 15:20:41 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-06 15:20:41 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(2)#11bac8ee-fcba-428f-8b72-640bb9f6c03b MDC:[traceId=, spanId=]
2025-06-06 15:20:41 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@78dada92 MDC:[traceId=, spanId=]
2025-06-06 15:20:52 [http-nio-8088-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:20:52 [http-nio-8088-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:20:52 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:20:52 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:20:52 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@19eab694 MDC:[traceId=, spanId=]
2025-06-06 15:20:52 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).referenceCode)  MDC:[traceId=, spanId=]
2025-06-06 15:20:52 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:20:52 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:20:52 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:20:52 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1627778965 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:20:52 [http-nio-8088-exec-6] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.reference_code=? MDC:[traceId=, spanId=]
2025-06-06 15:20:52 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [11bac8ee-fcba-428f-8b72-640bb9f6c03b] MDC:[traceId=, spanId=]
2025-06-06 15:20:52 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(2)): 11bac8ee-fcba-428f-8b72-640bb9f6c03b MDC:[traceId=, spanId=]
2025-06-06 15:20:52 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(2)#11bac8ee-fcba-428f-8b72-640bb9f6c03b] : 1417575818 MDC:[traceId=, spanId=]
2025-06-06 15:20:52 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [23000.00] MDC:[traceId=, spanId=]
2025-06-06 15:20:52 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-06 15:20:52 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T15:20:29.117384] MDC:[traceId=, spanId=]
2025-06-06 15:20:52 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-06 15:20:52 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-06 15:20:52 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-06 15:20:52 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-06 15:20:52 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-06 15:20:52 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-06 15:20:52 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 15:20:52 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-27072000-20250606152028ab0b2173] MDC:[traceId=, spanId=]
2025-06-06 15:20:52 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [PENDING] MDC:[traceId=, spanId=]
2025-06-06 15:20:52 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T15:20:28.988217] MDC:[traceId=, spanId=]
2025-06-06 15:20:52 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 15:20:52 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-06 15:20:52 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T15:20:29.117384] MDC:[traceId=, spanId=]
2025-06-06 15:20:52 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-06 15:20:52 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(2)#11bac8ee-fcba-428f-8b72-640bb9f6c03b MDC:[traceId=, spanId=]
2025-06-06 15:20:52 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1a4949d7 MDC:[traceId=, spanId=]
2025-06-06 15:20:53 [http-nio-8088-exec-6] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-06 15:20:53 [http-nio-8088-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:20:53 [http-nio-8088-exec-6] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-06 15:20:53 [http-nio-8088-exec-6] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-06 15:20:53 [http-nio-8088-exec-6] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-06 15:20:53 [http-nio-8088-exec-6] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-06 15:20:53 [http-nio-8088-exec-6] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-06 15:20:53 [http-nio-8088-exec-6] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=23000.00, fromAccountNumber=27072000, updatedBy=test123, bankType=INTERNAL, description=, type=TRANSFER, createdAt=2025-06-06T15:20:29.117384, destinationBankCode=970452, toAccountNumber=87654321, createdBy=test123, currency=VND, id=11bac8ee-fcba-428f-8b72-640bb9f6c03b, referenceCode=TXN-27072000-20250606152028ab0b2173, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=null, status=COMPLETED, timestamp=2025-06-06T15:20:28.988217, updatedAt=2025-06-06T15:20:53.029318800} MDC:[traceId=, spanId=]
2025-06-06 15:20:53 [http-nio-8088-exec-6] DEBUG org.hibernate.SQL - update tbl_transaction set amount=?,bank_type=?,created_at=?,created_by=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=?,updated_at=?,updated_by=? where id=? MDC:[traceId=, spanId=]
2025-06-06 15:20:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:20:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:20:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:20:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:20:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@c291f20 MDC:[traceId=, spanId=]
2025-06-06 15:20:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:20:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2b1d237c MDC:[traceId=, spanId=]
2025-06-06 15:20:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:20:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:20:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:20:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:20:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@789156709 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:20:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:20:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:21:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:21:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:21:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:21:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:21:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6fee12d7 MDC:[traceId=, spanId=]
2025-06-06 15:21:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:21:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4d33f870 MDC:[traceId=, spanId=]
2025-06-06 15:21:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:21:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:21:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:21:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:21:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@155996532 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:21:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:21:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:22:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:22:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:22:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:22:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:22:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4f3340d9 MDC:[traceId=, spanId=]
2025-06-06 15:22:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:22:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3d87ee5f MDC:[traceId=, spanId=]
2025-06-06 15:22:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:22:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:22:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:22:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:22:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1591275103 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:22:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:22:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:23:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:23:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:23:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:23:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:23:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@c2163c0 MDC:[traceId=, spanId=]
2025-06-06 15:23:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:23:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@404d6eda MDC:[traceId=, spanId=]
2025-06-06 15:23:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:23:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:23:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:23:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:23:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@815484273 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:23:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:23:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:24:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:24:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:24:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:24:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:24:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5bc204e2 MDC:[traceId=, spanId=]
2025-06-06 15:24:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:24:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4f03335e MDC:[traceId=, spanId=]
2025-06-06 15:24:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:24:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:24:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:24:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:24:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@984821451 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:24:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:24:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:25:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:25:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:25:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:25:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:25:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7fa4470c MDC:[traceId=, spanId=]
2025-06-06 15:25:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:25:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5ca99cd2 MDC:[traceId=, spanId=]
2025-06-06 15:25:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:25:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:25:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:25:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:25:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1981889189 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:25:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:25:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:26:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:26:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:26:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:26:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:26:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@53c39325 MDC:[traceId=, spanId=]
2025-06-06 15:26:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:26:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@77e1e01f MDC:[traceId=, spanId=]
2025-06-06 15:26:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:26:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:26:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:26:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:26:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1703163244 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:26:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:26:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:27:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:27:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:27:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:27:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:27:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6b4fdcf MDC:[traceId=, spanId=]
2025-06-06 15:27:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:27:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6ec506a MDC:[traceId=, spanId=]
2025-06-06 15:27:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:27:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:27:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:27:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:27:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@934228180 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:27:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:27:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:28:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:28:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:28:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:28:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:28:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5491a0a4 MDC:[traceId=, spanId=]
2025-06-06 15:28:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:28:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@64d63cff MDC:[traceId=, spanId=]
2025-06-06 15:28:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:28:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:28:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:28:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:28:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1169710828 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:28:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:28:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:29:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:29:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:29:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:29:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:29:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@575733cb MDC:[traceId=, spanId=]
2025-06-06 15:29:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:29:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@68a2d33e MDC:[traceId=, spanId=]
2025-06-06 15:29:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:29:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:29:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:29:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:29:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@932313542 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:29:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:29:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:30:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:30:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:30:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:30:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:30:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@65cb14cc MDC:[traceId=, spanId=]
2025-06-06 15:30:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:30:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@39939929 MDC:[traceId=, spanId=]
2025-06-06 15:30:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:30:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:30:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:30:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:30:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@619700244 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:30:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:30:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:31:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:31:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:31:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:31:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:31:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@36f19718 MDC:[traceId=, spanId=]
2025-06-06 15:31:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:31:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2e5d386b MDC:[traceId=, spanId=]
2025-06-06 15:31:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:31:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:31:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:31:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:31:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@865775157 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:31:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:31:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:32:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:32:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:32:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:32:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:32:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@8a338a2 MDC:[traceId=, spanId=]
2025-06-06 15:32:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:32:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5e3e13c3 MDC:[traceId=, spanId=]
2025-06-06 15:32:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:32:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:32:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:32:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:32:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1299251353 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:32:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:32:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:33:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:33:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:33:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:33:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:33:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2a1e1428 MDC:[traceId=, spanId=]
2025-06-06 15:33:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:33:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4cd70db7 MDC:[traceId=, spanId=]
2025-06-06 15:33:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:33:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:33:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:33:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:33:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1015054312 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:33:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:33:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:34:45 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:34:45 [http-nio-8088-exec-9] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 15:34:45 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 15:34:45 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@54be273 MDC:[traceId=, spanId=]
2025-06-06 15:34:45 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 15:34:45 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@54be273 MDC:[traceId=, spanId=]
2025-06-06 15:34:45 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 15:34:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:34:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:34:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:34:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:34:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@24088b60 MDC:[traceId=, spanId=]
2025-06-06 15:34:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:34:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@40197677 MDC:[traceId=, spanId=]
2025-06-06 15:34:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:34:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:34:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:34:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:34:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1132317327 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:34:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:34:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:35:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:35:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:35:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:35:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:35:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7e059ef MDC:[traceId=, spanId=]
2025-06-06 15:35:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:35:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@64265047 MDC:[traceId=, spanId=]
2025-06-06 15:35:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:35:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:35:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:35:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:35:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1602879506 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:35:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:35:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:36:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:36:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:36:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:36:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:36:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@34d2d681 MDC:[traceId=, spanId=]
2025-06-06 15:36:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:36:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4fc553ad MDC:[traceId=, spanId=]
2025-06-06 15:36:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:36:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:36:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:36:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:36:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@969473102 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:36:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:36:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:37:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:37:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:37:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:37:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:37:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7e7fc55c MDC:[traceId=, spanId=]
2025-06-06 15:37:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:37:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5e5b04df MDC:[traceId=, spanId=]
2025-06-06 15:37:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:37:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:37:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:37:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:37:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@326258324 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:37:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:37:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:38:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:38:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:38:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:38:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:38:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7237ced4 MDC:[traceId=, spanId=]
2025-06-06 15:38:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:38:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6ec824e7 MDC:[traceId=, spanId=]
2025-06-06 15:38:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:38:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:38:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:38:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:38:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@108778171 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:38:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:38:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:39:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:39:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:39:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:39:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:39:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7c91f6fb MDC:[traceId=, spanId=]
2025-06-06 15:39:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:39:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@436ca149 MDC:[traceId=, spanId=]
2025-06-06 15:39:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:39:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:39:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:39:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:39:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@651307054 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:39:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:39:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:40:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:40:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:40:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:40:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:40:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@71af2d85 MDC:[traceId=, spanId=]
2025-06-06 15:40:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:40:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2b25d524 MDC:[traceId=, spanId=]
2025-06-06 15:40:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:40:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:40:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:40:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:40:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1999392244 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:40:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:40:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:41:38 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:41:38 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 15:41:38 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 15:41:38 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@94d1734 MDC:[traceId=, spanId=]
2025-06-06 15:41:38 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 15:41:38 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@94d1734 MDC:[traceId=, spanId=]
2025-06-06 15:41:38 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 15:41:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:41:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:41:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:41:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:41:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4a2fe33 MDC:[traceId=, spanId=]
2025-06-06 15:41:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:41:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7847282f MDC:[traceId=, spanId=]
2025-06-06 15:41:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:41:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:41:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:41:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:41:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@523506988 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:41:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:41:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:42:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:42:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:42:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:42:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:42:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6b74ae8f MDC:[traceId=, spanId=]
2025-06-06 15:42:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:42:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3765337f MDC:[traceId=, spanId=]
2025-06-06 15:42:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:42:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:42:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:42:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:42:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1070156133 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:42:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:42:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:43:19 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:43:19 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - SELECT t.to_account_number
FROM tbl_transaction t
JOIN (
    SELECT MAX(id) AS latest_id
    FROM tbl_transaction
    WHERE from_account_number = ?
    GROUP BY to_account_number
    ORDER BY MAX(created_at) DESC
    LIMIT 5
) latest_tx
ON t.id = latest_tx.latest_id
ORDER BY t.created_at DESC;
 MDC:[traceId=, spanId=]
2025-06-06 15:43:19 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-06 15:43:19 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@624e39d4 MDC:[traceId=, spanId=]
2025-06-06 15:43:19 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [27072000] MDC:[traceId=, spanId=]
2025-06-06 15:43:19 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@624e39d4 MDC:[traceId=, spanId=]
2025-06-06 15:43:19 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [87654321] MDC:[traceId=, spanId=]
2025-06-06 15:43:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:43:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:43:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:43:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:43:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5650207a MDC:[traceId=, spanId=]
2025-06-06 15:43:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:43:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2cca3f5c MDC:[traceId=, spanId=]
2025-06-06 15:43:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:43:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:43:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:43:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:43:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1295021060 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:43:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:43:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:44:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:44:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:44:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:44:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:44:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5216dcb3 MDC:[traceId=, spanId=]
2025-06-06 15:44:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:44:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@13a04757 MDC:[traceId=, spanId=]
2025-06-06 15:44:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:44:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:44:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:44:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:44:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1348798321 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:44:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:44:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:45:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:45:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:45:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:45:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:45:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3c99b229 MDC:[traceId=, spanId=]
2025-06-06 15:45:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:45:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7df396a2 MDC:[traceId=, spanId=]
2025-06-06 15:45:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:45:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:45:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:45:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:45:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@77654501 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:45:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:45:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:46:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:46:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:46:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:46:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:46:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@30d7bf14 MDC:[traceId=, spanId=]
2025-06-06 15:46:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:46:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4a5559cb MDC:[traceId=, spanId=]
2025-06-06 15:46:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:46:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:46:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:46:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:46:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2076562891 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:46:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:46:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:47:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:47:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:47:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:47:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:47:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@59b1f38a MDC:[traceId=, spanId=]
2025-06-06 15:47:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:47:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@775a4114 MDC:[traceId=, spanId=]
2025-06-06 15:47:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:47:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:47:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:47:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:47:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1279523318 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:47:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:47:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:48:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:48:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:48:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:48:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:48:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6efb0383 MDC:[traceId=, spanId=]
2025-06-06 15:48:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:48:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@623aba7 MDC:[traceId=, spanId=]
2025-06-06 15:48:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:48:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:48:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:48:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:48:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1397349110 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:48:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:48:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:49:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:49:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:49:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:49:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:49:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6121de53 MDC:[traceId=, spanId=]
2025-06-06 15:49:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:49:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@250bb3af MDC:[traceId=, spanId=]
2025-06-06 15:49:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:49:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:49:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:49:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:49:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@19834766 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:49:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:49:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:50:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:50:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:50:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:50:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:50:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@492901d8 MDC:[traceId=, spanId=]
2025-06-06 15:50:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:50:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4b2db653 MDC:[traceId=, spanId=]
2025-06-06 15:50:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:50:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:50:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:50:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:50:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@314970000 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:50:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:50:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:51:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:51:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:51:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:51:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:51:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@140c349a MDC:[traceId=, spanId=]
2025-06-06 15:51:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:51:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1a58efe1 MDC:[traceId=, spanId=]
2025-06-06 15:51:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:51:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:51:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:51:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:51:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1471340609 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:51:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:51:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:52:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:52:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:52:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:52:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:52:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@e459aa4 MDC:[traceId=, spanId=]
2025-06-06 15:52:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:52:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@23dac51 MDC:[traceId=, spanId=]
2025-06-06 15:52:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:52:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:52:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:52:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:52:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1487419046 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:52:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:52:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:53:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:53:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:53:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:53:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:53:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@f1b881f MDC:[traceId=, spanId=]
2025-06-06 15:53:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:53:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@764e6353 MDC:[traceId=, spanId=]
2025-06-06 15:53:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:53:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:53:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:53:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:53:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1900452984 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:53:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:53:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:54:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:54:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:54:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:54:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:54:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6494df9a MDC:[traceId=, spanId=]
2025-06-06 15:54:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:54:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@47309e6b MDC:[traceId=, spanId=]
2025-06-06 15:54:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:54:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:54:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:54:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:54:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@151962474 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:54:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:54:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:55:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:55:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:55:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:55:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:55:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@48d1b03d MDC:[traceId=, spanId=]
2025-06-06 15:55:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:55:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@48ce5336 MDC:[traceId=, spanId=]
2025-06-06 15:55:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:55:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:55:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:55:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:55:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2077261265 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:55:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:55:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:56:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:56:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:56:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:56:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:56:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@66694e1f MDC:[traceId=, spanId=]
2025-06-06 15:56:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:56:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@13aa3054 MDC:[traceId=, spanId=]
2025-06-06 15:56:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:56:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:56:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:56:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:56:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@163642017 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:56:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:56:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:57:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:57:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:57:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:57:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:57:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2b8ef7d1 MDC:[traceId=, spanId=]
2025-06-06 15:57:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:57:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@511346f2 MDC:[traceId=, spanId=]
2025-06-06 15:57:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:57:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:57:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:57:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:57:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@105475715 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:57:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:57:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:58:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:58:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:58:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:58:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:58:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@72ae6a6a MDC:[traceId=, spanId=]
2025-06-06 15:58:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:58:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@75926c63 MDC:[traceId=, spanId=]
2025-06-06 15:58:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:58:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:58:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:58:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:58:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1469141498 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:58:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:58:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 15:59:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 15:59:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 15:59:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 15:59:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 15:59:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5c96dcab MDC:[traceId=, spanId=]
2025-06-06 15:59:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 15:59:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1e94f755 MDC:[traceId=, spanId=]
2025-06-06 15:59:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 15:59:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 15:59:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 15:59:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 15:59:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1944485485 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 15:59:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 15:59:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:00:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:00:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:00:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:00:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:00:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@50b14a65 MDC:[traceId=, spanId=]
2025-06-06 16:00:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:00:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@68e9ac48 MDC:[traceId=, spanId=]
2025-06-06 16:00:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:00:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:00:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:00:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:00:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1099872084 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:00:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:00:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:01:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:01:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:01:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:01:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:01:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5652a216 MDC:[traceId=, spanId=]
2025-06-06 16:01:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:01:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7bae824c MDC:[traceId=, spanId=]
2025-06-06 16:01:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:01:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:01:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:01:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:01:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1479460272 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:01:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:01:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:02:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:02:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:02:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:02:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:02:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@59ef7111 MDC:[traceId=, spanId=]
2025-06-06 16:02:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:02:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@157881b3 MDC:[traceId=, spanId=]
2025-06-06 16:02:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:02:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:02:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:02:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:02:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@382756430 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:02:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:02:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:03:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:03:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:03:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:03:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:03:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@60516786 MDC:[traceId=, spanId=]
2025-06-06 16:03:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:03:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@668776bc MDC:[traceId=, spanId=]
2025-06-06 16:03:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:03:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:03:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:03:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:03:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@783782149 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:03:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:03:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:04:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:04:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:04:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:04:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:04:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2b5bb6e4 MDC:[traceId=, spanId=]
2025-06-06 16:04:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:04:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@68a68e5d MDC:[traceId=, spanId=]
2025-06-06 16:04:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:04:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:04:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:04:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:04:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1953697296 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:04:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:04:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:05:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:05:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:05:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:05:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:05:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4fbd9414 MDC:[traceId=, spanId=]
2025-06-06 16:05:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:05:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4dd5febb MDC:[traceId=, spanId=]
2025-06-06 16:05:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:05:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:05:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:05:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:05:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1151982518 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:05:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:05:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:06:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:06:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:06:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:06:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:06:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@70f6b6df MDC:[traceId=, spanId=]
2025-06-06 16:06:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:06:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1d7013fe MDC:[traceId=, spanId=]
2025-06-06 16:06:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:06:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:06:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:06:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:06:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1529863895 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:06:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:06:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:07:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:07:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:07:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:07:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:07:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@457f9822 MDC:[traceId=, spanId=]
2025-06-06 16:07:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:07:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2c76ef02 MDC:[traceId=, spanId=]
2025-06-06 16:07:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:07:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:07:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:07:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:07:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@150035754 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:07:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:07:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:08:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:08:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:08:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:08:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:08:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@72929066 MDC:[traceId=, spanId=]
2025-06-06 16:08:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:08:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@241ab40 MDC:[traceId=, spanId=]
2025-06-06 16:08:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:08:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:08:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:08:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:08:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1651790130 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:08:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:08:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:09:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:09:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:09:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:09:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:09:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4eb1c014 MDC:[traceId=, spanId=]
2025-06-06 16:09:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:09:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3320ec21 MDC:[traceId=, spanId=]
2025-06-06 16:09:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:09:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:09:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:09:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:09:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1664096819 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:09:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:09:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:10:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:10:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:10:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:10:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:10:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@729c3fe1 MDC:[traceId=, spanId=]
2025-06-06 16:10:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:10:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4624fb50 MDC:[traceId=, spanId=]
2025-06-06 16:10:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:10:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:10:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:10:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:10:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1941332738 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:10:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:10:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:11:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:11:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:11:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:11:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:11:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@78285e47 MDC:[traceId=, spanId=]
2025-06-06 16:11:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:11:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5235f8b1 MDC:[traceId=, spanId=]
2025-06-06 16:11:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:11:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:11:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:11:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:11:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1886968108 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:11:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:11:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:12:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:12:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:12:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:12:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:12:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@35f559d1 MDC:[traceId=, spanId=]
2025-06-06 16:12:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:12:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@535a00b1 MDC:[traceId=, spanId=]
2025-06-06 16:12:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:12:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:12:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:12:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:12:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1804512064 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:12:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:12:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:13:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:13:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:13:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:13:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:13:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4cf9902b MDC:[traceId=, spanId=]
2025-06-06 16:13:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:13:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@618c53a9 MDC:[traceId=, spanId=]
2025-06-06 16:13:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:13:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:13:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:13:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:13:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@134677468 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:13:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:13:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:14:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:14:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:14:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:14:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:14:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@444173b4 MDC:[traceId=, spanId=]
2025-06-06 16:14:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:14:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3c94f08b MDC:[traceId=, spanId=]
2025-06-06 16:14:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:14:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:14:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:14:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:14:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2127601522 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:14:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:14:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:15:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:15:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:15:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:15:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:15:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@f6790b5 MDC:[traceId=, spanId=]
2025-06-06 16:15:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:15:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@72d919ed MDC:[traceId=, spanId=]
2025-06-06 16:15:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:15:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:15:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:15:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:15:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@973392882 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:15:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:15:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:16:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:16:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:16:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:16:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:16:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3da3ea87 MDC:[traceId=, spanId=]
2025-06-06 16:16:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:16:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@488d6de1 MDC:[traceId=, spanId=]
2025-06-06 16:16:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:16:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:16:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:16:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:16:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@175978449 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:16:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:16:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:17:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:17:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:17:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:17:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:17:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@63e30860 MDC:[traceId=, spanId=]
2025-06-06 16:17:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:17:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@f56513e MDC:[traceId=, spanId=]
2025-06-06 16:17:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:17:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:17:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:17:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:17:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1493107488 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:17:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:17:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:18:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:18:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:18:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:18:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:18:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2cbbb1f3 MDC:[traceId=, spanId=]
2025-06-06 16:18:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:18:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6d4d6642 MDC:[traceId=, spanId=]
2025-06-06 16:18:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:18:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:18:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:18:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:18:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1285447618 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:18:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:18:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:19:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:19:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:19:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:19:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:19:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6ffc39d8 MDC:[traceId=, spanId=]
2025-06-06 16:19:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:19:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3858accd MDC:[traceId=, spanId=]
2025-06-06 16:19:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:19:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:19:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:19:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:19:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1877313511 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:19:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:19:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:20:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:20:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:20:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:20:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:20:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4e339be6 MDC:[traceId=, spanId=]
2025-06-06 16:20:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:20:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7509245b MDC:[traceId=, spanId=]
2025-06-06 16:20:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:20:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:20:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:20:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:20:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1763984481 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:20:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:20:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:21:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:21:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:21:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:21:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:21:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@76381b9f MDC:[traceId=, spanId=]
2025-06-06 16:21:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:21:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@50b8653b MDC:[traceId=, spanId=]
2025-06-06 16:21:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:21:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:21:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:21:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:21:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@929099302 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:21:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:21:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:22:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:22:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:22:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:22:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:22:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3523015a MDC:[traceId=, spanId=]
2025-06-06 16:22:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:22:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6d337d36 MDC:[traceId=, spanId=]
2025-06-06 16:22:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:22:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:22:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:22:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:22:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@198982407 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:22:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:22:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:23:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:23:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:23:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:23:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:23:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3fa7380 MDC:[traceId=, spanId=]
2025-06-06 16:23:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:23:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@150f6daa MDC:[traceId=, spanId=]
2025-06-06 16:23:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:23:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:23:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:23:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:23:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1639129816 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:23:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:23:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:24:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:24:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:24:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:24:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:24:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3f13e616 MDC:[traceId=, spanId=]
2025-06-06 16:24:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:24:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5b81b48f MDC:[traceId=, spanId=]
2025-06-06 16:24:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:24:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:24:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:24:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:24:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@710649831 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:24:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:24:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:25:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:25:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:25:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:25:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:25:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@45234173 MDC:[traceId=, spanId=]
2025-06-06 16:25:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:25:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3c5b778c MDC:[traceId=, spanId=]
2025-06-06 16:25:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:25:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:25:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:25:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:25:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1161667185 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:25:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:25:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:26:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:26:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:26:59 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:26:59 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:26:59 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3e7b6b76 MDC:[traceId=, spanId=]
2025-06-06 16:26:59 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:26:59 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@180bbb2b MDC:[traceId=, spanId=]
2025-06-06 16:26:59 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:26:59 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:26:59 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:26:59 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:26:59 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1908067518 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:26:59 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:26:59 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:27:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:27:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:27:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:27:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:27:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@b561eb6 MDC:[traceId=, spanId=]
2025-06-06 16:27:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:27:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3e4dfc3 MDC:[traceId=, spanId=]
2025-06-06 16:27:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:27:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:27:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:27:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:27:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@176577757 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:27:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:27:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:28:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:28:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:28:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:28:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:28:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@a5f5bcb MDC:[traceId=, spanId=]
2025-06-06 16:28:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:28:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7c63774 MDC:[traceId=, spanId=]
2025-06-06 16:28:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:28:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:28:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:28:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:28:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2030846380 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:28:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:28:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:29:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:29:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:29:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:29:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:29:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@287636aa MDC:[traceId=, spanId=]
2025-06-06 16:29:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:29:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@22d2b9c1 MDC:[traceId=, spanId=]
2025-06-06 16:29:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:29:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:29:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:29:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:29:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2029512415 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:29:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:29:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:30:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:30:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:30:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:30:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:30:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2c649590 MDC:[traceId=, spanId=]
2025-06-06 16:30:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:30:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6e98e08d MDC:[traceId=, spanId=]
2025-06-06 16:30:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:30:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:30:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:30:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:30:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2065261917 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:30:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:30:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:31:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:31:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:31:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:31:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:31:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@14943dd6 MDC:[traceId=, spanId=]
2025-06-06 16:31:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:31:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@45af5d71 MDC:[traceId=, spanId=]
2025-06-06 16:31:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:31:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:31:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:31:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:31:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1366097950 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:31:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:31:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:32:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:32:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:32:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:32:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:32:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@36074c20 MDC:[traceId=, spanId=]
2025-06-06 16:32:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:32:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4f4ae619 MDC:[traceId=, spanId=]
2025-06-06 16:32:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:32:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:32:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:32:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:32:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2018923381 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:32:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:32:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:33:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:33:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:33:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:33:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:33:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7adf17c3 MDC:[traceId=, spanId=]
2025-06-06 16:33:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:33:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1411862c MDC:[traceId=, spanId=]
2025-06-06 16:33:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:33:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:33:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:33:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:33:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1007484974 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:33:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:33:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:34:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:34:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:34:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:34:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:34:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@8f94bab MDC:[traceId=, spanId=]
2025-06-06 16:34:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:34:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@17d35056 MDC:[traceId=, spanId=]
2025-06-06 16:34:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:34:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:34:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:34:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:34:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@828077079 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:34:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:34:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:35:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:35:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:35:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:35:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:35:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@37bea981 MDC:[traceId=, spanId=]
2025-06-06 16:35:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:35:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@70318923 MDC:[traceId=, spanId=]
2025-06-06 16:35:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:35:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:35:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:35:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:35:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1854743673 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:35:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:35:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:36:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:36:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:36:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:36:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:36:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6ca01e88 MDC:[traceId=, spanId=]
2025-06-06 16:36:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:36:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@21a6eb4c MDC:[traceId=, spanId=]
2025-06-06 16:36:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:36:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:36:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:36:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:36:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1482367552 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:36:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:36:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:37:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:37:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:37:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:37:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:37:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1c4a1342 MDC:[traceId=, spanId=]
2025-06-06 16:37:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:37:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3d68e780 MDC:[traceId=, spanId=]
2025-06-06 16:37:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:37:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:37:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:37:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:37:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1934934781 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:37:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:37:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:38:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:38:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:38:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:38:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:38:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@73dc68a4 MDC:[traceId=, spanId=]
2025-06-06 16:38:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:38:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@64370931 MDC:[traceId=, spanId=]
2025-06-06 16:38:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:38:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:38:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:38:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:38:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1594490628 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:38:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:38:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:39:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:39:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:39:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:39:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:39:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6b82e593 MDC:[traceId=, spanId=]
2025-06-06 16:39:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:39:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@c5946e9 MDC:[traceId=, spanId=]
2025-06-06 16:39:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:39:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:39:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:39:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:39:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1479895614 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:39:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:39:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:40:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:40:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:40:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:40:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:40:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@14fc26b MDC:[traceId=, spanId=]
2025-06-06 16:40:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:40:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@72ef38b3 MDC:[traceId=, spanId=]
2025-06-06 16:40:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:40:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:40:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:40:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:40:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1816583487 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:40:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:40:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:41:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:41:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:41:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:41:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:41:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@263ed79c MDC:[traceId=, spanId=]
2025-06-06 16:41:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:41:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@d90d2a5 MDC:[traceId=, spanId=]
2025-06-06 16:41:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:41:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:41:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:41:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:41:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@677857897 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:41:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:41:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:42:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:42:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:42:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:42:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:42:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1924d1ba MDC:[traceId=, spanId=]
2025-06-06 16:42:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:42:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@a5e6f94 MDC:[traceId=, spanId=]
2025-06-06 16:42:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:42:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:42:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:42:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:42:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1311246665 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:42:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:42:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:43:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:43:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:43:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:43:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:43:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2e3fcf0e MDC:[traceId=, spanId=]
2025-06-06 16:43:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:43:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@15b5854e MDC:[traceId=, spanId=]
2025-06-06 16:43:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:43:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:43:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:43:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:43:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@867729190 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:43:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:43:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:44:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:44:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:44:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:44:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:44:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6685ad57 MDC:[traceId=, spanId=]
2025-06-06 16:44:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:44:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1f784e8 MDC:[traceId=, spanId=]
2025-06-06 16:44:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:44:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:44:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:44:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:44:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@454640322 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:44:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:44:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:45:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:45:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:45:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:45:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:45:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3fd5e883 MDC:[traceId=, spanId=]
2025-06-06 16:45:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:45:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5983be17 MDC:[traceId=, spanId=]
2025-06-06 16:45:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:45:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:45:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:45:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:45:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@8936912 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:45:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:45:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:46:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:46:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:46:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:46:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:46:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3fda0f16 MDC:[traceId=, spanId=]
2025-06-06 16:46:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:46:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@408530c MDC:[traceId=, spanId=]
2025-06-06 16:46:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:46:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:46:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:46:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:46:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@285585856 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:46:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:46:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:47:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:47:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:47:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:47:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:47:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@37e58a99 MDC:[traceId=, spanId=]
2025-06-06 16:47:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:47:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@50982cb5 MDC:[traceId=, spanId=]
2025-06-06 16:47:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:47:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:47:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:47:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:47:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1962225032 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:47:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:47:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:48:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:48:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:48:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:48:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:48:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1f03d461 MDC:[traceId=, spanId=]
2025-06-06 16:48:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:48:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1a167588 MDC:[traceId=, spanId=]
2025-06-06 16:48:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:48:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:48:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:48:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:48:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@724201914 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:48:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:48:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:49:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:49:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:49:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:49:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:49:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@33140ae4 MDC:[traceId=, spanId=]
2025-06-06 16:49:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:49:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@44d49515 MDC:[traceId=, spanId=]
2025-06-06 16:49:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:49:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:49:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:49:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:49:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1271468679 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:49:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:49:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:50:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:50:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:50:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:50:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:50:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7c0e8dda MDC:[traceId=, spanId=]
2025-06-06 16:50:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:50:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@21cee8cb MDC:[traceId=, spanId=]
2025-06-06 16:50:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:50:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:50:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:50:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:50:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1855486465 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:50:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:50:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:51:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:51:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:51:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:51:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:51:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@12016a5c MDC:[traceId=, spanId=]
2025-06-06 16:51:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:51:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2a20798d MDC:[traceId=, spanId=]
2025-06-06 16:51:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:51:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:51:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:51:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:51:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@764108451 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:51:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:51:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:52:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:52:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:52:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:52:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:52:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@eee6591 MDC:[traceId=, spanId=]
2025-06-06 16:52:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:52:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@355483a0 MDC:[traceId=, spanId=]
2025-06-06 16:52:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:52:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:52:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:52:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:52:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1056701267 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:52:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:52:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:53:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:53:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:53:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:53:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:53:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1de7b09e MDC:[traceId=, spanId=]
2025-06-06 16:53:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:53:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4883526e MDC:[traceId=, spanId=]
2025-06-06 16:53:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:53:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:53:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:53:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:53:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@81470726 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:53:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:53:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:54:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:54:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:54:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:54:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:54:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6f1248ca MDC:[traceId=, spanId=]
2025-06-06 16:54:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:54:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@145472c3 MDC:[traceId=, spanId=]
2025-06-06 16:54:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:54:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:54:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:54:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:54:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@428756827 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:54:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:54:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:55:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:55:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:55:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:55:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:55:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2d090a34 MDC:[traceId=, spanId=]
2025-06-06 16:55:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:55:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@37b44b24 MDC:[traceId=, spanId=]
2025-06-06 16:55:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:55:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:55:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:55:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:55:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1844594623 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:55:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:55:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:56:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:56:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:56:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:56:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:56:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@18c3dc76 MDC:[traceId=, spanId=]
2025-06-06 16:56:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:56:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1882cfb3 MDC:[traceId=, spanId=]
2025-06-06 16:56:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:56:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:56:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:56:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:56:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@656497551 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:56:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:56:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:57:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:57:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:57:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:57:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:57:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@324c4f2b MDC:[traceId=, spanId=]
2025-06-06 16:57:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:57:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@11235c00 MDC:[traceId=, spanId=]
2025-06-06 16:57:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:57:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:57:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:57:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:57:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@6080495 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:57:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:57:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:58:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:58:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:58:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:58:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:58:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@15ce3306 MDC:[traceId=, spanId=]
2025-06-06 16:58:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:58:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@70d8bf02 MDC:[traceId=, spanId=]
2025-06-06 16:58:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:58:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:58:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:58:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:58:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@347845478 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:58:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:58:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 16:59:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 16:59:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 16:59:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 16:59:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 16:59:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@536b6cae MDC:[traceId=, spanId=]
2025-06-06 16:59:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 16:59:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@60a7e3ab MDC:[traceId=, spanId=]
2025-06-06 16:59:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 16:59:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 16:59:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 16:59:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 16:59:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@707243497 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 16:59:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 16:59:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:00:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:00:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:00:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:00:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:00:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@221c616c MDC:[traceId=, spanId=]
2025-06-06 17:00:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:00:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3b9a56 MDC:[traceId=, spanId=]
2025-06-06 17:00:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:00:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:00:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:00:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:00:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2114532605 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:00:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:00:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:01:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:01:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:01:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:01:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:01:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@57a06803 MDC:[traceId=, spanId=]
2025-06-06 17:01:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:01:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@36ea2dae MDC:[traceId=, spanId=]
2025-06-06 17:01:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:01:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:01:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:01:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:01:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2140059729 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:01:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:01:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:02:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:02:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:02:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:02:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:02:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3319cb22 MDC:[traceId=, spanId=]
2025-06-06 17:02:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:02:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5a29dda1 MDC:[traceId=, spanId=]
2025-06-06 17:02:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:02:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:02:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:02:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:02:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@535027312 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:02:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:02:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:03:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:03:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:03:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:03:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:03:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@e6c38cb MDC:[traceId=, spanId=]
2025-06-06 17:03:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:03:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@51f8ac25 MDC:[traceId=, spanId=]
2025-06-06 17:03:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:03:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:03:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:03:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:03:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@322142815 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:03:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:03:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:04:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:04:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:04:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:04:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:04:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7b329c MDC:[traceId=, spanId=]
2025-06-06 17:04:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:04:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2930293b MDC:[traceId=, spanId=]
2025-06-06 17:04:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:04:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:04:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:04:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:04:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@131056032 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:04:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:04:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:05:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:05:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:05:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:05:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:05:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1cb493b5 MDC:[traceId=, spanId=]
2025-06-06 17:05:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:05:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7bc79799 MDC:[traceId=, spanId=]
2025-06-06 17:05:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:05:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:05:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:05:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:05:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1726180253 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:05:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:05:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:06:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:06:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:06:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:06:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:06:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@737a5773 MDC:[traceId=, spanId=]
2025-06-06 17:06:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:06:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6f64d9c4 MDC:[traceId=, spanId=]
2025-06-06 17:06:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:06:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:06:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:06:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:06:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@573670301 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:06:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:06:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:07:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:07:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:07:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:07:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:07:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3a27b14c MDC:[traceId=, spanId=]
2025-06-06 17:07:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:07:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@58ab8e5a MDC:[traceId=, spanId=]
2025-06-06 17:07:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:07:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:07:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:07:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:07:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@789495764 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:07:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:07:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:08:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:08:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:08:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:08:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:08:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@40ff6fa MDC:[traceId=, spanId=]
2025-06-06 17:08:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:08:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1620167f MDC:[traceId=, spanId=]
2025-06-06 17:08:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:08:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:08:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:08:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:08:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@793534107 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:08:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:08:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:09:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:09:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:09:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:09:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:09:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@40412edf MDC:[traceId=, spanId=]
2025-06-06 17:09:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:09:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@a7cfb8b MDC:[traceId=, spanId=]
2025-06-06 17:09:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:09:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:09:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:09:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:09:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@482134360 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:09:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:09:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:10:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:10:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:10:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:10:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:10:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@24508cce MDC:[traceId=, spanId=]
2025-06-06 17:10:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:10:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@203e7295 MDC:[traceId=, spanId=]
2025-06-06 17:10:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:10:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:10:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:10:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:10:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1342155084 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:10:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:10:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:11:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:11:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:11:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:11:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:11:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7431470f MDC:[traceId=, spanId=]
2025-06-06 17:11:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:11:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7cf79da0 MDC:[traceId=, spanId=]
2025-06-06 17:11:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:11:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:11:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:11:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:11:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@740749266 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:11:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:11:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:12:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:12:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:12:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:12:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:12:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@14d7fa6b MDC:[traceId=, spanId=]
2025-06-06 17:12:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:12:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@654aa93c MDC:[traceId=, spanId=]
2025-06-06 17:12:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:12:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:12:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:12:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:12:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@810600016 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:12:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:12:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:13:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:13:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:13:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:13:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:13:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5347fa1f MDC:[traceId=, spanId=]
2025-06-06 17:13:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:13:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5a6a26f2 MDC:[traceId=, spanId=]
2025-06-06 17:13:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:13:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:13:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:13:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:13:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1408876265 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:13:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:13:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:14:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:14:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:14:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:14:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:14:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7cd17043 MDC:[traceId=, spanId=]
2025-06-06 17:14:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:14:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@18f41c16 MDC:[traceId=, spanId=]
2025-06-06 17:14:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:14:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:14:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:14:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:14:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@855727576 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:14:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:14:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:15:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:15:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:15:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:15:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:15:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7a9e05af MDC:[traceId=, spanId=]
2025-06-06 17:15:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:15:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@130839aa MDC:[traceId=, spanId=]
2025-06-06 17:15:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:15:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:15:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:15:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:15:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1640800933 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:15:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:15:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:16:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:16:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:16:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:16:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:16:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@28d5b05d MDC:[traceId=, spanId=]
2025-06-06 17:16:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:16:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@15303147 MDC:[traceId=, spanId=]
2025-06-06 17:16:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:16:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:16:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:16:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:16:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1816921789 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:16:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:16:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:17:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:17:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:17:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:17:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:17:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4066fc41 MDC:[traceId=, spanId=]
2025-06-06 17:17:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:17:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@10f2c217 MDC:[traceId=, spanId=]
2025-06-06 17:17:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:17:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:17:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:17:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:17:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1334787153 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:17:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:17:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:18:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:18:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:18:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:18:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:18:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3985f667 MDC:[traceId=, spanId=]
2025-06-06 17:18:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:18:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@f3f33d7 MDC:[traceId=, spanId=]
2025-06-06 17:18:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:18:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:18:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:18:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:18:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1113065870 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:18:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:18:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:19:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:19:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:19:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:19:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:19:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6d9561fb MDC:[traceId=, spanId=]
2025-06-06 17:19:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:19:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3d18b8db MDC:[traceId=, spanId=]
2025-06-06 17:19:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:19:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:19:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:19:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:19:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@250003345 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:19:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:19:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:20:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:20:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:20:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:20:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:20:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6b721a33 MDC:[traceId=, spanId=]
2025-06-06 17:20:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:20:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@ff28ff1 MDC:[traceId=, spanId=]
2025-06-06 17:20:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:20:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:20:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:20:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:20:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1416338931 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:20:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:20:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:21:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:21:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:21:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:21:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:21:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5ed6cab MDC:[traceId=, spanId=]
2025-06-06 17:21:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:21:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@66bb70ca MDC:[traceId=, spanId=]
2025-06-06 17:21:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:21:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:21:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:21:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:21:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2083674826 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:21:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:21:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:22:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:22:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:22:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:22:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:22:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@60bd2c0e MDC:[traceId=, spanId=]
2025-06-06 17:22:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:22:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3ed1e48e MDC:[traceId=, spanId=]
2025-06-06 17:22:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:22:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:22:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:22:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:22:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@406103459 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:22:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:22:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:23:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:23:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:23:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:23:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:23:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4761a99f MDC:[traceId=, spanId=]
2025-06-06 17:23:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:23:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@26d9f180 MDC:[traceId=, spanId=]
2025-06-06 17:23:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:23:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:23:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:23:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:23:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@848854627 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:23:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:23:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:24:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:24:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:24:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:24:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:24:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@60846ba5 MDC:[traceId=, spanId=]
2025-06-06 17:24:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:24:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7d3f92cb MDC:[traceId=, spanId=]
2025-06-06 17:24:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:24:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:24:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:24:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:24:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1344838621 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:24:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:24:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:25:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:25:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:25:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:25:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:25:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@363466e4 MDC:[traceId=, spanId=]
2025-06-06 17:25:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:25:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@77ee4b26 MDC:[traceId=, spanId=]
2025-06-06 17:25:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:25:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:25:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:25:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:25:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1024371867 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:25:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:25:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:26:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:26:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:26:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:26:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:26:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@63302c9f MDC:[traceId=, spanId=]
2025-06-06 17:26:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:26:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7136e2df MDC:[traceId=, spanId=]
2025-06-06 17:26:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:26:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:26:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:26:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:26:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1094082211 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:26:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:26:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:27:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:27:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:27:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:27:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:27:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@8eaca58 MDC:[traceId=, spanId=]
2025-06-06 17:27:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:27:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@48898fe9 MDC:[traceId=, spanId=]
2025-06-06 17:27:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:27:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:27:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:27:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:27:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@353472236 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:27:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:27:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:28:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:28:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:28:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:28:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:28:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@49c4c21 MDC:[traceId=, spanId=]
2025-06-06 17:28:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:28:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6c181b65 MDC:[traceId=, spanId=]
2025-06-06 17:28:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:28:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:28:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:28:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:28:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@687504408 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:28:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:28:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:29:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:29:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:29:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:29:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:29:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1b18dad0 MDC:[traceId=, spanId=]
2025-06-06 17:29:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:29:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4618d156 MDC:[traceId=, spanId=]
2025-06-06 17:29:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:29:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:29:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:29:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:29:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1862532658 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:29:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:29:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:30:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:30:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:30:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:30:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:30:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@590f07c6 MDC:[traceId=, spanId=]
2025-06-06 17:30:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:30:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7f8b5b77 MDC:[traceId=, spanId=]
2025-06-06 17:30:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:30:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:30:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:30:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:30:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@290259316 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:30:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:30:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:31:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:31:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:31:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:31:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:31:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@312ea2dd MDC:[traceId=, spanId=]
2025-06-06 17:31:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:31:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4ad049f5 MDC:[traceId=, spanId=]
2025-06-06 17:31:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:31:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:31:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:31:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:31:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1664257378 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:31:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:31:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:32:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:32:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:32:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:32:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:32:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@49e637b3 MDC:[traceId=, spanId=]
2025-06-06 17:32:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:32:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1514b8e7 MDC:[traceId=, spanId=]
2025-06-06 17:32:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:32:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:32:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:32:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:32:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1378443446 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:32:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:32:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:33:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:33:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:33:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:33:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:33:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2c392bf6 MDC:[traceId=, spanId=]
2025-06-06 17:33:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:33:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6fe0194c MDC:[traceId=, spanId=]
2025-06-06 17:33:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:33:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:33:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:33:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:33:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2021103403 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:33:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:33:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:34:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:34:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:34:59 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:34:59 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:34:59 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@588c6e6f MDC:[traceId=, spanId=]
2025-06-06 17:34:59 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:34:59 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@8adee63 MDC:[traceId=, spanId=]
2025-06-06 17:34:59 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:34:59 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:34:59 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:34:59 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:34:59 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1911771012 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:34:59 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:34:59 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:35:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:35:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:35:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:35:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:35:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3a09d13f MDC:[traceId=, spanId=]
2025-06-06 17:35:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:35:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6efbae9e MDC:[traceId=, spanId=]
2025-06-06 17:35:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:35:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:35:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:35:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:35:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1657183022 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:35:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:35:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:36:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-06 17:36:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-06 17:36:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-06 17:36:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-06 17:36:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5d05412d MDC:[traceId=, spanId=]
2025-06-06 17:36:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-06 17:36:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@26ed43e2 MDC:[traceId=, spanId=]
2025-06-06 17:36:58 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-06 17:36:58 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-06 17:36:58 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-06 17:36:58 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-06 17:36:58 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1669419375 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-06 17:36:58 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-06 17:36:58 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-06 17:37:03 [SpringContextShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-06-06 17:37:03 [SpringContextShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@31f8429e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4c7c0c5c] MDC:[traceId=, spanId=]
2025-06-06 17:37:03 [SpringContextShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-06 17:37:03 [SpringContextShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
